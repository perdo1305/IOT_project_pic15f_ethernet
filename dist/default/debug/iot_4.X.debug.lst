

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Jun 13 22:20:19 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18LF26K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,space=0,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1,group=3
    72                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1,group=1
    73                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1,group=1
    74                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1,group=1
    75                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1,group=2
    76                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1,group=2
    77                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1,group=1
    78                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1,group=1
    79                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1,group=1
    80                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1,group=1
    81                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1,group=3
    82                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1,group=3
    83                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1,group=3
    86                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1,group=2
    87                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1,group=2
    88                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   119                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   120                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   121                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   122   000000                     
   123                           ; Version 2.40
   124                           ; Generated 17/11/2021 GMT
   125                           ; 
   126                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   127                           ; All rights reserved.
   128                           ; 
   129                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   130                           ; 
   131                           ; Redistribution and use in source and binary forms, with or without modification, are
   132                           ; permitted provided that the following conditions are met:
   133                           ; 
   134                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   135                           ;        conditions and the following disclaimer.
   136                           ; 
   137                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   138                           ;        of conditions and the following disclaimer in the documentation and/or other
   139                           ;        materials provided with the distribution. Publication is not required when
   140                           ;        this file is used in an embedded application.
   141                           ; 
   142                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   143                           ;        software without specific prior written permission.
   144                           ; 
   145                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   146                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   147                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   148                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   149                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   150                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   151                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   152                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   153                           ; 
   154                           ; 
   155                           ; Code-generator required, PIC18LF26K40 Definitions
   156                           ; 
   157                           ; SFR Addresses
   158   000FE0                     bsr             equ	4064
   159   000FE9                     fsr0            equ	4073
   160   000FEA                     fsr0h           equ	4074
   161   000FE9                     fsr0l           equ	4073
   162   000FE1                     fsr1            equ	4065
   163   000FE2                     fsr1h           equ	4066
   164   000FE1                     fsr1l           equ	4065
   165   000FD9                     fsr2            equ	4057
   166   000FDA                     fsr2h           equ	4058
   167   000FD9                     fsr2l           equ	4057
   168   000FEF                     indf0           equ	4079
   169   000FE7                     indf1           equ	4071
   170   000FDF                     indf2           equ	4063
   171   000FF2                     intcon          equ	4082
   172   000F81                     nvmcon          equ	3969
   173   000FF9                     pcl             equ	4089
   174   000FFA                     pclath          equ	4090
   175   000FFB                     pclatu          equ	4091
   176   000FEB                     plusw0          equ	4075
   177   000FE3                     plusw1          equ	4067
   178   000FDB                     plusw2          equ	4059
   179   000FED                     postdec0        equ	4077
   180   000FE5                     postdec1        equ	4069
   181   000FDD                     postdec2        equ	4061
   182   000FEE                     postinc0        equ	4078
   183   000FE6                     postinc1        equ	4070
   184   000FDE                     postinc2        equ	4062
   185   000FEC                     preinc0         equ	4076
   186   000FE4                     preinc1         equ	4068
   187   000FDC                     preinc2         equ	4060
   188   000FF3                     prod            equ	4083
   189   000FF4                     prodh           equ	4084
   190   000FF3                     prodl           equ	4083
   191   000FD8                     status          equ	4056
   192   000FF5                     tablat          equ	4085
   193   000FF6                     tblptr          equ	4086
   194   000FF7                     tblptrh         equ	4087
   195   000FF6                     tblptrl         equ	4086
   196   000FF8                     tblptru         equ	4088
   197   000FFD                     tosl            equ	4093
   198   000FE8                     wreg            equ	4072
   199   000E8D                     RX2PPS          equ	3725	;# 
   200   000E8E                     CK2PPS          equ	3726	;# 
   201   000E8E                     TX2PPS          equ	3726	;# 
   202   000E8F                     SSP2CLKPPS      equ	3727	;# 
   203   000E90                     SSP2DATPPS      equ	3728	;# 
   204   000E91                     SSP2SSPPS       equ	3729	;# 
   205   000E92                     SSP2BUF         equ	3730	;# 
   206   000E93                     SSP2ADD         equ	3731	;# 
   207   000E94                     SSP2MSK         equ	3732	;# 
   208   000E95                     SSP2STAT        equ	3733	;# 
   209   000E96                     SSP2CON1        equ	3734	;# 
   210   000E97                     SSP2CON2        equ	3735	;# 
   211   000E98                     SSP2CON3        equ	3736	;# 
   212   000E99                     RC2REG          equ	3737	;# 
   213   000E99                     RCREG2          equ	3737	;# 
   214   000E9A                     TX2REG          equ	3738	;# 
   215   000E9A                     TXREG2          equ	3738	;# 
   216   000E9B                     SP2BRG          equ	3739	;# 
   217   000E9B                     SP2BRGL         equ	3739	;# 
   218   000E9B                     SPBRG2          equ	3739	;# 
   219   000E9C                     SP2BRGH         equ	3740	;# 
   220   000E9C                     SPBRGH2         equ	3740	;# 
   221   000E9D                     RC2STA          equ	3741	;# 
   222   000E9D                     RCSTA2          equ	3741	;# 
   223   000E9E                     TX2STA          equ	3742	;# 
   224   000E9E                     TXSTA2          equ	3742	;# 
   225   000E9F                     BAUD2CON        equ	3743	;# 
   226   000E9F                     BAUDCON2        equ	3743	;# 
   227   000E9F                     BAUDCTL2        equ	3743	;# 
   228   000EA0                     PPSLOCK         equ	3744	;# 
   229   000EA1                     INT0PPS         equ	3745	;# 
   230   000EA2                     INT1PPS         equ	3746	;# 
   231   000EA3                     INT2PPS         equ	3747	;# 
   232   000EA4                     T0CKIPPS        equ	3748	;# 
   233   000EA5                     T1CKIPPS        equ	3749	;# 
   234   000EA6                     T1GPPS          equ	3750	;# 
   235   000EA7                     T3CKIPPS        equ	3751	;# 
   236   000EA8                     T3GPPS          equ	3752	;# 
   237   000EA9                     T5CKIPPS        equ	3753	;# 
   238   000EAA                     T5GPPS          equ	3754	;# 
   239   000EAB                     T2INPPS         equ	3755	;# 
   240   000EAC                     T4INPPS         equ	3756	;# 
   241   000EAD                     T6INPPS         equ	3757	;# 
   242   000EAE                     ADACTPPS        equ	3758	;# 
   243   000EAF                     CCP1PPS         equ	3759	;# 
   244   000EB0                     CCP2PPS         equ	3760	;# 
   245   000EB1                     CWG1PPS         equ	3761	;# 
   246   000EB1                     CWGINPPS        equ	3761	;# 
   247   000EB2                     MDCARLPPS       equ	3762	;# 
   248   000EB3                     MDCARHPPS       equ	3763	;# 
   249   000EB4                     MDSRCPPS        equ	3764	;# 
   250   000EB5                     RX1PPS          equ	3765	;# 
   251   000EB5                     RXPPS           equ	3765	;# 
   252   000EB6                     CK1PPS          equ	3766	;# 
   253   000EB6                     TX1PPS          equ	3766	;# 
   254   000EB6                     CKPPS           equ	3766	;# 
   255   000EB6                     TXPPS           equ	3766	;# 
   256   000EB7                     SSP1CLKPPS      equ	3767	;# 
   257   000EB7                     SSPCLKPPS       equ	3767	;# 
   258   000EB8                     SSP1DATPPS      equ	3768	;# 
   259   000EB8                     SSPDATPPS       equ	3768	;# 
   260   000EB9                     SSP1SSPPS       equ	3769	;# 
   261   000EB9                     SSPSSPPS        equ	3769	;# 
   262   000EBA                     IPR0            equ	3770	;# 
   263   000EBB                     IPR1            equ	3771	;# 
   264   000EBC                     IPR2            equ	3772	;# 
   265   000EBD                     IPR3            equ	3773	;# 
   266   000EBE                     IPR4            equ	3774	;# 
   267   000EBF                     IPR5            equ	3775	;# 
   268   000EC0                     IPR6            equ	3776	;# 
   269   000EC1                     IPR7            equ	3777	;# 
   270   000EC2                     PIE0            equ	3778	;# 
   271   000EC3                     PIE1            equ	3779	;# 
   272   000EC4                     PIE2            equ	3780	;# 
   273   000EC5                     PIE3            equ	3781	;# 
   274   000EC6                     PIE4            equ	3782	;# 
   275   000EC7                     PIE5            equ	3783	;# 
   276   000EC8                     PIE6            equ	3784	;# 
   277   000EC9                     PIE7            equ	3785	;# 
   278   000ECA                     PIR0            equ	3786	;# 
   279   000ECB                     PIR1            equ	3787	;# 
   280   000ECC                     PIR2            equ	3788	;# 
   281   000ECD                     PIR3            equ	3789	;# 
   282   000ECE                     PIR4            equ	3790	;# 
   283   000ECF                     PIR5            equ	3791	;# 
   284   000ED0                     PIR6            equ	3792	;# 
   285   000ED1                     PIR7            equ	3793	;# 
   286   000ED2                     WDTCON0         equ	3794	;# 
   287   000ED3                     WDTCON1         equ	3795	;# 
   288   000ED4                     WDTPSL          equ	3796	;# 
   289   000ED5                     WDTPSH          equ	3797	;# 
   290   000ED6                     WDTTMR          equ	3798	;# 
   291   000ED7                     CPUDOZE         equ	3799	;# 
   292   000ED8                     OSCCON1         equ	3800	;# 
   293   000ED9                     OSCCON2         equ	3801	;# 
   294   000EDA                     OSCCON3         equ	3802	;# 
   295   000EDB                     OSCSTAT         equ	3803	;# 
   296   000EDB                     OSCSTAT1        equ	3803	;# 
   297   000EDC                     OSCEN           equ	3804	;# 
   298   000EDD                     OSCTUNE         equ	3805	;# 
   299   000EDE                     OSCFRQ          equ	3806	;# 
   300   000EE0                     BORCON          equ	3808	;# 
   301   000EE1                     PMD0            equ	3809	;# 
   302   000EE2                     PMD1            equ	3810	;# 
   303   000EE3                     PMD2            equ	3811	;# 
   304   000EE4                     PMD3            equ	3812	;# 
   305   000EE5                     PMD4            equ	3813	;# 
   306   000EE6                     PMD5            equ	3814	;# 
   307   000EE7                     RA0PPS          equ	3815	;# 
   308   000EE8                     RA1PPS          equ	3816	;# 
   309   000EE9                     RA2PPS          equ	3817	;# 
   310   000EEA                     RA3PPS          equ	3818	;# 
   311   000EEB                     RA4PPS          equ	3819	;# 
   312   000EEC                     RA5PPS          equ	3820	;# 
   313   000EED                     RA6PPS          equ	3821	;# 
   314   000EEE                     RA7PPS          equ	3822	;# 
   315   000EEF                     RB0PPS          equ	3823	;# 
   316   000EF0                     RB1PPS          equ	3824	;# 
   317   000EF1                     RB2PPS          equ	3825	;# 
   318   000EF2                     RB3PPS          equ	3826	;# 
   319   000EF3                     RB4PPS          equ	3827	;# 
   320   000EF4                     RB5PPS          equ	3828	;# 
   321   000EF5                     RB6PPS          equ	3829	;# 
   322   000EF6                     RB7PPS          equ	3830	;# 
   323   000EF7                     RC0PPS          equ	3831	;# 
   324   000EF8                     RC1PPS          equ	3832	;# 
   325   000EF9                     RC2PPS          equ	3833	;# 
   326   000EFA                     RC3PPS          equ	3834	;# 
   327   000EFB                     RC4PPS          equ	3835	;# 
   328   000EFC                     RC5PPS          equ	3836	;# 
   329   000EFD                     RC6PPS          equ	3837	;# 
   330   000EFE                     RC7PPS          equ	3838	;# 
   331   000F0A                     IOCAF           equ	3850	;# 
   332   000F0B                     IOCAN           equ	3851	;# 
   333   000F0C                     IOCAP           equ	3852	;# 
   334   000F0D                     INLVLA          equ	3853	;# 
   335   000F0E                     SLRCONA         equ	3854	;# 
   336   000F0F                     ODCONA          equ	3855	;# 
   337   000F10                     WPUA            equ	3856	;# 
   338   000F11                     ANSELA          equ	3857	;# 
   339   000F12                     IOCBF           equ	3858	;# 
   340   000F13                     IOCBN           equ	3859	;# 
   341   000F14                     IOCBP           equ	3860	;# 
   342   000F15                     INLVLB          equ	3861	;# 
   343   000F16                     SLRCONB         equ	3862	;# 
   344   000F17                     ODCONB          equ	3863	;# 
   345   000F18                     WPUB            equ	3864	;# 
   346   000F19                     ANSELB          equ	3865	;# 
   347   000F1A                     IOCCF           equ	3866	;# 
   348   000F1B                     IOCCN           equ	3867	;# 
   349   000F1C                     IOCCP           equ	3868	;# 
   350   000F1D                     INLVLC          equ	3869	;# 
   351   000F1E                     SLRCONC         equ	3870	;# 
   352   000F1F                     ODCONC          equ	3871	;# 
   353   000F20                     WPUC            equ	3872	;# 
   354   000F21                     ANSELC          equ	3873	;# 
   355   000F27                     IOCEF           equ	3879	;# 
   356   000F28                     IOCEN           equ	3880	;# 
   357   000F29                     IOCEP           equ	3881	;# 
   358   000F2A                     INLVLE          equ	3882	;# 
   359   000F2D                     WPUE            equ	3885	;# 
   360   000F2F                     HLVDCON0        equ	3887	;# 
   361   000F30                     HLVDCON1        equ	3888	;# 
   362   000F31                     FVRCON          equ	3889	;# 
   363   000F32                     ZCDCON          equ	3890	;# 
   364   000F33                     DAC1CON0        equ	3891	;# 
   365   000F34                     DAC1CON1        equ	3892	;# 
   366   000F35                     CM2CON0         equ	3893	;# 
   367   000F36                     CM2CON1         equ	3894	;# 
   368   000F37                     CM2NCH          equ	3895	;# 
   369   000F38                     CM2PCH          equ	3896	;# 
   370   000F39                     CM1CON0         equ	3897	;# 
   371   000F3A                     CM1CON1         equ	3898	;# 
   372   000F3B                     CM1NCH          equ	3899	;# 
   373   000F3C                     CM1PCH          equ	3900	;# 
   374   000F3D                     CMOUT           equ	3901	;# 
   375   000F3E                     CLKRCON         equ	3902	;# 
   376   000F3F                     CLKRCLK         equ	3903	;# 
   377   000F40                     CWG1CLK         equ	3904	;# 
   378   000F40                     CWG1CLKCON      equ	3904	;# 
   379   000F41                     CWG1ISM         equ	3905	;# 
   380   000F42                     CWG1DBR         equ	3906	;# 
   381   000F43                     CWG1DBF         equ	3907	;# 
   382   000F44                     CWG1CON0        equ	3908	;# 
   383   000F45                     CWG1CON1        equ	3909	;# 
   384   000F46                     CWG1AS0         equ	3910	;# 
   385   000F47                     CWG1AS1         equ	3911	;# 
   386   000F48                     CWG1STR         equ	3912	;# 
   387   000F49                     SCANLADR        equ	3913	;# 
   388   000F49                     SCANLADRL       equ	3913	;# 
   389   000F4A                     SCANLADRH       equ	3914	;# 
   390   000F4B                     SCANLADRU       equ	3915	;# 
   391   000F4C                     SCANHADR        equ	3916	;# 
   392   000F4C                     SCANHADRL       equ	3916	;# 
   393   000F4D                     SCANHADRH       equ	3917	;# 
   394   000F4E                     SCANHADRU       equ	3918	;# 
   395   000F4F                     SCANCON0        equ	3919	;# 
   396   000F50                     SCANTRIG        equ	3920	;# 
   397   000F51                     MDCON0          equ	3921	;# 
   398   000F52                     MDCON1          equ	3922	;# 
   399   000F53                     MDSRC           equ	3923	;# 
   400   000F54                     MDCARL          equ	3924	;# 
   401   000F55                     MDCARH          equ	3925	;# 
   402   000F56                     ADACT           equ	3926	;# 
   403   000F57                     ADCLK           equ	3927	;# 
   404   000F58                     ADREF           equ	3928	;# 
   405   000F59                     ADCON1          equ	3929	;# 
   406   000F5A                     ADCON2          equ	3930	;# 
   407   000F5B                     ADCON3          equ	3931	;# 
   408   000F5C                     ADACQ           equ	3932	;# 
   409   000F5D                     ADCAP           equ	3933	;# 
   410   000F5E                     ADPRE           equ	3934	;# 
   411   000F5F                     ADPCH           equ	3935	;# 
   412   000F60                     ADCON0          equ	3936	;# 
   413   000F61                     ADPREV          equ	3937	;# 
   414   000F61                     ADPREVL         equ	3937	;# 
   415   000F62                     ADPREVH         equ	3938	;# 
   416   000F63                     ADRES           equ	3939	;# 
   417   000F63                     ADRESL          equ	3939	;# 
   418   000F64                     ADRESH          equ	3940	;# 
   419   000F65                     ADSTAT          equ	3941	;# 
   420   000F66                     ADRPT           equ	3942	;# 
   421   000F67                     ADCNT           equ	3943	;# 
   422   000F68                     ADSTPT          equ	3944	;# 
   423   000F68                     ADSTPTL         equ	3944	;# 
   424   000F69                     ADSTPTH         equ	3945	;# 
   425   000F6A                     ADLTH           equ	3946	;# 
   426   000F6A                     ADLTHL          equ	3946	;# 
   427   000F6B                     ADLTHH          equ	3947	;# 
   428   000F6C                     ADUTH           equ	3948	;# 
   429   000F6C                     ADUTHL          equ	3948	;# 
   430   000F6D                     ADUTHH          equ	3949	;# 
   431   000F6E                     ADERR           equ	3950	;# 
   432   000F6E                     ADERRL          equ	3950	;# 
   433   000F6F                     ADERRH          equ	3951	;# 
   434   000F70                     ADACC           equ	3952	;# 
   435   000F70                     ADACCL          equ	3952	;# 
   436   000F71                     ADACCH          equ	3953	;# 
   437   000F72                     ADFLTR          equ	3954	;# 
   438   000F72                     ADFLTRL         equ	3954	;# 
   439   000F73                     ADFLTRH         equ	3955	;# 
   440   000F74                     CRCDATA         equ	3956	;# 
   441   000F74                     CRCDATL         equ	3956	;# 
   442   000F75                     CRCDATH         equ	3957	;# 
   443   000F76                     CRCACC          equ	3958	;# 
   444   000F76                     CRCACCL         equ	3958	;# 
   445   000F77                     CRCACCH         equ	3959	;# 
   446   000F78                     CRCSHFT         equ	3960	;# 
   447   000F78                     CRCSHIFTL       equ	3960	;# 
   448   000F79                     CRCSHIFTH       equ	3961	;# 
   449   000F7A                     CRCXOR          equ	3962	;# 
   450   000F7A                     CRCXORL         equ	3962	;# 
   451   000F7B                     CRCXORH         equ	3963	;# 
   452   000F7C                     CRCCON0         equ	3964	;# 
   453   000F7D                     CRCCON1         equ	3965	;# 
   454   000F7E                     NVMADR          equ	3966	;# 
   455   000F7E                     NVMADRL         equ	3966	;# 
   456   000F7F                     NVMADRH         equ	3967	;# 
   457   000F80                     NVMDAT          equ	3968	;# 
   458   000F81                     NVMCON1         equ	3969	;# 
   459   000F82                     NVMCON2         equ	3970	;# 
   460   000F83                     LATA            equ	3971	;# 
   461   000F84                     LATB            equ	3972	;# 
   462   000F85                     LATC            equ	3973	;# 
   463   000F88                     TRISA           equ	3976	;# 
   464   000F88                     DDRA            equ	3976	;# 
   465   000F89                     TRISB           equ	3977	;# 
   466   000F89                     DDRB            equ	3977	;# 
   467   000F8A                     TRISC           equ	3978	;# 
   468   000F8A                     DDRC            equ	3978	;# 
   469   000F8D                     PORTA           equ	3981	;# 
   470   000F8E                     PORTB           equ	3982	;# 
   471   000F8F                     PORTC           equ	3983	;# 
   472   000F91                     PORTE           equ	3985	;# 
   473   000F92                     SSP1BUF         equ	3986	;# 
   474   000F93                     SSP1ADD         equ	3987	;# 
   475   000F94                     SSP1MSK         equ	3988	;# 
   476   000F95                     SSP1STAT        equ	3989	;# 
   477   000F96                     SSP1CON1        equ	3990	;# 
   478   000F97                     SSP1CON2        equ	3991	;# 
   479   000F98                     SSP1CON3        equ	3992	;# 
   480   000F99                     RC1REG          equ	3993	;# 
   481   000F99                     RCREG           equ	3993	;# 
   482   000F99                     RCREG1          equ	3993	;# 
   483   000F9A                     TX1REG          equ	3994	;# 
   484   000F9A                     TXREG1          equ	3994	;# 
   485   000F9A                     TXREG           equ	3994	;# 
   486   000F9B                     SP1BRG          equ	3995	;# 
   487   000F9B                     SP1BRGL         equ	3995	;# 
   488   000F9B                     SPBRG           equ	3995	;# 
   489   000F9B                     SPBRG1          equ	3995	;# 
   490   000F9B                     SPBRGL          equ	3995	;# 
   491   000F9C                     SP1BRGH         equ	3996	;# 
   492   000F9C                     SPBRGH          equ	3996	;# 
   493   000F9C                     SPBRGH1         equ	3996	;# 
   494   000F9D                     RC1STA          equ	3997	;# 
   495   000F9D                     RCSTA1          equ	3997	;# 
   496   000F9D                     RCSTA           equ	3997	;# 
   497   000F9E                     TX1STA          equ	3998	;# 
   498   000F9E                     TXSTA1          equ	3998	;# 
   499   000F9E                     TXSTA           equ	3998	;# 
   500   000F9F                     BAUD1CON        equ	3999	;# 
   501   000F9F                     BAUDCON1        equ	3999	;# 
   502   000F9F                     BAUDCTL1        equ	3999	;# 
   503   000F9F                     BAUDCON         equ	3999	;# 
   504   000F9F                     BAUDCTL         equ	3999	;# 
   505   000FA0                     PWM4DC          equ	4000	;# 
   506   000FA0                     PWM4DCL         equ	4000	;# 
   507   000FA1                     PWM4DCH         equ	4001	;# 
   508   000FA2                     PWM4CON         equ	4002	;# 
   509   000FA3                     PWM3DC          equ	4003	;# 
   510   000FA3                     PWM3DCL         equ	4003	;# 
   511   000FA4                     PWM3DCH         equ	4004	;# 
   512   000FA5                     PWM3CON         equ	4005	;# 
   513   000FA6                     CCPR2           equ	4006	;# 
   514   000FA6                     CCPR2L          equ	4006	;# 
   515   000FA7                     CCPR2H          equ	4007	;# 
   516   000FA8                     CCP2CON         equ	4008	;# 
   517   000FA9                     CCP2CAP         equ	4009	;# 
   518   000FAA                     CCPR1           equ	4010	;# 
   519   000FAA                     CCPR1L          equ	4010	;# 
   520   000FAB                     CCPR1H          equ	4011	;# 
   521   000FAC                     CCP1CON         equ	4012	;# 
   522   000FAD                     CCP1CAP         equ	4013	;# 
   523   000FAE                     CCPTMRS         equ	4014	;# 
   524   000FAF                     T6TMR           equ	4015	;# 
   525   000FAF                     TMR6            equ	4015	;# 
   526   000FB0                     T6PR            equ	4016	;# 
   527   000FB0                     PR6             equ	4016	;# 
   528   000FB1                     T6CON           equ	4017	;# 
   529   000FB2                     T6HLT           equ	4018	;# 
   530   000FB3                     T6CLKCON        equ	4019	;# 
   531   000FB3                     T6CLK           equ	4019	;# 
   532   000FB4                     T6RST           equ	4020	;# 
   533   000FB5                     T4TMR           equ	4021	;# 
   534   000FB5                     TMR4            equ	4021	;# 
   535   000FB6                     T4PR            equ	4022	;# 
   536   000FB6                     PR4             equ	4022	;# 
   537   000FB7                     T4CON           equ	4023	;# 
   538   000FB8                     T4HLT           equ	4024	;# 
   539   000FB9                     T4CLKCON        equ	4025	;# 
   540   000FB9                     T4CLK           equ	4025	;# 
   541   000FBA                     T4RST           equ	4026	;# 
   542   000FBB                     T2TMR           equ	4027	;# 
   543   000FBB                     TMR2            equ	4027	;# 
   544   000FBC                     T2PR            equ	4028	;# 
   545   000FBC                     PR2             equ	4028	;# 
   546   000FBD                     T2CON           equ	4029	;# 
   547   000FBE                     T2HLT           equ	4030	;# 
   548   000FBF                     T2CLKCON        equ	4031	;# 
   549   000FBF                     T2CLK           equ	4031	;# 
   550   000FC0                     T2RST           equ	4032	;# 
   551   000FC1                     TMR5            equ	4033	;# 
   552   000FC1                     TMR5L           equ	4033	;# 
   553   000FC2                     TMR5H           equ	4034	;# 
   554   000FC3                     T5CON           equ	4035	;# 
   555   000FC4                     T5GCON          equ	4036	;# 
   556   000FC4                     PR5             equ	4036	;# 
   557   000FC5                     T5GATE          equ	4037	;# 
   558   000FC5                     TMR5GATE        equ	4037	;# 
   559   000FC6                     T5CLK           equ	4038	;# 
   560   000FC6                     TMR5CLK         equ	4038	;# 
   561   000FC7                     TMR3            equ	4039	;# 
   562   000FC7                     TMR3L           equ	4039	;# 
   563   000FC8                     TMR3H           equ	4040	;# 
   564   000FC9                     T3CON           equ	4041	;# 
   565   000FCA                     T3GCON          equ	4042	;# 
   566   000FCA                     PR3             equ	4042	;# 
   567   000FCB                     T3GATE          equ	4043	;# 
   568   000FCB                     TMR3GATE        equ	4043	;# 
   569   000FCC                     T3CLK           equ	4044	;# 
   570   000FCC                     TMR3CLK         equ	4044	;# 
   571   000FCD                     TMR1            equ	4045	;# 
   572   000FCD                     TMR1L           equ	4045	;# 
   573   000FCE                     TMR1H           equ	4046	;# 
   574   000FCF                     T1CON           equ	4047	;# 
   575   000FD0                     T1GCON          equ	4048	;# 
   576   000FD0                     PR1             equ	4048	;# 
   577   000FD1                     T1GATE          equ	4049	;# 
   578   000FD1                     TMR1GATE        equ	4049	;# 
   579   000FD2                     T1CLK           equ	4050	;# 
   580   000FD2                     TMR1CLK         equ	4050	;# 
   581   000FD3                     TMR0L           equ	4051	;# 
   582   000FD3                     TMR0            equ	4051	;# 
   583   000FD4                     TMR0H           equ	4052	;# 
   584   000FD4                     PR0             equ	4052	;# 
   585   000FD5                     T0CON0          equ	4053	;# 
   586   000FD6                     T0CON1          equ	4054	;# 
   587   000FD7                     PCON0           equ	4055	;# 
   588   000FD8                     STATUS          equ	4056	;# 
   589   000FD9                     FSR2            equ	4057	;# 
   590   000FD9                     FSR2L           equ	4057	;# 
   591   000FDA                     FSR2H           equ	4058	;# 
   592   000FDB                     PLUSW2          equ	4059	;# 
   593   000FDC                     PREINC2         equ	4060	;# 
   594   000FDD                     POSTDEC2        equ	4061	;# 
   595   000FDE                     POSTINC2        equ	4062	;# 
   596   000FDF                     INDF2           equ	4063	;# 
   597   000FE0                     BSR             equ	4064	;# 
   598   000FE1                     FSR1            equ	4065	;# 
   599   000FE1                     FSR1L           equ	4065	;# 
   600   000FE2                     FSR1H           equ	4066	;# 
   601   000FE3                     PLUSW1          equ	4067	;# 
   602   000FE4                     PREINC1         equ	4068	;# 
   603   000FE5                     POSTDEC1        equ	4069	;# 
   604   000FE6                     POSTINC1        equ	4070	;# 
   605   000FE7                     INDF1           equ	4071	;# 
   606   000FE8                     WREG            equ	4072	;# 
   607   000FE9                     FSR0            equ	4073	;# 
   608   000FE9                     FSR0L           equ	4073	;# 
   609   000FEA                     FSR0H           equ	4074	;# 
   610   000FEB                     PLUSW0          equ	4075	;# 
   611   000FEC                     PREINC0         equ	4076	;# 
   612   000FED                     POSTDEC0        equ	4077	;# 
   613   000FEE                     POSTINC0        equ	4078	;# 
   614   000FEF                     INDF0           equ	4079	;# 
   615   000FF2                     INTCON          equ	4082	;# 
   616   000FF3                     PROD            equ	4083	;# 
   617   000FF3                     PRODL           equ	4083	;# 
   618   000FF4                     PRODH           equ	4084	;# 
   619   000FF5                     TABLAT          equ	4085	;# 
   620   000FF6                     TBLPTR          equ	4086	;# 
   621   000FF6                     TBLPTRL         equ	4086	;# 
   622   000FF7                     TBLPTRH         equ	4087	;# 
   623   000FF8                     TBLPTRU         equ	4088	;# 
   624   000FF9                     PCLAT           equ	4089	;# 
   625   000FF9                     PC              equ	4089	;# 
   626   000FF9                     PCL             equ	4089	;# 
   627   000FFA                     PCLATH          equ	4090	;# 
   628   000FFB                     PCLATU          equ	4091	;# 
   629   000FFC                     STKPTR          equ	4092	;# 
   630   000FFD                     TOS             equ	4093	;# 
   631   000FFD                     TOSL            equ	4093	;# 
   632   000FFE                     TOSH            equ	4094	;# 
   633   000FFF                     TOSU            equ	4095	;# 
   634   000E8D                     RX2PPS          equ	3725	;# 
   635   000E8E                     CK2PPS          equ	3726	;# 
   636   000E8E                     TX2PPS          equ	3726	;# 
   637   000E8F                     SSP2CLKPPS      equ	3727	;# 
   638   000E90                     SSP2DATPPS      equ	3728	;# 
   639   000E91                     SSP2SSPPS       equ	3729	;# 
   640   000E92                     SSP2BUF         equ	3730	;# 
   641   000E93                     SSP2ADD         equ	3731	;# 
   642   000E94                     SSP2MSK         equ	3732	;# 
   643   000E95                     SSP2STAT        equ	3733	;# 
   644   000E96                     SSP2CON1        equ	3734	;# 
   645   000E97                     SSP2CON2        equ	3735	;# 
   646   000E98                     SSP2CON3        equ	3736	;# 
   647   000E99                     RC2REG          equ	3737	;# 
   648   000E99                     RCREG2          equ	3737	;# 
   649   000E9A                     TX2REG          equ	3738	;# 
   650   000E9A                     TXREG2          equ	3738	;# 
   651   000E9B                     SP2BRG          equ	3739	;# 
   652   000E9B                     SP2BRGL         equ	3739	;# 
   653   000E9B                     SPBRG2          equ	3739	;# 
   654   000E9C                     SP2BRGH         equ	3740	;# 
   655   000E9C                     SPBRGH2         equ	3740	;# 
   656   000E9D                     RC2STA          equ	3741	;# 
   657   000E9D                     RCSTA2          equ	3741	;# 
   658   000E9E                     TX2STA          equ	3742	;# 
   659   000E9E                     TXSTA2          equ	3742	;# 
   660   000E9F                     BAUD2CON        equ	3743	;# 
   661   000E9F                     BAUDCON2        equ	3743	;# 
   662   000E9F                     BAUDCTL2        equ	3743	;# 
   663   000EA0                     PPSLOCK         equ	3744	;# 
   664   000EA1                     INT0PPS         equ	3745	;# 
   665   000EA2                     INT1PPS         equ	3746	;# 
   666   000EA3                     INT2PPS         equ	3747	;# 
   667   000EA4                     T0CKIPPS        equ	3748	;# 
   668   000EA5                     T1CKIPPS        equ	3749	;# 
   669   000EA6                     T1GPPS          equ	3750	;# 
   670   000EA7                     T3CKIPPS        equ	3751	;# 
   671   000EA8                     T3GPPS          equ	3752	;# 
   672   000EA9                     T5CKIPPS        equ	3753	;# 
   673   000EAA                     T5GPPS          equ	3754	;# 
   674   000EAB                     T2INPPS         equ	3755	;# 
   675   000EAC                     T4INPPS         equ	3756	;# 
   676   000EAD                     T6INPPS         equ	3757	;# 
   677   000EAE                     ADACTPPS        equ	3758	;# 
   678   000EAF                     CCP1PPS         equ	3759	;# 
   679   000EB0                     CCP2PPS         equ	3760	;# 
   680   000EB1                     CWG1PPS         equ	3761	;# 
   681   000EB1                     CWGINPPS        equ	3761	;# 
   682   000EB2                     MDCARLPPS       equ	3762	;# 
   683   000EB3                     MDCARHPPS       equ	3763	;# 
   684   000EB4                     MDSRCPPS        equ	3764	;# 
   685   000EB5                     RX1PPS          equ	3765	;# 
   686   000EB5                     RXPPS           equ	3765	;# 
   687   000EB6                     CK1PPS          equ	3766	;# 
   688   000EB6                     TX1PPS          equ	3766	;# 
   689   000EB6                     CKPPS           equ	3766	;# 
   690   000EB6                     TXPPS           equ	3766	;# 
   691   000EB7                     SSP1CLKPPS      equ	3767	;# 
   692   000EB7                     SSPCLKPPS       equ	3767	;# 
   693   000EB8                     SSP1DATPPS      equ	3768	;# 
   694   000EB8                     SSPDATPPS       equ	3768	;# 
   695   000EB9                     SSP1SSPPS       equ	3769	;# 
   696   000EB9                     SSPSSPPS        equ	3769	;# 
   697   000EBA                     IPR0            equ	3770	;# 
   698   000EBB                     IPR1            equ	3771	;# 
   699   000EBC                     IPR2            equ	3772	;# 
   700   000EBD                     IPR3            equ	3773	;# 
   701   000EBE                     IPR4            equ	3774	;# 
   702   000EBF                     IPR5            equ	3775	;# 
   703   000EC0                     IPR6            equ	3776	;# 
   704   000EC1                     IPR7            equ	3777	;# 
   705   000EC2                     PIE0            equ	3778	;# 
   706   000EC3                     PIE1            equ	3779	;# 
   707   000EC4                     PIE2            equ	3780	;# 
   708   000EC5                     PIE3            equ	3781	;# 
   709   000EC6                     PIE4            equ	3782	;# 
   710   000EC7                     PIE5            equ	3783	;# 
   711   000EC8                     PIE6            equ	3784	;# 
   712   000EC9                     PIE7            equ	3785	;# 
   713   000ECA                     PIR0            equ	3786	;# 
   714   000ECB                     PIR1            equ	3787	;# 
   715   000ECC                     PIR2            equ	3788	;# 
   716   000ECD                     PIR3            equ	3789	;# 
   717   000ECE                     PIR4            equ	3790	;# 
   718   000ECF                     PIR5            equ	3791	;# 
   719   000ED0                     PIR6            equ	3792	;# 
   720   000ED1                     PIR7            equ	3793	;# 
   721   000ED2                     WDTCON0         equ	3794	;# 
   722   000ED3                     WDTCON1         equ	3795	;# 
   723   000ED4                     WDTPSL          equ	3796	;# 
   724   000ED5                     WDTPSH          equ	3797	;# 
   725   000ED6                     WDTTMR          equ	3798	;# 
   726   000ED7                     CPUDOZE         equ	3799	;# 
   727   000ED8                     OSCCON1         equ	3800	;# 
   728   000ED9                     OSCCON2         equ	3801	;# 
   729   000EDA                     OSCCON3         equ	3802	;# 
   730   000EDB                     OSCSTAT         equ	3803	;# 
   731   000EDB                     OSCSTAT1        equ	3803	;# 
   732   000EDC                     OSCEN           equ	3804	;# 
   733   000EDD                     OSCTUNE         equ	3805	;# 
   734   000EDE                     OSCFRQ          equ	3806	;# 
   735   000EE0                     BORCON          equ	3808	;# 
   736   000EE1                     PMD0            equ	3809	;# 
   737   000EE2                     PMD1            equ	3810	;# 
   738   000EE3                     PMD2            equ	3811	;# 
   739   000EE4                     PMD3            equ	3812	;# 
   740   000EE5                     PMD4            equ	3813	;# 
   741   000EE6                     PMD5            equ	3814	;# 
   742   000EE7                     RA0PPS          equ	3815	;# 
   743   000EE8                     RA1PPS          equ	3816	;# 
   744   000EE9                     RA2PPS          equ	3817	;# 
   745   000EEA                     RA3PPS          equ	3818	;# 
   746   000EEB                     RA4PPS          equ	3819	;# 
   747   000EEC                     RA5PPS          equ	3820	;# 
   748   000EED                     RA6PPS          equ	3821	;# 
   749   000EEE                     RA7PPS          equ	3822	;# 
   750   000EEF                     RB0PPS          equ	3823	;# 
   751   000EF0                     RB1PPS          equ	3824	;# 
   752   000EF1                     RB2PPS          equ	3825	;# 
   753   000EF2                     RB3PPS          equ	3826	;# 
   754   000EF3                     RB4PPS          equ	3827	;# 
   755   000EF4                     RB5PPS          equ	3828	;# 
   756   000EF5                     RB6PPS          equ	3829	;# 
   757   000EF6                     RB7PPS          equ	3830	;# 
   758   000EF7                     RC0PPS          equ	3831	;# 
   759   000EF8                     RC1PPS          equ	3832	;# 
   760   000EF9                     RC2PPS          equ	3833	;# 
   761   000EFA                     RC3PPS          equ	3834	;# 
   762   000EFB                     RC4PPS          equ	3835	;# 
   763   000EFC                     RC5PPS          equ	3836	;# 
   764   000EFD                     RC6PPS          equ	3837	;# 
   765   000EFE                     RC7PPS          equ	3838	;# 
   766   000F0A                     IOCAF           equ	3850	;# 
   767   000F0B                     IOCAN           equ	3851	;# 
   768   000F0C                     IOCAP           equ	3852	;# 
   769   000F0D                     INLVLA          equ	3853	;# 
   770   000F0E                     SLRCONA         equ	3854	;# 
   771   000F0F                     ODCONA          equ	3855	;# 
   772   000F10                     WPUA            equ	3856	;# 
   773   000F11                     ANSELA          equ	3857	;# 
   774   000F12                     IOCBF           equ	3858	;# 
   775   000F13                     IOCBN           equ	3859	;# 
   776   000F14                     IOCBP           equ	3860	;# 
   777   000F15                     INLVLB          equ	3861	;# 
   778   000F16                     SLRCONB         equ	3862	;# 
   779   000F17                     ODCONB          equ	3863	;# 
   780   000F18                     WPUB            equ	3864	;# 
   781   000F19                     ANSELB          equ	3865	;# 
   782   000F1A                     IOCCF           equ	3866	;# 
   783   000F1B                     IOCCN           equ	3867	;# 
   784   000F1C                     IOCCP           equ	3868	;# 
   785   000F1D                     INLVLC          equ	3869	;# 
   786   000F1E                     SLRCONC         equ	3870	;# 
   787   000F1F                     ODCONC          equ	3871	;# 
   788   000F20                     WPUC            equ	3872	;# 
   789   000F21                     ANSELC          equ	3873	;# 
   790   000F27                     IOCEF           equ	3879	;# 
   791   000F28                     IOCEN           equ	3880	;# 
   792   000F29                     IOCEP           equ	3881	;# 
   793   000F2A                     INLVLE          equ	3882	;# 
   794   000F2D                     WPUE            equ	3885	;# 
   795   000F2F                     HLVDCON0        equ	3887	;# 
   796   000F30                     HLVDCON1        equ	3888	;# 
   797   000F31                     FVRCON          equ	3889	;# 
   798   000F32                     ZCDCON          equ	3890	;# 
   799   000F33                     DAC1CON0        equ	3891	;# 
   800   000F34                     DAC1CON1        equ	3892	;# 
   801   000F35                     CM2CON0         equ	3893	;# 
   802   000F36                     CM2CON1         equ	3894	;# 
   803   000F37                     CM2NCH          equ	3895	;# 
   804   000F38                     CM2PCH          equ	3896	;# 
   805   000F39                     CM1CON0         equ	3897	;# 
   806   000F3A                     CM1CON1         equ	3898	;# 
   807   000F3B                     CM1NCH          equ	3899	;# 
   808   000F3C                     CM1PCH          equ	3900	;# 
   809   000F3D                     CMOUT           equ	3901	;# 
   810   000F3E                     CLKRCON         equ	3902	;# 
   811   000F3F                     CLKRCLK         equ	3903	;# 
   812   000F40                     CWG1CLK         equ	3904	;# 
   813   000F40                     CWG1CLKCON      equ	3904	;# 
   814   000F41                     CWG1ISM         equ	3905	;# 
   815   000F42                     CWG1DBR         equ	3906	;# 
   816   000F43                     CWG1DBF         equ	3907	;# 
   817   000F44                     CWG1CON0        equ	3908	;# 
   818   000F45                     CWG1CON1        equ	3909	;# 
   819   000F46                     CWG1AS0         equ	3910	;# 
   820   000F47                     CWG1AS1         equ	3911	;# 
   821   000F48                     CWG1STR         equ	3912	;# 
   822   000F49                     SCANLADR        equ	3913	;# 
   823   000F49                     SCANLADRL       equ	3913	;# 
   824   000F4A                     SCANLADRH       equ	3914	;# 
   825   000F4B                     SCANLADRU       equ	3915	;# 
   826   000F4C                     SCANHADR        equ	3916	;# 
   827   000F4C                     SCANHADRL       equ	3916	;# 
   828   000F4D                     SCANHADRH       equ	3917	;# 
   829   000F4E                     SCANHADRU       equ	3918	;# 
   830   000F4F                     SCANCON0        equ	3919	;# 
   831   000F50                     SCANTRIG        equ	3920	;# 
   832   000F51                     MDCON0          equ	3921	;# 
   833   000F52                     MDCON1          equ	3922	;# 
   834   000F53                     MDSRC           equ	3923	;# 
   835   000F54                     MDCARL          equ	3924	;# 
   836   000F55                     MDCARH          equ	3925	;# 
   837   000F56                     ADACT           equ	3926	;# 
   838   000F57                     ADCLK           equ	3927	;# 
   839   000F58                     ADREF           equ	3928	;# 
   840   000F59                     ADCON1          equ	3929	;# 
   841   000F5A                     ADCON2          equ	3930	;# 
   842   000F5B                     ADCON3          equ	3931	;# 
   843   000F5C                     ADACQ           equ	3932	;# 
   844   000F5D                     ADCAP           equ	3933	;# 
   845   000F5E                     ADPRE           equ	3934	;# 
   846   000F5F                     ADPCH           equ	3935	;# 
   847   000F60                     ADCON0          equ	3936	;# 
   848   000F61                     ADPREV          equ	3937	;# 
   849   000F61                     ADPREVL         equ	3937	;# 
   850   000F62                     ADPREVH         equ	3938	;# 
   851   000F63                     ADRES           equ	3939	;# 
   852   000F63                     ADRESL          equ	3939	;# 
   853   000F64                     ADRESH          equ	3940	;# 
   854   000F65                     ADSTAT          equ	3941	;# 
   855   000F66                     ADRPT           equ	3942	;# 
   856   000F67                     ADCNT           equ	3943	;# 
   857   000F68                     ADSTPT          equ	3944	;# 
   858   000F68                     ADSTPTL         equ	3944	;# 
   859   000F69                     ADSTPTH         equ	3945	;# 
   860   000F6A                     ADLTH           equ	3946	;# 
   861   000F6A                     ADLTHL          equ	3946	;# 
   862   000F6B                     ADLTHH          equ	3947	;# 
   863   000F6C                     ADUTH           equ	3948	;# 
   864   000F6C                     ADUTHL          equ	3948	;# 
   865   000F6D                     ADUTHH          equ	3949	;# 
   866   000F6E                     ADERR           equ	3950	;# 
   867   000F6E                     ADERRL          equ	3950	;# 
   868   000F6F                     ADERRH          equ	3951	;# 
   869   000F70                     ADACC           equ	3952	;# 
   870   000F70                     ADACCL          equ	3952	;# 
   871   000F71                     ADACCH          equ	3953	;# 
   872   000F72                     ADFLTR          equ	3954	;# 
   873   000F72                     ADFLTRL         equ	3954	;# 
   874   000F73                     ADFLTRH         equ	3955	;# 
   875   000F74                     CRCDATA         equ	3956	;# 
   876   000F74                     CRCDATL         equ	3956	;# 
   877   000F75                     CRCDATH         equ	3957	;# 
   878   000F76                     CRCACC          equ	3958	;# 
   879   000F76                     CRCACCL         equ	3958	;# 
   880   000F77                     CRCACCH         equ	3959	;# 
   881   000F78                     CRCSHFT         equ	3960	;# 
   882   000F78                     CRCSHIFTL       equ	3960	;# 
   883   000F79                     CRCSHIFTH       equ	3961	;# 
   884   000F7A                     CRCXOR          equ	3962	;# 
   885   000F7A                     CRCXORL         equ	3962	;# 
   886   000F7B                     CRCXORH         equ	3963	;# 
   887   000F7C                     CRCCON0         equ	3964	;# 
   888   000F7D                     CRCCON1         equ	3965	;# 
   889   000F7E                     NVMADR          equ	3966	;# 
   890   000F7E                     NVMADRL         equ	3966	;# 
   891   000F7F                     NVMADRH         equ	3967	;# 
   892   000F80                     NVMDAT          equ	3968	;# 
   893   000F81                     NVMCON1         equ	3969	;# 
   894   000F82                     NVMCON2         equ	3970	;# 
   895   000F83                     LATA            equ	3971	;# 
   896   000F84                     LATB            equ	3972	;# 
   897   000F85                     LATC            equ	3973	;# 
   898   000F88                     TRISA           equ	3976	;# 
   899   000F88                     DDRA            equ	3976	;# 
   900   000F89                     TRISB           equ	3977	;# 
   901   000F89                     DDRB            equ	3977	;# 
   902   000F8A                     TRISC           equ	3978	;# 
   903   000F8A                     DDRC            equ	3978	;# 
   904   000F8D                     PORTA           equ	3981	;# 
   905   000F8E                     PORTB           equ	3982	;# 
   906   000F8F                     PORTC           equ	3983	;# 
   907   000F91                     PORTE           equ	3985	;# 
   908   000F92                     SSP1BUF         equ	3986	;# 
   909   000F93                     SSP1ADD         equ	3987	;# 
   910   000F94                     SSP1MSK         equ	3988	;# 
   911   000F95                     SSP1STAT        equ	3989	;# 
   912   000F96                     SSP1CON1        equ	3990	;# 
   913   000F97                     SSP1CON2        equ	3991	;# 
   914   000F98                     SSP1CON3        equ	3992	;# 
   915   000F99                     RC1REG          equ	3993	;# 
   916   000F99                     RCREG           equ	3993	;# 
   917   000F99                     RCREG1          equ	3993	;# 
   918   000F9A                     TX1REG          equ	3994	;# 
   919   000F9A                     TXREG1          equ	3994	;# 
   920   000F9A                     TXREG           equ	3994	;# 
   921   000F9B                     SP1BRG          equ	3995	;# 
   922   000F9B                     SP1BRGL         equ	3995	;# 
   923   000F9B                     SPBRG           equ	3995	;# 
   924   000F9B                     SPBRG1          equ	3995	;# 
   925   000F9B                     SPBRGL          equ	3995	;# 
   926   000F9C                     SP1BRGH         equ	3996	;# 
   927   000F9C                     SPBRGH          equ	3996	;# 
   928   000F9C                     SPBRGH1         equ	3996	;# 
   929   000F9D                     RC1STA          equ	3997	;# 
   930   000F9D                     RCSTA1          equ	3997	;# 
   931   000F9D                     RCSTA           equ	3997	;# 
   932   000F9E                     TX1STA          equ	3998	;# 
   933   000F9E                     TXSTA1          equ	3998	;# 
   934   000F9E                     TXSTA           equ	3998	;# 
   935   000F9F                     BAUD1CON        equ	3999	;# 
   936   000F9F                     BAUDCON1        equ	3999	;# 
   937   000F9F                     BAUDCTL1        equ	3999	;# 
   938   000F9F                     BAUDCON         equ	3999	;# 
   939   000F9F                     BAUDCTL         equ	3999	;# 
   940   000FA0                     PWM4DC          equ	4000	;# 
   941   000FA0                     PWM4DCL         equ	4000	;# 
   942   000FA1                     PWM4DCH         equ	4001	;# 
   943   000FA2                     PWM4CON         equ	4002	;# 
   944   000FA3                     PWM3DC          equ	4003	;# 
   945   000FA3                     PWM3DCL         equ	4003	;# 
   946   000FA4                     PWM3DCH         equ	4004	;# 
   947   000FA5                     PWM3CON         equ	4005	;# 
   948   000FA6                     CCPR2           equ	4006	;# 
   949   000FA6                     CCPR2L          equ	4006	;# 
   950   000FA7                     CCPR2H          equ	4007	;# 
   951   000FA8                     CCP2CON         equ	4008	;# 
   952   000FA9                     CCP2CAP         equ	4009	;# 
   953   000FAA                     CCPR1           equ	4010	;# 
   954   000FAA                     CCPR1L          equ	4010	;# 
   955   000FAB                     CCPR1H          equ	4011	;# 
   956   000FAC                     CCP1CON         equ	4012	;# 
   957   000FAD                     CCP1CAP         equ	4013	;# 
   958   000FAE                     CCPTMRS         equ	4014	;# 
   959   000FAF                     T6TMR           equ	4015	;# 
   960   000FAF                     TMR6            equ	4015	;# 
   961   000FB0                     T6PR            equ	4016	;# 
   962   000FB0                     PR6             equ	4016	;# 
   963   000FB1                     T6CON           equ	4017	;# 
   964   000FB2                     T6HLT           equ	4018	;# 
   965   000FB3                     T6CLKCON        equ	4019	;# 
   966   000FB3                     T6CLK           equ	4019	;# 
   967   000FB4                     T6RST           equ	4020	;# 
   968   000FB5                     T4TMR           equ	4021	;# 
   969   000FB5                     TMR4            equ	4021	;# 
   970   000FB6                     T4PR            equ	4022	;# 
   971   000FB6                     PR4             equ	4022	;# 
   972   000FB7                     T4CON           equ	4023	;# 
   973   000FB8                     T4HLT           equ	4024	;# 
   974   000FB9                     T4CLKCON        equ	4025	;# 
   975   000FB9                     T4CLK           equ	4025	;# 
   976   000FBA                     T4RST           equ	4026	;# 
   977   000FBB                     T2TMR           equ	4027	;# 
   978   000FBB                     TMR2            equ	4027	;# 
   979   000FBC                     T2PR            equ	4028	;# 
   980   000FBC                     PR2             equ	4028	;# 
   981   000FBD                     T2CON           equ	4029	;# 
   982   000FBE                     T2HLT           equ	4030	;# 
   983   000FBF                     T2CLKCON        equ	4031	;# 
   984   000FBF                     T2CLK           equ	4031	;# 
   985   000FC0                     T2RST           equ	4032	;# 
   986   000FC1                     TMR5            equ	4033	;# 
   987   000FC1                     TMR5L           equ	4033	;# 
   988   000FC2                     TMR5H           equ	4034	;# 
   989   000FC3                     T5CON           equ	4035	;# 
   990   000FC4                     T5GCON          equ	4036	;# 
   991   000FC4                     PR5             equ	4036	;# 
   992   000FC5                     T5GATE          equ	4037	;# 
   993   000FC5                     TMR5GATE        equ	4037	;# 
   994   000FC6                     T5CLK           equ	4038	;# 
   995   000FC6                     TMR5CLK         equ	4038	;# 
   996   000FC7                     TMR3            equ	4039	;# 
   997   000FC7                     TMR3L           equ	4039	;# 
   998   000FC8                     TMR3H           equ	4040	;# 
   999   000FC9                     T3CON           equ	4041	;# 
  1000   000FCA                     T3GCON          equ	4042	;# 
  1001   000FCA                     PR3             equ	4042	;# 
  1002   000FCB                     T3GATE          equ	4043	;# 
  1003   000FCB                     TMR3GATE        equ	4043	;# 
  1004   000FCC                     T3CLK           equ	4044	;# 
  1005   000FCC                     TMR3CLK         equ	4044	;# 
  1006   000FCD                     TMR1            equ	4045	;# 
  1007   000FCD                     TMR1L           equ	4045	;# 
  1008   000FCE                     TMR1H           equ	4046	;# 
  1009   000FCF                     T1CON           equ	4047	;# 
  1010   000FD0                     T1GCON          equ	4048	;# 
  1011   000FD0                     PR1             equ	4048	;# 
  1012   000FD1                     T1GATE          equ	4049	;# 
  1013   000FD1                     TMR1GATE        equ	4049	;# 
  1014   000FD2                     T1CLK           equ	4050	;# 
  1015   000FD2                     TMR1CLK         equ	4050	;# 
  1016   000FD3                     TMR0L           equ	4051	;# 
  1017   000FD3                     TMR0            equ	4051	;# 
  1018   000FD4                     TMR0H           equ	4052	;# 
  1019   000FD4                     PR0             equ	4052	;# 
  1020   000FD5                     T0CON0          equ	4053	;# 
  1021   000FD6                     T0CON1          equ	4054	;# 
  1022   000FD7                     PCON0           equ	4055	;# 
  1023   000FD8                     STATUS          equ	4056	;# 
  1024   000FD9                     FSR2            equ	4057	;# 
  1025   000FD9                     FSR2L           equ	4057	;# 
  1026   000FDA                     FSR2H           equ	4058	;# 
  1027   000FDB                     PLUSW2          equ	4059	;# 
  1028   000FDC                     PREINC2         equ	4060	;# 
  1029   000FDD                     POSTDEC2        equ	4061	;# 
  1030   000FDE                     POSTINC2        equ	4062	;# 
  1031   000FDF                     INDF2           equ	4063	;# 
  1032   000FE0                     BSR             equ	4064	;# 
  1033   000FE1                     FSR1            equ	4065	;# 
  1034   000FE1                     FSR1L           equ	4065	;# 
  1035   000FE2                     FSR1H           equ	4066	;# 
  1036   000FE3                     PLUSW1          equ	4067	;# 
  1037   000FE4                     PREINC1         equ	4068	;# 
  1038   000FE5                     POSTDEC1        equ	4069	;# 
  1039   000FE6                     POSTINC1        equ	4070	;# 
  1040   000FE7                     INDF1           equ	4071	;# 
  1041   000FE8                     WREG            equ	4072	;# 
  1042   000FE9                     FSR0            equ	4073	;# 
  1043   000FE9                     FSR0L           equ	4073	;# 
  1044   000FEA                     FSR0H           equ	4074	;# 
  1045   000FEB                     PLUSW0          equ	4075	;# 
  1046   000FEC                     PREINC0         equ	4076	;# 
  1047   000FED                     POSTDEC0        equ	4077	;# 
  1048   000FEE                     POSTINC0        equ	4078	;# 
  1049   000FEF                     INDF0           equ	4079	;# 
  1050   000FF2                     INTCON          equ	4082	;# 
  1051   000FF3                     PROD            equ	4083	;# 
  1052   000FF3                     PRODL           equ	4083	;# 
  1053   000FF4                     PRODH           equ	4084	;# 
  1054   000FF5                     TABLAT          equ	4085	;# 
  1055   000FF6                     TBLPTR          equ	4086	;# 
  1056   000FF6                     TBLPTRL         equ	4086	;# 
  1057   000FF7                     TBLPTRH         equ	4087	;# 
  1058   000FF8                     TBLPTRU         equ	4088	;# 
  1059   000FF9                     PCLAT           equ	4089	;# 
  1060   000FF9                     PC              equ	4089	;# 
  1061   000FF9                     PCL             equ	4089	;# 
  1062   000FFA                     PCLATH          equ	4090	;# 
  1063   000FFB                     PCLATU          equ	4091	;# 
  1064   000FFC                     STKPTR          equ	4092	;# 
  1065   000FFD                     TOS             equ	4093	;# 
  1066   000FFD                     TOSL            equ	4093	;# 
  1067   000FFE                     TOSH            equ	4094	;# 
  1068   000FFF                     TOSU            equ	4095	;# 
  1069   000E8D                     RX2PPS          equ	3725	;# 
  1070   000E8E                     CK2PPS          equ	3726	;# 
  1071   000E8E                     TX2PPS          equ	3726	;# 
  1072   000E8F                     SSP2CLKPPS      equ	3727	;# 
  1073   000E90                     SSP2DATPPS      equ	3728	;# 
  1074   000E91                     SSP2SSPPS       equ	3729	;# 
  1075   000E92                     SSP2BUF         equ	3730	;# 
  1076   000E93                     SSP2ADD         equ	3731	;# 
  1077   000E94                     SSP2MSK         equ	3732	;# 
  1078   000E95                     SSP2STAT        equ	3733	;# 
  1079   000E96                     SSP2CON1        equ	3734	;# 
  1080   000E97                     SSP2CON2        equ	3735	;# 
  1081   000E98                     SSP2CON3        equ	3736	;# 
  1082   000E99                     RC2REG          equ	3737	;# 
  1083   000E99                     RCREG2          equ	3737	;# 
  1084   000E9A                     TX2REG          equ	3738	;# 
  1085   000E9A                     TXREG2          equ	3738	;# 
  1086   000E9B                     SP2BRG          equ	3739	;# 
  1087   000E9B                     SP2BRGL         equ	3739	;# 
  1088   000E9B                     SPBRG2          equ	3739	;# 
  1089   000E9C                     SP2BRGH         equ	3740	;# 
  1090   000E9C                     SPBRGH2         equ	3740	;# 
  1091   000E9D                     RC2STA          equ	3741	;# 
  1092   000E9D                     RCSTA2          equ	3741	;# 
  1093   000E9E                     TX2STA          equ	3742	;# 
  1094   000E9E                     TXSTA2          equ	3742	;# 
  1095   000E9F                     BAUD2CON        equ	3743	;# 
  1096   000E9F                     BAUDCON2        equ	3743	;# 
  1097   000E9F                     BAUDCTL2        equ	3743	;# 
  1098   000EA0                     PPSLOCK         equ	3744	;# 
  1099   000EA1                     INT0PPS         equ	3745	;# 
  1100   000EA2                     INT1PPS         equ	3746	;# 
  1101   000EA3                     INT2PPS         equ	3747	;# 
  1102   000EA4                     T0CKIPPS        equ	3748	;# 
  1103   000EA5                     T1CKIPPS        equ	3749	;# 
  1104   000EA6                     T1GPPS          equ	3750	;# 
  1105   000EA7                     T3CKIPPS        equ	3751	;# 
  1106   000EA8                     T3GPPS          equ	3752	;# 
  1107   000EA9                     T5CKIPPS        equ	3753	;# 
  1108   000EAA                     T5GPPS          equ	3754	;# 
  1109   000EAB                     T2INPPS         equ	3755	;# 
  1110   000EAC                     T4INPPS         equ	3756	;# 
  1111   000EAD                     T6INPPS         equ	3757	;# 
  1112   000EAE                     ADACTPPS        equ	3758	;# 
  1113   000EAF                     CCP1PPS         equ	3759	;# 
  1114   000EB0                     CCP2PPS         equ	3760	;# 
  1115   000EB1                     CWG1PPS         equ	3761	;# 
  1116   000EB1                     CWGINPPS        equ	3761	;# 
  1117   000EB2                     MDCARLPPS       equ	3762	;# 
  1118   000EB3                     MDCARHPPS       equ	3763	;# 
  1119   000EB4                     MDSRCPPS        equ	3764	;# 
  1120   000EB5                     RX1PPS          equ	3765	;# 
  1121   000EB5                     RXPPS           equ	3765	;# 
  1122   000EB6                     CK1PPS          equ	3766	;# 
  1123   000EB6                     TX1PPS          equ	3766	;# 
  1124   000EB6                     CKPPS           equ	3766	;# 
  1125   000EB6                     TXPPS           equ	3766	;# 
  1126   000EB7                     SSP1CLKPPS      equ	3767	;# 
  1127   000EB7                     SSPCLKPPS       equ	3767	;# 
  1128   000EB8                     SSP1DATPPS      equ	3768	;# 
  1129   000EB8                     SSPDATPPS       equ	3768	;# 
  1130   000EB9                     SSP1SSPPS       equ	3769	;# 
  1131   000EB9                     SSPSSPPS        equ	3769	;# 
  1132   000EBA                     IPR0            equ	3770	;# 
  1133   000EBB                     IPR1            equ	3771	;# 
  1134   000EBC                     IPR2            equ	3772	;# 
  1135   000EBD                     IPR3            equ	3773	;# 
  1136   000EBE                     IPR4            equ	3774	;# 
  1137   000EBF                     IPR5            equ	3775	;# 
  1138   000EC0                     IPR6            equ	3776	;# 
  1139   000EC1                     IPR7            equ	3777	;# 
  1140   000EC2                     PIE0            equ	3778	;# 
  1141   000EC3                     PIE1            equ	3779	;# 
  1142   000EC4                     PIE2            equ	3780	;# 
  1143   000EC5                     PIE3            equ	3781	;# 
  1144   000EC6                     PIE4            equ	3782	;# 
  1145   000EC7                     PIE5            equ	3783	;# 
  1146   000EC8                     PIE6            equ	3784	;# 
  1147   000EC9                     PIE7            equ	3785	;# 
  1148   000ECA                     PIR0            equ	3786	;# 
  1149   000ECB                     PIR1            equ	3787	;# 
  1150   000ECC                     PIR2            equ	3788	;# 
  1151   000ECD                     PIR3            equ	3789	;# 
  1152   000ECE                     PIR4            equ	3790	;# 
  1153   000ECF                     PIR5            equ	3791	;# 
  1154   000ED0                     PIR6            equ	3792	;# 
  1155   000ED1                     PIR7            equ	3793	;# 
  1156   000ED2                     WDTCON0         equ	3794	;# 
  1157   000ED3                     WDTCON1         equ	3795	;# 
  1158   000ED4                     WDTPSL          equ	3796	;# 
  1159   000ED5                     WDTPSH          equ	3797	;# 
  1160   000ED6                     WDTTMR          equ	3798	;# 
  1161   000ED7                     CPUDOZE         equ	3799	;# 
  1162   000ED8                     OSCCON1         equ	3800	;# 
  1163   000ED9                     OSCCON2         equ	3801	;# 
  1164   000EDA                     OSCCON3         equ	3802	;# 
  1165   000EDB                     OSCSTAT         equ	3803	;# 
  1166   000EDB                     OSCSTAT1        equ	3803	;# 
  1167   000EDC                     OSCEN           equ	3804	;# 
  1168   000EDD                     OSCTUNE         equ	3805	;# 
  1169   000EDE                     OSCFRQ          equ	3806	;# 
  1170   000EE0                     BORCON          equ	3808	;# 
  1171   000EE1                     PMD0            equ	3809	;# 
  1172   000EE2                     PMD1            equ	3810	;# 
  1173   000EE3                     PMD2            equ	3811	;# 
  1174   000EE4                     PMD3            equ	3812	;# 
  1175   000EE5                     PMD4            equ	3813	;# 
  1176   000EE6                     PMD5            equ	3814	;# 
  1177   000EE7                     RA0PPS          equ	3815	;# 
  1178   000EE8                     RA1PPS          equ	3816	;# 
  1179   000EE9                     RA2PPS          equ	3817	;# 
  1180   000EEA                     RA3PPS          equ	3818	;# 
  1181   000EEB                     RA4PPS          equ	3819	;# 
  1182   000EEC                     RA5PPS          equ	3820	;# 
  1183   000EED                     RA6PPS          equ	3821	;# 
  1184   000EEE                     RA7PPS          equ	3822	;# 
  1185   000EEF                     RB0PPS          equ	3823	;# 
  1186   000EF0                     RB1PPS          equ	3824	;# 
  1187   000EF1                     RB2PPS          equ	3825	;# 
  1188   000EF2                     RB3PPS          equ	3826	;# 
  1189   000EF3                     RB4PPS          equ	3827	;# 
  1190   000EF4                     RB5PPS          equ	3828	;# 
  1191   000EF5                     RB6PPS          equ	3829	;# 
  1192   000EF6                     RB7PPS          equ	3830	;# 
  1193   000EF7                     RC0PPS          equ	3831	;# 
  1194   000EF8                     RC1PPS          equ	3832	;# 
  1195   000EF9                     RC2PPS          equ	3833	;# 
  1196   000EFA                     RC3PPS          equ	3834	;# 
  1197   000EFB                     RC4PPS          equ	3835	;# 
  1198   000EFC                     RC5PPS          equ	3836	;# 
  1199   000EFD                     RC6PPS          equ	3837	;# 
  1200   000EFE                     RC7PPS          equ	3838	;# 
  1201   000F0A                     IOCAF           equ	3850	;# 
  1202   000F0B                     IOCAN           equ	3851	;# 
  1203   000F0C                     IOCAP           equ	3852	;# 
  1204   000F0D                     INLVLA          equ	3853	;# 
  1205   000F0E                     SLRCONA         equ	3854	;# 
  1206   000F0F                     ODCONA          equ	3855	;# 
  1207   000F10                     WPUA            equ	3856	;# 
  1208   000F11                     ANSELA          equ	3857	;# 
  1209   000F12                     IOCBF           equ	3858	;# 
  1210   000F13                     IOCBN           equ	3859	;# 
  1211   000F14                     IOCBP           equ	3860	;# 
  1212   000F15                     INLVLB          equ	3861	;# 
  1213   000F16                     SLRCONB         equ	3862	;# 
  1214   000F17                     ODCONB          equ	3863	;# 
  1215   000F18                     WPUB            equ	3864	;# 
  1216   000F19                     ANSELB          equ	3865	;# 
  1217   000F1A                     IOCCF           equ	3866	;# 
  1218   000F1B                     IOCCN           equ	3867	;# 
  1219   000F1C                     IOCCP           equ	3868	;# 
  1220   000F1D                     INLVLC          equ	3869	;# 
  1221   000F1E                     SLRCONC         equ	3870	;# 
  1222   000F1F                     ODCONC          equ	3871	;# 
  1223   000F20                     WPUC            equ	3872	;# 
  1224   000F21                     ANSELC          equ	3873	;# 
  1225   000F27                     IOCEF           equ	3879	;# 
  1226   000F28                     IOCEN           equ	3880	;# 
  1227   000F29                     IOCEP           equ	3881	;# 
  1228   000F2A                     INLVLE          equ	3882	;# 
  1229   000F2D                     WPUE            equ	3885	;# 
  1230   000F2F                     HLVDCON0        equ	3887	;# 
  1231   000F30                     HLVDCON1        equ	3888	;# 
  1232   000F31                     FVRCON          equ	3889	;# 
  1233   000F32                     ZCDCON          equ	3890	;# 
  1234   000F33                     DAC1CON0        equ	3891	;# 
  1235   000F34                     DAC1CON1        equ	3892	;# 
  1236   000F35                     CM2CON0         equ	3893	;# 
  1237   000F36                     CM2CON1         equ	3894	;# 
  1238   000F37                     CM2NCH          equ	3895	;# 
  1239   000F38                     CM2PCH          equ	3896	;# 
  1240   000F39                     CM1CON0         equ	3897	;# 
  1241   000F3A                     CM1CON1         equ	3898	;# 
  1242   000F3B                     CM1NCH          equ	3899	;# 
  1243   000F3C                     CM1PCH          equ	3900	;# 
  1244   000F3D                     CMOUT           equ	3901	;# 
  1245   000F3E                     CLKRCON         equ	3902	;# 
  1246   000F3F                     CLKRCLK         equ	3903	;# 
  1247   000F40                     CWG1CLK         equ	3904	;# 
  1248   000F40                     CWG1CLKCON      equ	3904	;# 
  1249   000F41                     CWG1ISM         equ	3905	;# 
  1250   000F42                     CWG1DBR         equ	3906	;# 
  1251   000F43                     CWG1DBF         equ	3907	;# 
  1252   000F44                     CWG1CON0        equ	3908	;# 
  1253   000F45                     CWG1CON1        equ	3909	;# 
  1254   000F46                     CWG1AS0         equ	3910	;# 
  1255   000F47                     CWG1AS1         equ	3911	;# 
  1256   000F48                     CWG1STR         equ	3912	;# 
  1257   000F49                     SCANLADR        equ	3913	;# 
  1258   000F49                     SCANLADRL       equ	3913	;# 
  1259   000F4A                     SCANLADRH       equ	3914	;# 
  1260   000F4B                     SCANLADRU       equ	3915	;# 
  1261   000F4C                     SCANHADR        equ	3916	;# 
  1262   000F4C                     SCANHADRL       equ	3916	;# 
  1263   000F4D                     SCANHADRH       equ	3917	;# 
  1264   000F4E                     SCANHADRU       equ	3918	;# 
  1265   000F4F                     SCANCON0        equ	3919	;# 
  1266   000F50                     SCANTRIG        equ	3920	;# 
  1267   000F51                     MDCON0          equ	3921	;# 
  1268   000F52                     MDCON1          equ	3922	;# 
  1269   000F53                     MDSRC           equ	3923	;# 
  1270   000F54                     MDCARL          equ	3924	;# 
  1271   000F55                     MDCARH          equ	3925	;# 
  1272   000F56                     ADACT           equ	3926	;# 
  1273   000F57                     ADCLK           equ	3927	;# 
  1274   000F58                     ADREF           equ	3928	;# 
  1275   000F59                     ADCON1          equ	3929	;# 
  1276   000F5A                     ADCON2          equ	3930	;# 
  1277   000F5B                     ADCON3          equ	3931	;# 
  1278   000F5C                     ADACQ           equ	3932	;# 
  1279   000F5D                     ADCAP           equ	3933	;# 
  1280   000F5E                     ADPRE           equ	3934	;# 
  1281   000F5F                     ADPCH           equ	3935	;# 
  1282   000F60                     ADCON0          equ	3936	;# 
  1283   000F61                     ADPREV          equ	3937	;# 
  1284   000F61                     ADPREVL         equ	3937	;# 
  1285   000F62                     ADPREVH         equ	3938	;# 
  1286   000F63                     ADRES           equ	3939	;# 
  1287   000F63                     ADRESL          equ	3939	;# 
  1288   000F64                     ADRESH          equ	3940	;# 
  1289   000F65                     ADSTAT          equ	3941	;# 
  1290   000F66                     ADRPT           equ	3942	;# 
  1291   000F67                     ADCNT           equ	3943	;# 
  1292   000F68                     ADSTPT          equ	3944	;# 
  1293   000F68                     ADSTPTL         equ	3944	;# 
  1294   000F69                     ADSTPTH         equ	3945	;# 
  1295   000F6A                     ADLTH           equ	3946	;# 
  1296   000F6A                     ADLTHL          equ	3946	;# 
  1297   000F6B                     ADLTHH          equ	3947	;# 
  1298   000F6C                     ADUTH           equ	3948	;# 
  1299   000F6C                     ADUTHL          equ	3948	;# 
  1300   000F6D                     ADUTHH          equ	3949	;# 
  1301   000F6E                     ADERR           equ	3950	;# 
  1302   000F6E                     ADERRL          equ	3950	;# 
  1303   000F6F                     ADERRH          equ	3951	;# 
  1304   000F70                     ADACC           equ	3952	;# 
  1305   000F70                     ADACCL          equ	3952	;# 
  1306   000F71                     ADACCH          equ	3953	;# 
  1307   000F72                     ADFLTR          equ	3954	;# 
  1308   000F72                     ADFLTRL         equ	3954	;# 
  1309   000F73                     ADFLTRH         equ	3955	;# 
  1310   000F74                     CRCDATA         equ	3956	;# 
  1311   000F74                     CRCDATL         equ	3956	;# 
  1312   000F75                     CRCDATH         equ	3957	;# 
  1313   000F76                     CRCACC          equ	3958	;# 
  1314   000F76                     CRCACCL         equ	3958	;# 
  1315   000F77                     CRCACCH         equ	3959	;# 
  1316   000F78                     CRCSHFT         equ	3960	;# 
  1317   000F78                     CRCSHIFTL       equ	3960	;# 
  1318   000F79                     CRCSHIFTH       equ	3961	;# 
  1319   000F7A                     CRCXOR          equ	3962	;# 
  1320   000F7A                     CRCXORL         equ	3962	;# 
  1321   000F7B                     CRCXORH         equ	3963	;# 
  1322   000F7C                     CRCCON0         equ	3964	;# 
  1323   000F7D                     CRCCON1         equ	3965	;# 
  1324   000F7E                     NVMADR          equ	3966	;# 
  1325   000F7E                     NVMADRL         equ	3966	;# 
  1326   000F7F                     NVMADRH         equ	3967	;# 
  1327   000F80                     NVMDAT          equ	3968	;# 
  1328   000F81                     NVMCON1         equ	3969	;# 
  1329   000F82                     NVMCON2         equ	3970	;# 
  1330   000F83                     LATA            equ	3971	;# 
  1331   000F84                     LATB            equ	3972	;# 
  1332   000F85                     LATC            equ	3973	;# 
  1333   000F88                     TRISA           equ	3976	;# 
  1334   000F88                     DDRA            equ	3976	;# 
  1335   000F89                     TRISB           equ	3977	;# 
  1336   000F89                     DDRB            equ	3977	;# 
  1337   000F8A                     TRISC           equ	3978	;# 
  1338   000F8A                     DDRC            equ	3978	;# 
  1339   000F8D                     PORTA           equ	3981	;# 
  1340   000F8E                     PORTB           equ	3982	;# 
  1341   000F8F                     PORTC           equ	3983	;# 
  1342   000F91                     PORTE           equ	3985	;# 
  1343   000F92                     SSP1BUF         equ	3986	;# 
  1344   000F93                     SSP1ADD         equ	3987	;# 
  1345   000F94                     SSP1MSK         equ	3988	;# 
  1346   000F95                     SSP1STAT        equ	3989	;# 
  1347   000F96                     SSP1CON1        equ	3990	;# 
  1348   000F97                     SSP1CON2        equ	3991	;# 
  1349   000F98                     SSP1CON3        equ	3992	;# 
  1350   000F99                     RC1REG          equ	3993	;# 
  1351   000F99                     RCREG           equ	3993	;# 
  1352   000F99                     RCREG1          equ	3993	;# 
  1353   000F9A                     TX1REG          equ	3994	;# 
  1354   000F9A                     TXREG1          equ	3994	;# 
  1355   000F9A                     TXREG           equ	3994	;# 
  1356   000F9B                     SP1BRG          equ	3995	;# 
  1357   000F9B                     SP1BRGL         equ	3995	;# 
  1358   000F9B                     SPBRG           equ	3995	;# 
  1359   000F9B                     SPBRG1          equ	3995	;# 
  1360   000F9B                     SPBRGL          equ	3995	;# 
  1361   000F9C                     SP1BRGH         equ	3996	;# 
  1362   000F9C                     SPBRGH          equ	3996	;# 
  1363   000F9C                     SPBRGH1         equ	3996	;# 
  1364   000F9D                     RC1STA          equ	3997	;# 
  1365   000F9D                     RCSTA1          equ	3997	;# 
  1366   000F9D                     RCSTA           equ	3997	;# 
  1367   000F9E                     TX1STA          equ	3998	;# 
  1368   000F9E                     TXSTA1          equ	3998	;# 
  1369   000F9E                     TXSTA           equ	3998	;# 
  1370   000F9F                     BAUD1CON        equ	3999	;# 
  1371   000F9F                     BAUDCON1        equ	3999	;# 
  1372   000F9F                     BAUDCTL1        equ	3999	;# 
  1373   000F9F                     BAUDCON         equ	3999	;# 
  1374   000F9F                     BAUDCTL         equ	3999	;# 
  1375   000FA0                     PWM4DC          equ	4000	;# 
  1376   000FA0                     PWM4DCL         equ	4000	;# 
  1377   000FA1                     PWM4DCH         equ	4001	;# 
  1378   000FA2                     PWM4CON         equ	4002	;# 
  1379   000FA3                     PWM3DC          equ	4003	;# 
  1380   000FA3                     PWM3DCL         equ	4003	;# 
  1381   000FA4                     PWM3DCH         equ	4004	;# 
  1382   000FA5                     PWM3CON         equ	4005	;# 
  1383   000FA6                     CCPR2           equ	4006	;# 
  1384   000FA6                     CCPR2L          equ	4006	;# 
  1385   000FA7                     CCPR2H          equ	4007	;# 
  1386   000FA8                     CCP2CON         equ	4008	;# 
  1387   000FA9                     CCP2CAP         equ	4009	;# 
  1388   000FAA                     CCPR1           equ	4010	;# 
  1389   000FAA                     CCPR1L          equ	4010	;# 
  1390   000FAB                     CCPR1H          equ	4011	;# 
  1391   000FAC                     CCP1CON         equ	4012	;# 
  1392   000FAD                     CCP1CAP         equ	4013	;# 
  1393   000FAE                     CCPTMRS         equ	4014	;# 
  1394   000FAF                     T6TMR           equ	4015	;# 
  1395   000FAF                     TMR6            equ	4015	;# 
  1396   000FB0                     T6PR            equ	4016	;# 
  1397   000FB0                     PR6             equ	4016	;# 
  1398   000FB1                     T6CON           equ	4017	;# 
  1399   000FB2                     T6HLT           equ	4018	;# 
  1400   000FB3                     T6CLKCON        equ	4019	;# 
  1401   000FB3                     T6CLK           equ	4019	;# 
  1402   000FB4                     T6RST           equ	4020	;# 
  1403   000FB5                     T4TMR           equ	4021	;# 
  1404   000FB5                     TMR4            equ	4021	;# 
  1405   000FB6                     T4PR            equ	4022	;# 
  1406   000FB6                     PR4             equ	4022	;# 
  1407   000FB7                     T4CON           equ	4023	;# 
  1408   000FB8                     T4HLT           equ	4024	;# 
  1409   000FB9                     T4CLKCON        equ	4025	;# 
  1410   000FB9                     T4CLK           equ	4025	;# 
  1411   000FBA                     T4RST           equ	4026	;# 
  1412   000FBB                     T2TMR           equ	4027	;# 
  1413   000FBB                     TMR2            equ	4027	;# 
  1414   000FBC                     T2PR            equ	4028	;# 
  1415   000FBC                     PR2             equ	4028	;# 
  1416   000FBD                     T2CON           equ	4029	;# 
  1417   000FBE                     T2HLT           equ	4030	;# 
  1418   000FBF                     T2CLKCON        equ	4031	;# 
  1419   000FBF                     T2CLK           equ	4031	;# 
  1420   000FC0                     T2RST           equ	4032	;# 
  1421   000FC1                     TMR5            equ	4033	;# 
  1422   000FC1                     TMR5L           equ	4033	;# 
  1423   000FC2                     TMR5H           equ	4034	;# 
  1424   000FC3                     T5CON           equ	4035	;# 
  1425   000FC4                     T5GCON          equ	4036	;# 
  1426   000FC4                     PR5             equ	4036	;# 
  1427   000FC5                     T5GATE          equ	4037	;# 
  1428   000FC5                     TMR5GATE        equ	4037	;# 
  1429   000FC6                     T5CLK           equ	4038	;# 
  1430   000FC6                     TMR5CLK         equ	4038	;# 
  1431   000FC7                     TMR3            equ	4039	;# 
  1432   000FC7                     TMR3L           equ	4039	;# 
  1433   000FC8                     TMR3H           equ	4040	;# 
  1434   000FC9                     T3CON           equ	4041	;# 
  1435   000FCA                     T3GCON          equ	4042	;# 
  1436   000FCA                     PR3             equ	4042	;# 
  1437   000FCB                     T3GATE          equ	4043	;# 
  1438   000FCB                     TMR3GATE        equ	4043	;# 
  1439   000FCC                     T3CLK           equ	4044	;# 
  1440   000FCC                     TMR3CLK         equ	4044	;# 
  1441   000FCD                     TMR1            equ	4045	;# 
  1442   000FCD                     TMR1L           equ	4045	;# 
  1443   000FCE                     TMR1H           equ	4046	;# 
  1444   000FCF                     T1CON           equ	4047	;# 
  1445   000FD0                     T1GCON          equ	4048	;# 
  1446   000FD0                     PR1             equ	4048	;# 
  1447   000FD1                     T1GATE          equ	4049	;# 
  1448   000FD1                     TMR1GATE        equ	4049	;# 
  1449   000FD2                     T1CLK           equ	4050	;# 
  1450   000FD2                     TMR1CLK         equ	4050	;# 
  1451   000FD3                     TMR0L           equ	4051	;# 
  1452   000FD3                     TMR0            equ	4051	;# 
  1453   000FD4                     TMR0H           equ	4052	;# 
  1454   000FD4                     PR0             equ	4052	;# 
  1455   000FD5                     T0CON0          equ	4053	;# 
  1456   000FD6                     T0CON1          equ	4054	;# 
  1457   000FD7                     PCON0           equ	4055	;# 
  1458   000FD8                     STATUS          equ	4056	;# 
  1459   000FD9                     FSR2            equ	4057	;# 
  1460   000FD9                     FSR2L           equ	4057	;# 
  1461   000FDA                     FSR2H           equ	4058	;# 
  1462   000FDB                     PLUSW2          equ	4059	;# 
  1463   000FDC                     PREINC2         equ	4060	;# 
  1464   000FDD                     POSTDEC2        equ	4061	;# 
  1465   000FDE                     POSTINC2        equ	4062	;# 
  1466   000FDF                     INDF2           equ	4063	;# 
  1467   000FE0                     BSR             equ	4064	;# 
  1468   000FE1                     FSR1            equ	4065	;# 
  1469   000FE1                     FSR1L           equ	4065	;# 
  1470   000FE2                     FSR1H           equ	4066	;# 
  1471   000FE3                     PLUSW1          equ	4067	;# 
  1472   000FE4                     PREINC1         equ	4068	;# 
  1473   000FE5                     POSTDEC1        equ	4069	;# 
  1474   000FE6                     POSTINC1        equ	4070	;# 
  1475   000FE7                     INDF1           equ	4071	;# 
  1476   000FE8                     WREG            equ	4072	;# 
  1477   000FE9                     FSR0            equ	4073	;# 
  1478   000FE9                     FSR0L           equ	4073	;# 
  1479   000FEA                     FSR0H           equ	4074	;# 
  1480   000FEB                     PLUSW0          equ	4075	;# 
  1481   000FEC                     PREINC0         equ	4076	;# 
  1482   000FED                     POSTDEC0        equ	4077	;# 
  1483   000FEE                     POSTINC0        equ	4078	;# 
  1484   000FEF                     INDF0           equ	4079	;# 
  1485   000FF2                     INTCON          equ	4082	;# 
  1486   000FF3                     PROD            equ	4083	;# 
  1487   000FF3                     PRODL           equ	4083	;# 
  1488   000FF4                     PRODH           equ	4084	;# 
  1489   000FF5                     TABLAT          equ	4085	;# 
  1490   000FF6                     TBLPTR          equ	4086	;# 
  1491   000FF6                     TBLPTRL         equ	4086	;# 
  1492   000FF7                     TBLPTRH         equ	4087	;# 
  1493   000FF8                     TBLPTRU         equ	4088	;# 
  1494   000FF9                     PCLAT           equ	4089	;# 
  1495   000FF9                     PC              equ	4089	;# 
  1496   000FF9                     PCL             equ	4089	;# 
  1497   000FFA                     PCLATH          equ	4090	;# 
  1498   000FFB                     PCLATU          equ	4091	;# 
  1499   000FFC                     STKPTR          equ	4092	;# 
  1500   000FFD                     TOS             equ	4093	;# 
  1501   000FFD                     TOSL            equ	4093	;# 
  1502   000FFE                     TOSH            equ	4094	;# 
  1503   000FFF                     TOSU            equ	4095	;# 
  1504   000E8D                     RX2PPS          equ	3725	;# 
  1505   000E8E                     CK2PPS          equ	3726	;# 
  1506   000E8E                     TX2PPS          equ	3726	;# 
  1507   000E8F                     SSP2CLKPPS      equ	3727	;# 
  1508   000E90                     SSP2DATPPS      equ	3728	;# 
  1509   000E91                     SSP2SSPPS       equ	3729	;# 
  1510   000E92                     SSP2BUF         equ	3730	;# 
  1511   000E93                     SSP2ADD         equ	3731	;# 
  1512   000E94                     SSP2MSK         equ	3732	;# 
  1513   000E95                     SSP2STAT        equ	3733	;# 
  1514   000E96                     SSP2CON1        equ	3734	;# 
  1515   000E97                     SSP2CON2        equ	3735	;# 
  1516   000E98                     SSP2CON3        equ	3736	;# 
  1517   000E99                     RC2REG          equ	3737	;# 
  1518   000E99                     RCREG2          equ	3737	;# 
  1519   000E9A                     TX2REG          equ	3738	;# 
  1520   000E9A                     TXREG2          equ	3738	;# 
  1521   000E9B                     SP2BRG          equ	3739	;# 
  1522   000E9B                     SP2BRGL         equ	3739	;# 
  1523   000E9B                     SPBRG2          equ	3739	;# 
  1524   000E9C                     SP2BRGH         equ	3740	;# 
  1525   000E9C                     SPBRGH2         equ	3740	;# 
  1526   000E9D                     RC2STA          equ	3741	;# 
  1527   000E9D                     RCSTA2          equ	3741	;# 
  1528   000E9E                     TX2STA          equ	3742	;# 
  1529   000E9E                     TXSTA2          equ	3742	;# 
  1530   000E9F                     BAUD2CON        equ	3743	;# 
  1531   000E9F                     BAUDCON2        equ	3743	;# 
  1532   000E9F                     BAUDCTL2        equ	3743	;# 
  1533   000EA0                     PPSLOCK         equ	3744	;# 
  1534   000EA1                     INT0PPS         equ	3745	;# 
  1535   000EA2                     INT1PPS         equ	3746	;# 
  1536   000EA3                     INT2PPS         equ	3747	;# 
  1537   000EA4                     T0CKIPPS        equ	3748	;# 
  1538   000EA5                     T1CKIPPS        equ	3749	;# 
  1539   000EA6                     T1GPPS          equ	3750	;# 
  1540   000EA7                     T3CKIPPS        equ	3751	;# 
  1541   000EA8                     T3GPPS          equ	3752	;# 
  1542   000EA9                     T5CKIPPS        equ	3753	;# 
  1543   000EAA                     T5GPPS          equ	3754	;# 
  1544   000EAB                     T2INPPS         equ	3755	;# 
  1545   000EAC                     T4INPPS         equ	3756	;# 
  1546   000EAD                     T6INPPS         equ	3757	;# 
  1547   000EAE                     ADACTPPS        equ	3758	;# 
  1548   000EAF                     CCP1PPS         equ	3759	;# 
  1549   000EB0                     CCP2PPS         equ	3760	;# 
  1550   000EB1                     CWG1PPS         equ	3761	;# 
  1551   000EB1                     CWGINPPS        equ	3761	;# 
  1552   000EB2                     MDCARLPPS       equ	3762	;# 
  1553   000EB3                     MDCARHPPS       equ	3763	;# 
  1554   000EB4                     MDSRCPPS        equ	3764	;# 
  1555   000EB5                     RX1PPS          equ	3765	;# 
  1556   000EB5                     RXPPS           equ	3765	;# 
  1557   000EB6                     CK1PPS          equ	3766	;# 
  1558   000EB6                     TX1PPS          equ	3766	;# 
  1559   000EB6                     CKPPS           equ	3766	;# 
  1560   000EB6                     TXPPS           equ	3766	;# 
  1561   000EB7                     SSP1CLKPPS      equ	3767	;# 
  1562   000EB7                     SSPCLKPPS       equ	3767	;# 
  1563   000EB8                     SSP1DATPPS      equ	3768	;# 
  1564   000EB8                     SSPDATPPS       equ	3768	;# 
  1565   000EB9                     SSP1SSPPS       equ	3769	;# 
  1566   000EB9                     SSPSSPPS        equ	3769	;# 
  1567   000EBA                     IPR0            equ	3770	;# 
  1568   000EBB                     IPR1            equ	3771	;# 
  1569   000EBC                     IPR2            equ	3772	;# 
  1570   000EBD                     IPR3            equ	3773	;# 
  1571   000EBE                     IPR4            equ	3774	;# 
  1572   000EBF                     IPR5            equ	3775	;# 
  1573   000EC0                     IPR6            equ	3776	;# 
  1574   000EC1                     IPR7            equ	3777	;# 
  1575   000EC2                     PIE0            equ	3778	;# 
  1576   000EC3                     PIE1            equ	3779	;# 
  1577   000EC4                     PIE2            equ	3780	;# 
  1578   000EC5                     PIE3            equ	3781	;# 
  1579   000EC6                     PIE4            equ	3782	;# 
  1580   000EC7                     PIE5            equ	3783	;# 
  1581   000EC8                     PIE6            equ	3784	;# 
  1582   000EC9                     PIE7            equ	3785	;# 
  1583   000ECA                     PIR0            equ	3786	;# 
  1584   000ECB                     PIR1            equ	3787	;# 
  1585   000ECC                     PIR2            equ	3788	;# 
  1586   000ECD                     PIR3            equ	3789	;# 
  1587   000ECE                     PIR4            equ	3790	;# 
  1588   000ECF                     PIR5            equ	3791	;# 
  1589   000ED0                     PIR6            equ	3792	;# 
  1590   000ED1                     PIR7            equ	3793	;# 
  1591   000ED2                     WDTCON0         equ	3794	;# 
  1592   000ED3                     WDTCON1         equ	3795	;# 
  1593   000ED4                     WDTPSL          equ	3796	;# 
  1594   000ED5                     WDTPSH          equ	3797	;# 
  1595   000ED6                     WDTTMR          equ	3798	;# 
  1596   000ED7                     CPUDOZE         equ	3799	;# 
  1597   000ED8                     OSCCON1         equ	3800	;# 
  1598   000ED9                     OSCCON2         equ	3801	;# 
  1599   000EDA                     OSCCON3         equ	3802	;# 
  1600   000EDB                     OSCSTAT         equ	3803	;# 
  1601   000EDB                     OSCSTAT1        equ	3803	;# 
  1602   000EDC                     OSCEN           equ	3804	;# 
  1603   000EDD                     OSCTUNE         equ	3805	;# 
  1604   000EDE                     OSCFRQ          equ	3806	;# 
  1605   000EE0                     BORCON          equ	3808	;# 
  1606   000EE1                     PMD0            equ	3809	;# 
  1607   000EE2                     PMD1            equ	3810	;# 
  1608   000EE3                     PMD2            equ	3811	;# 
  1609   000EE4                     PMD3            equ	3812	;# 
  1610   000EE5                     PMD4            equ	3813	;# 
  1611   000EE6                     PMD5            equ	3814	;# 
  1612   000EE7                     RA0PPS          equ	3815	;# 
  1613   000EE8                     RA1PPS          equ	3816	;# 
  1614   000EE9                     RA2PPS          equ	3817	;# 
  1615   000EEA                     RA3PPS          equ	3818	;# 
  1616   000EEB                     RA4PPS          equ	3819	;# 
  1617   000EEC                     RA5PPS          equ	3820	;# 
  1618   000EED                     RA6PPS          equ	3821	;# 
  1619   000EEE                     RA7PPS          equ	3822	;# 
  1620   000EEF                     RB0PPS          equ	3823	;# 
  1621   000EF0                     RB1PPS          equ	3824	;# 
  1622   000EF1                     RB2PPS          equ	3825	;# 
  1623   000EF2                     RB3PPS          equ	3826	;# 
  1624   000EF3                     RB4PPS          equ	3827	;# 
  1625   000EF4                     RB5PPS          equ	3828	;# 
  1626   000EF5                     RB6PPS          equ	3829	;# 
  1627   000EF6                     RB7PPS          equ	3830	;# 
  1628   000EF7                     RC0PPS          equ	3831	;# 
  1629   000EF8                     RC1PPS          equ	3832	;# 
  1630   000EF9                     RC2PPS          equ	3833	;# 
  1631   000EFA                     RC3PPS          equ	3834	;# 
  1632   000EFB                     RC4PPS          equ	3835	;# 
  1633   000EFC                     RC5PPS          equ	3836	;# 
  1634   000EFD                     RC6PPS          equ	3837	;# 
  1635   000EFE                     RC7PPS          equ	3838	;# 
  1636   000F0A                     IOCAF           equ	3850	;# 
  1637   000F0B                     IOCAN           equ	3851	;# 
  1638   000F0C                     IOCAP           equ	3852	;# 
  1639   000F0D                     INLVLA          equ	3853	;# 
  1640   000F0E                     SLRCONA         equ	3854	;# 
  1641   000F0F                     ODCONA          equ	3855	;# 
  1642   000F10                     WPUA            equ	3856	;# 
  1643   000F11                     ANSELA          equ	3857	;# 
  1644   000F12                     IOCBF           equ	3858	;# 
  1645   000F13                     IOCBN           equ	3859	;# 
  1646   000F14                     IOCBP           equ	3860	;# 
  1647   000F15                     INLVLB          equ	3861	;# 
  1648   000F16                     SLRCONB         equ	3862	;# 
  1649   000F17                     ODCONB          equ	3863	;# 
  1650   000F18                     WPUB            equ	3864	;# 
  1651   000F19                     ANSELB          equ	3865	;# 
  1652   000F1A                     IOCCF           equ	3866	;# 
  1653   000F1B                     IOCCN           equ	3867	;# 
  1654   000F1C                     IOCCP           equ	3868	;# 
  1655   000F1D                     INLVLC          equ	3869	;# 
  1656   000F1E                     SLRCONC         equ	3870	;# 
  1657   000F1F                     ODCONC          equ	3871	;# 
  1658   000F20                     WPUC            equ	3872	;# 
  1659   000F21                     ANSELC          equ	3873	;# 
  1660   000F27                     IOCEF           equ	3879	;# 
  1661   000F28                     IOCEN           equ	3880	;# 
  1662   000F29                     IOCEP           equ	3881	;# 
  1663   000F2A                     INLVLE          equ	3882	;# 
  1664   000F2D                     WPUE            equ	3885	;# 
  1665   000F2F                     HLVDCON0        equ	3887	;# 
  1666   000F30                     HLVDCON1        equ	3888	;# 
  1667   000F31                     FVRCON          equ	3889	;# 
  1668   000F32                     ZCDCON          equ	3890	;# 
  1669   000F33                     DAC1CON0        equ	3891	;# 
  1670   000F34                     DAC1CON1        equ	3892	;# 
  1671   000F35                     CM2CON0         equ	3893	;# 
  1672   000F36                     CM2CON1         equ	3894	;# 
  1673   000F37                     CM2NCH          equ	3895	;# 
  1674   000F38                     CM2PCH          equ	3896	;# 
  1675   000F39                     CM1CON0         equ	3897	;# 
  1676   000F3A                     CM1CON1         equ	3898	;# 
  1677   000F3B                     CM1NCH          equ	3899	;# 
  1678   000F3C                     CM1PCH          equ	3900	;# 
  1679   000F3D                     CMOUT           equ	3901	;# 
  1680   000F3E                     CLKRCON         equ	3902	;# 
  1681   000F3F                     CLKRCLK         equ	3903	;# 
  1682   000F40                     CWG1CLK         equ	3904	;# 
  1683   000F40                     CWG1CLKCON      equ	3904	;# 
  1684   000F41                     CWG1ISM         equ	3905	;# 
  1685   000F42                     CWG1DBR         equ	3906	;# 
  1686   000F43                     CWG1DBF         equ	3907	;# 
  1687   000F44                     CWG1CON0        equ	3908	;# 
  1688   000F45                     CWG1CON1        equ	3909	;# 
  1689   000F46                     CWG1AS0         equ	3910	;# 
  1690   000F47                     CWG1AS1         equ	3911	;# 
  1691   000F48                     CWG1STR         equ	3912	;# 
  1692   000F49                     SCANLADR        equ	3913	;# 
  1693   000F49                     SCANLADRL       equ	3913	;# 
  1694   000F4A                     SCANLADRH       equ	3914	;# 
  1695   000F4B                     SCANLADRU       equ	3915	;# 
  1696   000F4C                     SCANHADR        equ	3916	;# 
  1697   000F4C                     SCANHADRL       equ	3916	;# 
  1698   000F4D                     SCANHADRH       equ	3917	;# 
  1699   000F4E                     SCANHADRU       equ	3918	;# 
  1700   000F4F                     SCANCON0        equ	3919	;# 
  1701   000F50                     SCANTRIG        equ	3920	;# 
  1702   000F51                     MDCON0          equ	3921	;# 
  1703   000F52                     MDCON1          equ	3922	;# 
  1704   000F53                     MDSRC           equ	3923	;# 
  1705   000F54                     MDCARL          equ	3924	;# 
  1706   000F55                     MDCARH          equ	3925	;# 
  1707   000F56                     ADACT           equ	3926	;# 
  1708   000F57                     ADCLK           equ	3927	;# 
  1709   000F58                     ADREF           equ	3928	;# 
  1710   000F59                     ADCON1          equ	3929	;# 
  1711   000F5A                     ADCON2          equ	3930	;# 
  1712   000F5B                     ADCON3          equ	3931	;# 
  1713   000F5C                     ADACQ           equ	3932	;# 
  1714   000F5D                     ADCAP           equ	3933	;# 
  1715   000F5E                     ADPRE           equ	3934	;# 
  1716   000F5F                     ADPCH           equ	3935	;# 
  1717   000F60                     ADCON0          equ	3936	;# 
  1718   000F61                     ADPREV          equ	3937	;# 
  1719   000F61                     ADPREVL         equ	3937	;# 
  1720   000F62                     ADPREVH         equ	3938	;# 
  1721   000F63                     ADRES           equ	3939	;# 
  1722   000F63                     ADRESL          equ	3939	;# 
  1723   000F64                     ADRESH          equ	3940	;# 
  1724   000F65                     ADSTAT          equ	3941	;# 
  1725   000F66                     ADRPT           equ	3942	;# 
  1726   000F67                     ADCNT           equ	3943	;# 
  1727   000F68                     ADSTPT          equ	3944	;# 
  1728   000F68                     ADSTPTL         equ	3944	;# 
  1729   000F69                     ADSTPTH         equ	3945	;# 
  1730   000F6A                     ADLTH           equ	3946	;# 
  1731   000F6A                     ADLTHL          equ	3946	;# 
  1732   000F6B                     ADLTHH          equ	3947	;# 
  1733   000F6C                     ADUTH           equ	3948	;# 
  1734   000F6C                     ADUTHL          equ	3948	;# 
  1735   000F6D                     ADUTHH          equ	3949	;# 
  1736   000F6E                     ADERR           equ	3950	;# 
  1737   000F6E                     ADERRL          equ	3950	;# 
  1738   000F6F                     ADERRH          equ	3951	;# 
  1739   000F70                     ADACC           equ	3952	;# 
  1740   000F70                     ADACCL          equ	3952	;# 
  1741   000F71                     ADACCH          equ	3953	;# 
  1742   000F72                     ADFLTR          equ	3954	;# 
  1743   000F72                     ADFLTRL         equ	3954	;# 
  1744   000F73                     ADFLTRH         equ	3955	;# 
  1745   000F74                     CRCDATA         equ	3956	;# 
  1746   000F74                     CRCDATL         equ	3956	;# 
  1747   000F75                     CRCDATH         equ	3957	;# 
  1748   000F76                     CRCACC          equ	3958	;# 
  1749   000F76                     CRCACCL         equ	3958	;# 
  1750   000F77                     CRCACCH         equ	3959	;# 
  1751   000F78                     CRCSHFT         equ	3960	;# 
  1752   000F78                     CRCSHIFTL       equ	3960	;# 
  1753   000F79                     CRCSHIFTH       equ	3961	;# 
  1754   000F7A                     CRCXOR          equ	3962	;# 
  1755   000F7A                     CRCXORL         equ	3962	;# 
  1756   000F7B                     CRCXORH         equ	3963	;# 
  1757   000F7C                     CRCCON0         equ	3964	;# 
  1758   000F7D                     CRCCON1         equ	3965	;# 
  1759   000F7E                     NVMADR          equ	3966	;# 
  1760   000F7E                     NVMADRL         equ	3966	;# 
  1761   000F7F                     NVMADRH         equ	3967	;# 
  1762   000F80                     NVMDAT          equ	3968	;# 
  1763   000F81                     NVMCON1         equ	3969	;# 
  1764   000F82                     NVMCON2         equ	3970	;# 
  1765   000F83                     LATA            equ	3971	;# 
  1766   000F84                     LATB            equ	3972	;# 
  1767   000F85                     LATC            equ	3973	;# 
  1768   000F88                     TRISA           equ	3976	;# 
  1769   000F88                     DDRA            equ	3976	;# 
  1770   000F89                     TRISB           equ	3977	;# 
  1771   000F89                     DDRB            equ	3977	;# 
  1772   000F8A                     TRISC           equ	3978	;# 
  1773   000F8A                     DDRC            equ	3978	;# 
  1774   000F8D                     PORTA           equ	3981	;# 
  1775   000F8E                     PORTB           equ	3982	;# 
  1776   000F8F                     PORTC           equ	3983	;# 
  1777   000F91                     PORTE           equ	3985	;# 
  1778   000F92                     SSP1BUF         equ	3986	;# 
  1779   000F93                     SSP1ADD         equ	3987	;# 
  1780   000F94                     SSP1MSK         equ	3988	;# 
  1781   000F95                     SSP1STAT        equ	3989	;# 
  1782   000F96                     SSP1CON1        equ	3990	;# 
  1783   000F97                     SSP1CON2        equ	3991	;# 
  1784   000F98                     SSP1CON3        equ	3992	;# 
  1785   000F99                     RC1REG          equ	3993	;# 
  1786   000F99                     RCREG           equ	3993	;# 
  1787   000F99                     RCREG1          equ	3993	;# 
  1788   000F9A                     TX1REG          equ	3994	;# 
  1789   000F9A                     TXREG1          equ	3994	;# 
  1790   000F9A                     TXREG           equ	3994	;# 
  1791   000F9B                     SP1BRG          equ	3995	;# 
  1792   000F9B                     SP1BRGL         equ	3995	;# 
  1793   000F9B                     SPBRG           equ	3995	;# 
  1794   000F9B                     SPBRG1          equ	3995	;# 
  1795   000F9B                     SPBRGL          equ	3995	;# 
  1796   000F9C                     SP1BRGH         equ	3996	;# 
  1797   000F9C                     SPBRGH          equ	3996	;# 
  1798   000F9C                     SPBRGH1         equ	3996	;# 
  1799   000F9D                     RC1STA          equ	3997	;# 
  1800   000F9D                     RCSTA1          equ	3997	;# 
  1801   000F9D                     RCSTA           equ	3997	;# 
  1802   000F9E                     TX1STA          equ	3998	;# 
  1803   000F9E                     TXSTA1          equ	3998	;# 
  1804   000F9E                     TXSTA           equ	3998	;# 
  1805   000F9F                     BAUD1CON        equ	3999	;# 
  1806   000F9F                     BAUDCON1        equ	3999	;# 
  1807   000F9F                     BAUDCTL1        equ	3999	;# 
  1808   000F9F                     BAUDCON         equ	3999	;# 
  1809   000F9F                     BAUDCTL         equ	3999	;# 
  1810   000FA0                     PWM4DC          equ	4000	;# 
  1811   000FA0                     PWM4DCL         equ	4000	;# 
  1812   000FA1                     PWM4DCH         equ	4001	;# 
  1813   000FA2                     PWM4CON         equ	4002	;# 
  1814   000FA3                     PWM3DC          equ	4003	;# 
  1815   000FA3                     PWM3DCL         equ	4003	;# 
  1816   000FA4                     PWM3DCH         equ	4004	;# 
  1817   000FA5                     PWM3CON         equ	4005	;# 
  1818   000FA6                     CCPR2           equ	4006	;# 
  1819   000FA6                     CCPR2L          equ	4006	;# 
  1820   000FA7                     CCPR2H          equ	4007	;# 
  1821   000FA8                     CCP2CON         equ	4008	;# 
  1822   000FA9                     CCP2CAP         equ	4009	;# 
  1823   000FAA                     CCPR1           equ	4010	;# 
  1824   000FAA                     CCPR1L          equ	4010	;# 
  1825   000FAB                     CCPR1H          equ	4011	;# 
  1826   000FAC                     CCP1CON         equ	4012	;# 
  1827   000FAD                     CCP1CAP         equ	4013	;# 
  1828   000FAE                     CCPTMRS         equ	4014	;# 
  1829   000FAF                     T6TMR           equ	4015	;# 
  1830   000FAF                     TMR6            equ	4015	;# 
  1831   000FB0                     T6PR            equ	4016	;# 
  1832   000FB0                     PR6             equ	4016	;# 
  1833   000FB1                     T6CON           equ	4017	;# 
  1834   000FB2                     T6HLT           equ	4018	;# 
  1835   000FB3                     T6CLKCON        equ	4019	;# 
  1836   000FB3                     T6CLK           equ	4019	;# 
  1837   000FB4                     T6RST           equ	4020	;# 
  1838   000FB5                     T4TMR           equ	4021	;# 
  1839   000FB5                     TMR4            equ	4021	;# 
  1840   000FB6                     T4PR            equ	4022	;# 
  1841   000FB6                     PR4             equ	4022	;# 
  1842   000FB7                     T4CON           equ	4023	;# 
  1843   000FB8                     T4HLT           equ	4024	;# 
  1844   000FB9                     T4CLKCON        equ	4025	;# 
  1845   000FB9                     T4CLK           equ	4025	;# 
  1846   000FBA                     T4RST           equ	4026	;# 
  1847   000FBB                     T2TMR           equ	4027	;# 
  1848   000FBB                     TMR2            equ	4027	;# 
  1849   000FBC                     T2PR            equ	4028	;# 
  1850   000FBC                     PR2             equ	4028	;# 
  1851   000FBD                     T2CON           equ	4029	;# 
  1852   000FBE                     T2HLT           equ	4030	;# 
  1853   000FBF                     T2CLKCON        equ	4031	;# 
  1854   000FBF                     T2CLK           equ	4031	;# 
  1855   000FC0                     T2RST           equ	4032	;# 
  1856   000FC1                     TMR5            equ	4033	;# 
  1857   000FC1                     TMR5L           equ	4033	;# 
  1858   000FC2                     TMR5H           equ	4034	;# 
  1859   000FC3                     T5CON           equ	4035	;# 
  1860   000FC4                     T5GCON          equ	4036	;# 
  1861   000FC4                     PR5             equ	4036	;# 
  1862   000FC5                     T5GATE          equ	4037	;# 
  1863   000FC5                     TMR5GATE        equ	4037	;# 
  1864   000FC6                     T5CLK           equ	4038	;# 
  1865   000FC6                     TMR5CLK         equ	4038	;# 
  1866   000FC7                     TMR3            equ	4039	;# 
  1867   000FC7                     TMR3L           equ	4039	;# 
  1868   000FC8                     TMR3H           equ	4040	;# 
  1869   000FC9                     T3CON           equ	4041	;# 
  1870   000FCA                     T3GCON          equ	4042	;# 
  1871   000FCA                     PR3             equ	4042	;# 
  1872   000FCB                     T3GATE          equ	4043	;# 
  1873   000FCB                     TMR3GATE        equ	4043	;# 
  1874   000FCC                     T3CLK           equ	4044	;# 
  1875   000FCC                     TMR3CLK         equ	4044	;# 
  1876   000FCD                     TMR1            equ	4045	;# 
  1877   000FCD                     TMR1L           equ	4045	;# 
  1878   000FCE                     TMR1H           equ	4046	;# 
  1879   000FCF                     T1CON           equ	4047	;# 
  1880   000FD0                     T1GCON          equ	4048	;# 
  1881   000FD0                     PR1             equ	4048	;# 
  1882   000FD1                     T1GATE          equ	4049	;# 
  1883   000FD1                     TMR1GATE        equ	4049	;# 
  1884   000FD2                     T1CLK           equ	4050	;# 
  1885   000FD2                     TMR1CLK         equ	4050	;# 
  1886   000FD3                     TMR0L           equ	4051	;# 
  1887   000FD3                     TMR0            equ	4051	;# 
  1888   000FD4                     TMR0H           equ	4052	;# 
  1889   000FD4                     PR0             equ	4052	;# 
  1890   000FD5                     T0CON0          equ	4053	;# 
  1891   000FD6                     T0CON1          equ	4054	;# 
  1892   000FD7                     PCON0           equ	4055	;# 
  1893   000FD8                     STATUS          equ	4056	;# 
  1894   000FD9                     FSR2            equ	4057	;# 
  1895   000FD9                     FSR2L           equ	4057	;# 
  1896   000FDA                     FSR2H           equ	4058	;# 
  1897   000FDB                     PLUSW2          equ	4059	;# 
  1898   000FDC                     PREINC2         equ	4060	;# 
  1899   000FDD                     POSTDEC2        equ	4061	;# 
  1900   000FDE                     POSTINC2        equ	4062	;# 
  1901   000FDF                     INDF2           equ	4063	;# 
  1902   000FE0                     BSR             equ	4064	;# 
  1903   000FE1                     FSR1            equ	4065	;# 
  1904   000FE1                     FSR1L           equ	4065	;# 
  1905   000FE2                     FSR1H           equ	4066	;# 
  1906   000FE3                     PLUSW1          equ	4067	;# 
  1907   000FE4                     PREINC1         equ	4068	;# 
  1908   000FE5                     POSTDEC1        equ	4069	;# 
  1909   000FE6                     POSTINC1        equ	4070	;# 
  1910   000FE7                     INDF1           equ	4071	;# 
  1911   000FE8                     WREG            equ	4072	;# 
  1912   000FE9                     FSR0            equ	4073	;# 
  1913   000FE9                     FSR0L           equ	4073	;# 
  1914   000FEA                     FSR0H           equ	4074	;# 
  1915   000FEB                     PLUSW0          equ	4075	;# 
  1916   000FEC                     PREINC0         equ	4076	;# 
  1917   000FED                     POSTDEC0        equ	4077	;# 
  1918   000FEE                     POSTINC0        equ	4078	;# 
  1919   000FEF                     INDF0           equ	4079	;# 
  1920   000FF2                     INTCON          equ	4082	;# 
  1921   000FF3                     PROD            equ	4083	;# 
  1922   000FF3                     PRODL           equ	4083	;# 
  1923   000FF4                     PRODH           equ	4084	;# 
  1924   000FF5                     TABLAT          equ	4085	;# 
  1925   000FF6                     TBLPTR          equ	4086	;# 
  1926   000FF6                     TBLPTRL         equ	4086	;# 
  1927   000FF7                     TBLPTRH         equ	4087	;# 
  1928   000FF8                     TBLPTRU         equ	4088	;# 
  1929   000FF9                     PCLAT           equ	4089	;# 
  1930   000FF9                     PC              equ	4089	;# 
  1931   000FF9                     PCL             equ	4089	;# 
  1932   000FFA                     PCLATH          equ	4090	;# 
  1933   000FFB                     PCLATU          equ	4091	;# 
  1934   000FFC                     STKPTR          equ	4092	;# 
  1935   000FFD                     TOS             equ	4093	;# 
  1936   000FFD                     TOSL            equ	4093	;# 
  1937   000FFE                     TOSH            equ	4094	;# 
  1938   000FFF                     TOSU            equ	4095	;# 
  1939   000E8D                     RX2PPS          equ	3725	;# 
  1940   000E8E                     CK2PPS          equ	3726	;# 
  1941   000E8E                     TX2PPS          equ	3726	;# 
  1942   000E8F                     SSP2CLKPPS      equ	3727	;# 
  1943   000E90                     SSP2DATPPS      equ	3728	;# 
  1944   000E91                     SSP2SSPPS       equ	3729	;# 
  1945   000E92                     SSP2BUF         equ	3730	;# 
  1946   000E93                     SSP2ADD         equ	3731	;# 
  1947   000E94                     SSP2MSK         equ	3732	;# 
  1948   000E95                     SSP2STAT        equ	3733	;# 
  1949   000E96                     SSP2CON1        equ	3734	;# 
  1950   000E97                     SSP2CON2        equ	3735	;# 
  1951   000E98                     SSP2CON3        equ	3736	;# 
  1952   000E99                     RC2REG          equ	3737	;# 
  1953   000E99                     RCREG2          equ	3737	;# 
  1954   000E9A                     TX2REG          equ	3738	;# 
  1955   000E9A                     TXREG2          equ	3738	;# 
  1956   000E9B                     SP2BRG          equ	3739	;# 
  1957   000E9B                     SP2BRGL         equ	3739	;# 
  1958   000E9B                     SPBRG2          equ	3739	;# 
  1959   000E9C                     SP2BRGH         equ	3740	;# 
  1960   000E9C                     SPBRGH2         equ	3740	;# 
  1961   000E9D                     RC2STA          equ	3741	;# 
  1962   000E9D                     RCSTA2          equ	3741	;# 
  1963   000E9E                     TX2STA          equ	3742	;# 
  1964   000E9E                     TXSTA2          equ	3742	;# 
  1965   000E9F                     BAUD2CON        equ	3743	;# 
  1966   000E9F                     BAUDCON2        equ	3743	;# 
  1967   000E9F                     BAUDCTL2        equ	3743	;# 
  1968   000EA0                     PPSLOCK         equ	3744	;# 
  1969   000EA1                     INT0PPS         equ	3745	;# 
  1970   000EA2                     INT1PPS         equ	3746	;# 
  1971   000EA3                     INT2PPS         equ	3747	;# 
  1972   000EA4                     T0CKIPPS        equ	3748	;# 
  1973   000EA5                     T1CKIPPS        equ	3749	;# 
  1974   000EA6                     T1GPPS          equ	3750	;# 
  1975   000EA7                     T3CKIPPS        equ	3751	;# 
  1976   000EA8                     T3GPPS          equ	3752	;# 
  1977   000EA9                     T5CKIPPS        equ	3753	;# 
  1978   000EAA                     T5GPPS          equ	3754	;# 
  1979   000EAB                     T2INPPS         equ	3755	;# 
  1980   000EAC                     T4INPPS         equ	3756	;# 
  1981   000EAD                     T6INPPS         equ	3757	;# 
  1982   000EAE                     ADACTPPS        equ	3758	;# 
  1983   000EAF                     CCP1PPS         equ	3759	;# 
  1984   000EB0                     CCP2PPS         equ	3760	;# 
  1985   000EB1                     CWG1PPS         equ	3761	;# 
  1986   000EB1                     CWGINPPS        equ	3761	;# 
  1987   000EB2                     MDCARLPPS       equ	3762	;# 
  1988   000EB3                     MDCARHPPS       equ	3763	;# 
  1989   000EB4                     MDSRCPPS        equ	3764	;# 
  1990   000EB5                     RX1PPS          equ	3765	;# 
  1991   000EB5                     RXPPS           equ	3765	;# 
  1992   000EB6                     CK1PPS          equ	3766	;# 
  1993   000EB6                     TX1PPS          equ	3766	;# 
  1994   000EB6                     CKPPS           equ	3766	;# 
  1995   000EB6                     TXPPS           equ	3766	;# 
  1996   000EB7                     SSP1CLKPPS      equ	3767	;# 
  1997   000EB7                     SSPCLKPPS       equ	3767	;# 
  1998   000EB8                     SSP1DATPPS      equ	3768	;# 
  1999   000EB8                     SSPDATPPS       equ	3768	;# 
  2000   000EB9                     SSP1SSPPS       equ	3769	;# 
  2001   000EB9                     SSPSSPPS        equ	3769	;# 
  2002   000EBA                     IPR0            equ	3770	;# 
  2003   000EBB                     IPR1            equ	3771	;# 
  2004   000EBC                     IPR2            equ	3772	;# 
  2005   000EBD                     IPR3            equ	3773	;# 
  2006   000EBE                     IPR4            equ	3774	;# 
  2007   000EBF                     IPR5            equ	3775	;# 
  2008   000EC0                     IPR6            equ	3776	;# 
  2009   000EC1                     IPR7            equ	3777	;# 
  2010   000EC2                     PIE0            equ	3778	;# 
  2011   000EC3                     PIE1            equ	3779	;# 
  2012   000EC4                     PIE2            equ	3780	;# 
  2013   000EC5                     PIE3            equ	3781	;# 
  2014   000EC6                     PIE4            equ	3782	;# 
  2015   000EC7                     PIE5            equ	3783	;# 
  2016   000EC8                     PIE6            equ	3784	;# 
  2017   000EC9                     PIE7            equ	3785	;# 
  2018   000ECA                     PIR0            equ	3786	;# 
  2019   000ECB                     PIR1            equ	3787	;# 
  2020   000ECC                     PIR2            equ	3788	;# 
  2021   000ECD                     PIR3            equ	3789	;# 
  2022   000ECE                     PIR4            equ	3790	;# 
  2023   000ECF                     PIR5            equ	3791	;# 
  2024   000ED0                     PIR6            equ	3792	;# 
  2025   000ED1                     PIR7            equ	3793	;# 
  2026   000ED2                     WDTCON0         equ	3794	;# 
  2027   000ED3                     WDTCON1         equ	3795	;# 
  2028   000ED4                     WDTPSL          equ	3796	;# 
  2029   000ED5                     WDTPSH          equ	3797	;# 
  2030   000ED6                     WDTTMR          equ	3798	;# 
  2031   000ED7                     CPUDOZE         equ	3799	;# 
  2032   000ED8                     OSCCON1         equ	3800	;# 
  2033   000ED9                     OSCCON2         equ	3801	;# 
  2034   000EDA                     OSCCON3         equ	3802	;# 
  2035   000EDB                     OSCSTAT         equ	3803	;# 
  2036   000EDB                     OSCSTAT1        equ	3803	;# 
  2037   000EDC                     OSCEN           equ	3804	;# 
  2038   000EDD                     OSCTUNE         equ	3805	;# 
  2039   000EDE                     OSCFRQ          equ	3806	;# 
  2040   000EE0                     BORCON          equ	3808	;# 
  2041   000EE1                     PMD0            equ	3809	;# 
  2042   000EE2                     PMD1            equ	3810	;# 
  2043   000EE3                     PMD2            equ	3811	;# 
  2044   000EE4                     PMD3            equ	3812	;# 
  2045   000EE5                     PMD4            equ	3813	;# 
  2046   000EE6                     PMD5            equ	3814	;# 
  2047   000EE7                     RA0PPS          equ	3815	;# 
  2048   000EE8                     RA1PPS          equ	3816	;# 
  2049   000EE9                     RA2PPS          equ	3817	;# 
  2050   000EEA                     RA3PPS          equ	3818	;# 
  2051   000EEB                     RA4PPS          equ	3819	;# 
  2052   000EEC                     RA5PPS          equ	3820	;# 
  2053   000EED                     RA6PPS          equ	3821	;# 
  2054   000EEE                     RA7PPS          equ	3822	;# 
  2055   000EEF                     RB0PPS          equ	3823	;# 
  2056   000EF0                     RB1PPS          equ	3824	;# 
  2057   000EF1                     RB2PPS          equ	3825	;# 
  2058   000EF2                     RB3PPS          equ	3826	;# 
  2059   000EF3                     RB4PPS          equ	3827	;# 
  2060   000EF4                     RB5PPS          equ	3828	;# 
  2061   000EF5                     RB6PPS          equ	3829	;# 
  2062   000EF6                     RB7PPS          equ	3830	;# 
  2063   000EF7                     RC0PPS          equ	3831	;# 
  2064   000EF8                     RC1PPS          equ	3832	;# 
  2065   000EF9                     RC2PPS          equ	3833	;# 
  2066   000EFA                     RC3PPS          equ	3834	;# 
  2067   000EFB                     RC4PPS          equ	3835	;# 
  2068   000EFC                     RC5PPS          equ	3836	;# 
  2069   000EFD                     RC6PPS          equ	3837	;# 
  2070   000EFE                     RC7PPS          equ	3838	;# 
  2071   000F0A                     IOCAF           equ	3850	;# 
  2072   000F0B                     IOCAN           equ	3851	;# 
  2073   000F0C                     IOCAP           equ	3852	;# 
  2074   000F0D                     INLVLA          equ	3853	;# 
  2075   000F0E                     SLRCONA         equ	3854	;# 
  2076   000F0F                     ODCONA          equ	3855	;# 
  2077   000F10                     WPUA            equ	3856	;# 
  2078   000F11                     ANSELA          equ	3857	;# 
  2079   000F12                     IOCBF           equ	3858	;# 
  2080   000F13                     IOCBN           equ	3859	;# 
  2081   000F14                     IOCBP           equ	3860	;# 
  2082   000F15                     INLVLB          equ	3861	;# 
  2083   000F16                     SLRCONB         equ	3862	;# 
  2084   000F17                     ODCONB          equ	3863	;# 
  2085   000F18                     WPUB            equ	3864	;# 
  2086   000F19                     ANSELB          equ	3865	;# 
  2087   000F1A                     IOCCF           equ	3866	;# 
  2088   000F1B                     IOCCN           equ	3867	;# 
  2089   000F1C                     IOCCP           equ	3868	;# 
  2090   000F1D                     INLVLC          equ	3869	;# 
  2091   000F1E                     SLRCONC         equ	3870	;# 
  2092   000F1F                     ODCONC          equ	3871	;# 
  2093   000F20                     WPUC            equ	3872	;# 
  2094   000F21                     ANSELC          equ	3873	;# 
  2095   000F27                     IOCEF           equ	3879	;# 
  2096   000F28                     IOCEN           equ	3880	;# 
  2097   000F29                     IOCEP           equ	3881	;# 
  2098   000F2A                     INLVLE          equ	3882	;# 
  2099   000F2D                     WPUE            equ	3885	;# 
  2100   000F2F                     HLVDCON0        equ	3887	;# 
  2101   000F30                     HLVDCON1        equ	3888	;# 
  2102   000F31                     FVRCON          equ	3889	;# 
  2103   000F32                     ZCDCON          equ	3890	;# 
  2104   000F33                     DAC1CON0        equ	3891	;# 
  2105   000F34                     DAC1CON1        equ	3892	;# 
  2106   000F35                     CM2CON0         equ	3893	;# 
  2107   000F36                     CM2CON1         equ	3894	;# 
  2108   000F37                     CM2NCH          equ	3895	;# 
  2109   000F38                     CM2PCH          equ	3896	;# 
  2110   000F39                     CM1CON0         equ	3897	;# 
  2111   000F3A                     CM1CON1         equ	3898	;# 
  2112   000F3B                     CM1NCH          equ	3899	;# 
  2113   000F3C                     CM1PCH          equ	3900	;# 
  2114   000F3D                     CMOUT           equ	3901	;# 
  2115   000F3E                     CLKRCON         equ	3902	;# 
  2116   000F3F                     CLKRCLK         equ	3903	;# 
  2117   000F40                     CWG1CLK         equ	3904	;# 
  2118   000F40                     CWG1CLKCON      equ	3904	;# 
  2119   000F41                     CWG1ISM         equ	3905	;# 
  2120   000F42                     CWG1DBR         equ	3906	;# 
  2121   000F43                     CWG1DBF         equ	3907	;# 
  2122   000F44                     CWG1CON0        equ	3908	;# 
  2123   000F45                     CWG1CON1        equ	3909	;# 
  2124   000F46                     CWG1AS0         equ	3910	;# 
  2125   000F47                     CWG1AS1         equ	3911	;# 
  2126   000F48                     CWG1STR         equ	3912	;# 
  2127   000F49                     SCANLADR        equ	3913	;# 
  2128   000F49                     SCANLADRL       equ	3913	;# 
  2129   000F4A                     SCANLADRH       equ	3914	;# 
  2130   000F4B                     SCANLADRU       equ	3915	;# 
  2131   000F4C                     SCANHADR        equ	3916	;# 
  2132   000F4C                     SCANHADRL       equ	3916	;# 
  2133   000F4D                     SCANHADRH       equ	3917	;# 
  2134   000F4E                     SCANHADRU       equ	3918	;# 
  2135   000F4F                     SCANCON0        equ	3919	;# 
  2136   000F50                     SCANTRIG        equ	3920	;# 
  2137   000F51                     MDCON0          equ	3921	;# 
  2138   000F52                     MDCON1          equ	3922	;# 
  2139   000F53                     MDSRC           equ	3923	;# 
  2140   000F54                     MDCARL          equ	3924	;# 
  2141   000F55                     MDCARH          equ	3925	;# 
  2142   000F56                     ADACT           equ	3926	;# 
  2143   000F57                     ADCLK           equ	3927	;# 
  2144   000F58                     ADREF           equ	3928	;# 
  2145   000F59                     ADCON1          equ	3929	;# 
  2146   000F5A                     ADCON2          equ	3930	;# 
  2147   000F5B                     ADCON3          equ	3931	;# 
  2148   000F5C                     ADACQ           equ	3932	;# 
  2149   000F5D                     ADCAP           equ	3933	;# 
  2150   000F5E                     ADPRE           equ	3934	;# 
  2151   000F5F                     ADPCH           equ	3935	;# 
  2152   000F60                     ADCON0          equ	3936	;# 
  2153   000F61                     ADPREV          equ	3937	;# 
  2154   000F61                     ADPREVL         equ	3937	;# 
  2155   000F62                     ADPREVH         equ	3938	;# 
  2156   000F63                     ADRES           equ	3939	;# 
  2157   000F63                     ADRESL          equ	3939	;# 
  2158   000F64                     ADRESH          equ	3940	;# 
  2159   000F65                     ADSTAT          equ	3941	;# 
  2160   000F66                     ADRPT           equ	3942	;# 
  2161   000F67                     ADCNT           equ	3943	;# 
  2162   000F68                     ADSTPT          equ	3944	;# 
  2163   000F68                     ADSTPTL         equ	3944	;# 
  2164   000F69                     ADSTPTH         equ	3945	;# 
  2165   000F6A                     ADLTH           equ	3946	;# 
  2166   000F6A                     ADLTHL          equ	3946	;# 
  2167   000F6B                     ADLTHH          equ	3947	;# 
  2168   000F6C                     ADUTH           equ	3948	;# 
  2169   000F6C                     ADUTHL          equ	3948	;# 
  2170   000F6D                     ADUTHH          equ	3949	;# 
  2171   000F6E                     ADERR           equ	3950	;# 
  2172   000F6E                     ADERRL          equ	3950	;# 
  2173   000F6F                     ADERRH          equ	3951	;# 
  2174   000F70                     ADACC           equ	3952	;# 
  2175   000F70                     ADACCL          equ	3952	;# 
  2176   000F71                     ADACCH          equ	3953	;# 
  2177   000F72                     ADFLTR          equ	3954	;# 
  2178   000F72                     ADFLTRL         equ	3954	;# 
  2179   000F73                     ADFLTRH         equ	3955	;# 
  2180   000F74                     CRCDATA         equ	3956	;# 
  2181   000F74                     CRCDATL         equ	3956	;# 
  2182   000F75                     CRCDATH         equ	3957	;# 
  2183   000F76                     CRCACC          equ	3958	;# 
  2184   000F76                     CRCACCL         equ	3958	;# 
  2185   000F77                     CRCACCH         equ	3959	;# 
  2186   000F78                     CRCSHFT         equ	3960	;# 
  2187   000F78                     CRCSHIFTL       equ	3960	;# 
  2188   000F79                     CRCSHIFTH       equ	3961	;# 
  2189   000F7A                     CRCXOR          equ	3962	;# 
  2190   000F7A                     CRCXORL         equ	3962	;# 
  2191   000F7B                     CRCXORH         equ	3963	;# 
  2192   000F7C                     CRCCON0         equ	3964	;# 
  2193   000F7D                     CRCCON1         equ	3965	;# 
  2194   000F7E                     NVMADR          equ	3966	;# 
  2195   000F7E                     NVMADRL         equ	3966	;# 
  2196   000F7F                     NVMADRH         equ	3967	;# 
  2197   000F80                     NVMDAT          equ	3968	;# 
  2198   000F81                     NVMCON1         equ	3969	;# 
  2199   000F82                     NVMCON2         equ	3970	;# 
  2200   000F83                     LATA            equ	3971	;# 
  2201   000F84                     LATB            equ	3972	;# 
  2202   000F85                     LATC            equ	3973	;# 
  2203   000F88                     TRISA           equ	3976	;# 
  2204   000F88                     DDRA            equ	3976	;# 
  2205   000F89                     TRISB           equ	3977	;# 
  2206   000F89                     DDRB            equ	3977	;# 
  2207   000F8A                     TRISC           equ	3978	;# 
  2208   000F8A                     DDRC            equ	3978	;# 
  2209   000F8D                     PORTA           equ	3981	;# 
  2210   000F8E                     PORTB           equ	3982	;# 
  2211   000F8F                     PORTC           equ	3983	;# 
  2212   000F91                     PORTE           equ	3985	;# 
  2213   000F92                     SSP1BUF         equ	3986	;# 
  2214   000F93                     SSP1ADD         equ	3987	;# 
  2215   000F94                     SSP1MSK         equ	3988	;# 
  2216   000F95                     SSP1STAT        equ	3989	;# 
  2217   000F96                     SSP1CON1        equ	3990	;# 
  2218   000F97                     SSP1CON2        equ	3991	;# 
  2219   000F98                     SSP1CON3        equ	3992	;# 
  2220   000F99                     RC1REG          equ	3993	;# 
  2221   000F99                     RCREG           equ	3993	;# 
  2222   000F99                     RCREG1          equ	3993	;# 
  2223   000F9A                     TX1REG          equ	3994	;# 
  2224   000F9A                     TXREG1          equ	3994	;# 
  2225   000F9A                     TXREG           equ	3994	;# 
  2226   000F9B                     SP1BRG          equ	3995	;# 
  2227   000F9B                     SP1BRGL         equ	3995	;# 
  2228   000F9B                     SPBRG           equ	3995	;# 
  2229   000F9B                     SPBRG1          equ	3995	;# 
  2230   000F9B                     SPBRGL          equ	3995	;# 
  2231   000F9C                     SP1BRGH         equ	3996	;# 
  2232   000F9C                     SPBRGH          equ	3996	;# 
  2233   000F9C                     SPBRGH1         equ	3996	;# 
  2234   000F9D                     RC1STA          equ	3997	;# 
  2235   000F9D                     RCSTA1          equ	3997	;# 
  2236   000F9D                     RCSTA           equ	3997	;# 
  2237   000F9E                     TX1STA          equ	3998	;# 
  2238   000F9E                     TXSTA1          equ	3998	;# 
  2239   000F9E                     TXSTA           equ	3998	;# 
  2240   000F9F                     BAUD1CON        equ	3999	;# 
  2241   000F9F                     BAUDCON1        equ	3999	;# 
  2242   000F9F                     BAUDCTL1        equ	3999	;# 
  2243   000F9F                     BAUDCON         equ	3999	;# 
  2244   000F9F                     BAUDCTL         equ	3999	;# 
  2245   000FA0                     PWM4DC          equ	4000	;# 
  2246   000FA0                     PWM4DCL         equ	4000	;# 
  2247   000FA1                     PWM4DCH         equ	4001	;# 
  2248   000FA2                     PWM4CON         equ	4002	;# 
  2249   000FA3                     PWM3DC          equ	4003	;# 
  2250   000FA3                     PWM3DCL         equ	4003	;# 
  2251   000FA4                     PWM3DCH         equ	4004	;# 
  2252   000FA5                     PWM3CON         equ	4005	;# 
  2253   000FA6                     CCPR2           equ	4006	;# 
  2254   000FA6                     CCPR2L          equ	4006	;# 
  2255   000FA7                     CCPR2H          equ	4007	;# 
  2256   000FA8                     CCP2CON         equ	4008	;# 
  2257   000FA9                     CCP2CAP         equ	4009	;# 
  2258   000FAA                     CCPR1           equ	4010	;# 
  2259   000FAA                     CCPR1L          equ	4010	;# 
  2260   000FAB                     CCPR1H          equ	4011	;# 
  2261   000FAC                     CCP1CON         equ	4012	;# 
  2262   000FAD                     CCP1CAP         equ	4013	;# 
  2263   000FAE                     CCPTMRS         equ	4014	;# 
  2264   000FAF                     T6TMR           equ	4015	;# 
  2265   000FAF                     TMR6            equ	4015	;# 
  2266   000FB0                     T6PR            equ	4016	;# 
  2267   000FB0                     PR6             equ	4016	;# 
  2268   000FB1                     T6CON           equ	4017	;# 
  2269   000FB2                     T6HLT           equ	4018	;# 
  2270   000FB3                     T6CLKCON        equ	4019	;# 
  2271   000FB3                     T6CLK           equ	4019	;# 
  2272   000FB4                     T6RST           equ	4020	;# 
  2273   000FB5                     T4TMR           equ	4021	;# 
  2274   000FB5                     TMR4            equ	4021	;# 
  2275   000FB6                     T4PR            equ	4022	;# 
  2276   000FB6                     PR4             equ	4022	;# 
  2277   000FB7                     T4CON           equ	4023	;# 
  2278   000FB8                     T4HLT           equ	4024	;# 
  2279   000FB9                     T4CLKCON        equ	4025	;# 
  2280   000FB9                     T4CLK           equ	4025	;# 
  2281   000FBA                     T4RST           equ	4026	;# 
  2282   000FBB                     T2TMR           equ	4027	;# 
  2283   000FBB                     TMR2            equ	4027	;# 
  2284   000FBC                     T2PR            equ	4028	;# 
  2285   000FBC                     PR2             equ	4028	;# 
  2286   000FBD                     T2CON           equ	4029	;# 
  2287   000FBE                     T2HLT           equ	4030	;# 
  2288   000FBF                     T2CLKCON        equ	4031	;# 
  2289   000FBF                     T2CLK           equ	4031	;# 
  2290   000FC0                     T2RST           equ	4032	;# 
  2291   000FC1                     TMR5            equ	4033	;# 
  2292   000FC1                     TMR5L           equ	4033	;# 
  2293   000FC2                     TMR5H           equ	4034	;# 
  2294   000FC3                     T5CON           equ	4035	;# 
  2295   000FC4                     T5GCON          equ	4036	;# 
  2296   000FC4                     PR5             equ	4036	;# 
  2297   000FC5                     T5GATE          equ	4037	;# 
  2298   000FC5                     TMR5GATE        equ	4037	;# 
  2299   000FC6                     T5CLK           equ	4038	;# 
  2300   000FC6                     TMR5CLK         equ	4038	;# 
  2301   000FC7                     TMR3            equ	4039	;# 
  2302   000FC7                     TMR3L           equ	4039	;# 
  2303   000FC8                     TMR3H           equ	4040	;# 
  2304   000FC9                     T3CON           equ	4041	;# 
  2305   000FCA                     T3GCON          equ	4042	;# 
  2306   000FCA                     PR3             equ	4042	;# 
  2307   000FCB                     T3GATE          equ	4043	;# 
  2308   000FCB                     TMR3GATE        equ	4043	;# 
  2309   000FCC                     T3CLK           equ	4044	;# 
  2310   000FCC                     TMR3CLK         equ	4044	;# 
  2311   000FCD                     TMR1            equ	4045	;# 
  2312   000FCD                     TMR1L           equ	4045	;# 
  2313   000FCE                     TMR1H           equ	4046	;# 
  2314   000FCF                     T1CON           equ	4047	;# 
  2315   000FD0                     T1GCON          equ	4048	;# 
  2316   000FD0                     PR1             equ	4048	;# 
  2317   000FD1                     T1GATE          equ	4049	;# 
  2318   000FD1                     TMR1GATE        equ	4049	;# 
  2319   000FD2                     T1CLK           equ	4050	;# 
  2320   000FD2                     TMR1CLK         equ	4050	;# 
  2321   000FD3                     TMR0L           equ	4051	;# 
  2322   000FD3                     TMR0            equ	4051	;# 
  2323   000FD4                     TMR0H           equ	4052	;# 
  2324   000FD4                     PR0             equ	4052	;# 
  2325   000FD5                     T0CON0          equ	4053	;# 
  2326   000FD6                     T0CON1          equ	4054	;# 
  2327   000FD7                     PCON0           equ	4055	;# 
  2328   000FD8                     STATUS          equ	4056	;# 
  2329   000FD9                     FSR2            equ	4057	;# 
  2330   000FD9                     FSR2L           equ	4057	;# 
  2331   000FDA                     FSR2H           equ	4058	;# 
  2332   000FDB                     PLUSW2          equ	4059	;# 
  2333   000FDC                     PREINC2         equ	4060	;# 
  2334   000FDD                     POSTDEC2        equ	4061	;# 
  2335   000FDE                     POSTINC2        equ	4062	;# 
  2336   000FDF                     INDF2           equ	4063	;# 
  2337   000FE0                     BSR             equ	4064	;# 
  2338   000FE1                     FSR1            equ	4065	;# 
  2339   000FE1                     FSR1L           equ	4065	;# 
  2340   000FE2                     FSR1H           equ	4066	;# 
  2341   000FE3                     PLUSW1          equ	4067	;# 
  2342   000FE4                     PREINC1         equ	4068	;# 
  2343   000FE5                     POSTDEC1        equ	4069	;# 
  2344   000FE6                     POSTINC1        equ	4070	;# 
  2345   000FE7                     INDF1           equ	4071	;# 
  2346   000FE8                     WREG            equ	4072	;# 
  2347   000FE9                     FSR0            equ	4073	;# 
  2348   000FE9                     FSR0L           equ	4073	;# 
  2349   000FEA                     FSR0H           equ	4074	;# 
  2350   000FEB                     PLUSW0          equ	4075	;# 
  2351   000FEC                     PREINC0         equ	4076	;# 
  2352   000FED                     POSTDEC0        equ	4077	;# 
  2353   000FEE                     POSTINC0        equ	4078	;# 
  2354   000FEF                     INDF0           equ	4079	;# 
  2355   000FF2                     INTCON          equ	4082	;# 
  2356   000FF3                     PROD            equ	4083	;# 
  2357   000FF3                     PRODL           equ	4083	;# 
  2358   000FF4                     PRODH           equ	4084	;# 
  2359   000FF5                     TABLAT          equ	4085	;# 
  2360   000FF6                     TBLPTR          equ	4086	;# 
  2361   000FF6                     TBLPTRL         equ	4086	;# 
  2362   000FF7                     TBLPTRH         equ	4087	;# 
  2363   000FF8                     TBLPTRU         equ	4088	;# 
  2364   000FF9                     PCLAT           equ	4089	;# 
  2365   000FF9                     PC              equ	4089	;# 
  2366   000FF9                     PCL             equ	4089	;# 
  2367   000FFA                     PCLATH          equ	4090	;# 
  2368   000FFB                     PCLATU          equ	4091	;# 
  2369   000FFC                     STKPTR          equ	4092	;# 
  2370   000FFD                     TOS             equ	4093	;# 
  2371   000FFD                     TOSL            equ	4093	;# 
  2372   000FFE                     TOSH            equ	4094	;# 
  2373   000FFF                     TOSU            equ	4095	;# 
  2374   000E8D                     RX2PPS          equ	3725	;# 
  2375   000E8E                     CK2PPS          equ	3726	;# 
  2376   000E8E                     TX2PPS          equ	3726	;# 
  2377   000E8F                     SSP2CLKPPS      equ	3727	;# 
  2378   000E90                     SSP2DATPPS      equ	3728	;# 
  2379   000E91                     SSP2SSPPS       equ	3729	;# 
  2380   000E92                     SSP2BUF         equ	3730	;# 
  2381   000E93                     SSP2ADD         equ	3731	;# 
  2382   000E94                     SSP2MSK         equ	3732	;# 
  2383   000E95                     SSP2STAT        equ	3733	;# 
  2384   000E96                     SSP2CON1        equ	3734	;# 
  2385   000E97                     SSP2CON2        equ	3735	;# 
  2386   000E98                     SSP2CON3        equ	3736	;# 
  2387   000E99                     RC2REG          equ	3737	;# 
  2388   000E99                     RCREG2          equ	3737	;# 
  2389   000E9A                     TX2REG          equ	3738	;# 
  2390   000E9A                     TXREG2          equ	3738	;# 
  2391   000E9B                     SP2BRG          equ	3739	;# 
  2392   000E9B                     SP2BRGL         equ	3739	;# 
  2393   000E9B                     SPBRG2          equ	3739	;# 
  2394   000E9C                     SP2BRGH         equ	3740	;# 
  2395   000E9C                     SPBRGH2         equ	3740	;# 
  2396   000E9D                     RC2STA          equ	3741	;# 
  2397   000E9D                     RCSTA2          equ	3741	;# 
  2398   000E9E                     TX2STA          equ	3742	;# 
  2399   000E9E                     TXSTA2          equ	3742	;# 
  2400   000E9F                     BAUD2CON        equ	3743	;# 
  2401   000E9F                     BAUDCON2        equ	3743	;# 
  2402   000E9F                     BAUDCTL2        equ	3743	;# 
  2403   000EA0                     PPSLOCK         equ	3744	;# 
  2404   000EA1                     INT0PPS         equ	3745	;# 
  2405   000EA2                     INT1PPS         equ	3746	;# 
  2406   000EA3                     INT2PPS         equ	3747	;# 
  2407   000EA4                     T0CKIPPS        equ	3748	;# 
  2408   000EA5                     T1CKIPPS        equ	3749	;# 
  2409   000EA6                     T1GPPS          equ	3750	;# 
  2410   000EA7                     T3CKIPPS        equ	3751	;# 
  2411   000EA8                     T3GPPS          equ	3752	;# 
  2412   000EA9                     T5CKIPPS        equ	3753	;# 
  2413   000EAA                     T5GPPS          equ	3754	;# 
  2414   000EAB                     T2INPPS         equ	3755	;# 
  2415   000EAC                     T4INPPS         equ	3756	;# 
  2416   000EAD                     T6INPPS         equ	3757	;# 
  2417   000EAE                     ADACTPPS        equ	3758	;# 
  2418   000EAF                     CCP1PPS         equ	3759	;# 
  2419   000EB0                     CCP2PPS         equ	3760	;# 
  2420   000EB1                     CWG1PPS         equ	3761	;# 
  2421   000EB1                     CWGINPPS        equ	3761	;# 
  2422   000EB2                     MDCARLPPS       equ	3762	;# 
  2423   000EB3                     MDCARHPPS       equ	3763	;# 
  2424   000EB4                     MDSRCPPS        equ	3764	;# 
  2425   000EB5                     RX1PPS          equ	3765	;# 
  2426   000EB5                     RXPPS           equ	3765	;# 
  2427   000EB6                     CK1PPS          equ	3766	;# 
  2428   000EB6                     TX1PPS          equ	3766	;# 
  2429   000EB6                     CKPPS           equ	3766	;# 
  2430   000EB6                     TXPPS           equ	3766	;# 
  2431   000EB7                     SSP1CLKPPS      equ	3767	;# 
  2432   000EB7                     SSPCLKPPS       equ	3767	;# 
  2433   000EB8                     SSP1DATPPS      equ	3768	;# 
  2434   000EB8                     SSPDATPPS       equ	3768	;# 
  2435   000EB9                     SSP1SSPPS       equ	3769	;# 
  2436   000EB9                     SSPSSPPS        equ	3769	;# 
  2437   000EBA                     IPR0            equ	3770	;# 
  2438   000EBB                     IPR1            equ	3771	;# 
  2439   000EBC                     IPR2            equ	3772	;# 
  2440   000EBD                     IPR3            equ	3773	;# 
  2441   000EBE                     IPR4            equ	3774	;# 
  2442   000EBF                     IPR5            equ	3775	;# 
  2443   000EC0                     IPR6            equ	3776	;# 
  2444   000EC1                     IPR7            equ	3777	;# 
  2445   000EC2                     PIE0            equ	3778	;# 
  2446   000EC3                     PIE1            equ	3779	;# 
  2447   000EC4                     PIE2            equ	3780	;# 
  2448   000EC5                     PIE3            equ	3781	;# 
  2449   000EC6                     PIE4            equ	3782	;# 
  2450   000EC7                     PIE5            equ	3783	;# 
  2451   000EC8                     PIE6            equ	3784	;# 
  2452   000EC9                     PIE7            equ	3785	;# 
  2453   000ECA                     PIR0            equ	3786	;# 
  2454   000ECB                     PIR1            equ	3787	;# 
  2455   000ECC                     PIR2            equ	3788	;# 
  2456   000ECD                     PIR3            equ	3789	;# 
  2457   000ECE                     PIR4            equ	3790	;# 
  2458   000ECF                     PIR5            equ	3791	;# 
  2459   000ED0                     PIR6            equ	3792	;# 
  2460   000ED1                     PIR7            equ	3793	;# 
  2461   000ED2                     WDTCON0         equ	3794	;# 
  2462   000ED3                     WDTCON1         equ	3795	;# 
  2463   000ED4                     WDTPSL          equ	3796	;# 
  2464   000ED5                     WDTPSH          equ	3797	;# 
  2465   000ED6                     WDTTMR          equ	3798	;# 
  2466   000ED7                     CPUDOZE         equ	3799	;# 
  2467   000ED8                     OSCCON1         equ	3800	;# 
  2468   000ED9                     OSCCON2         equ	3801	;# 
  2469   000EDA                     OSCCON3         equ	3802	;# 
  2470   000EDB                     OSCSTAT         equ	3803	;# 
  2471   000EDB                     OSCSTAT1        equ	3803	;# 
  2472   000EDC                     OSCEN           equ	3804	;# 
  2473   000EDD                     OSCTUNE         equ	3805	;# 
  2474   000EDE                     OSCFRQ          equ	3806	;# 
  2475   000EE0                     BORCON          equ	3808	;# 
  2476   000EE1                     PMD0            equ	3809	;# 
  2477   000EE2                     PMD1            equ	3810	;# 
  2478   000EE3                     PMD2            equ	3811	;# 
  2479   000EE4                     PMD3            equ	3812	;# 
  2480   000EE5                     PMD4            equ	3813	;# 
  2481   000EE6                     PMD5            equ	3814	;# 
  2482   000EE7                     RA0PPS          equ	3815	;# 
  2483   000EE8                     RA1PPS          equ	3816	;# 
  2484   000EE9                     RA2PPS          equ	3817	;# 
  2485   000EEA                     RA3PPS          equ	3818	;# 
  2486   000EEB                     RA4PPS          equ	3819	;# 
  2487   000EEC                     RA5PPS          equ	3820	;# 
  2488   000EED                     RA6PPS          equ	3821	;# 
  2489   000EEE                     RA7PPS          equ	3822	;# 
  2490   000EEF                     RB0PPS          equ	3823	;# 
  2491   000EF0                     RB1PPS          equ	3824	;# 
  2492   000EF1                     RB2PPS          equ	3825	;# 
  2493   000EF2                     RB3PPS          equ	3826	;# 
  2494   000EF3                     RB4PPS          equ	3827	;# 
  2495   000EF4                     RB5PPS          equ	3828	;# 
  2496   000EF5                     RB6PPS          equ	3829	;# 
  2497   000EF6                     RB7PPS          equ	3830	;# 
  2498   000EF7                     RC0PPS          equ	3831	;# 
  2499   000EF8                     RC1PPS          equ	3832	;# 
  2500   000EF9                     RC2PPS          equ	3833	;# 
  2501   000EFA                     RC3PPS          equ	3834	;# 
  2502   000EFB                     RC4PPS          equ	3835	;# 
  2503   000EFC                     RC5PPS          equ	3836	;# 
  2504   000EFD                     RC6PPS          equ	3837	;# 
  2505   000EFE                     RC7PPS          equ	3838	;# 
  2506   000F0A                     IOCAF           equ	3850	;# 
  2507   000F0B                     IOCAN           equ	3851	;# 
  2508   000F0C                     IOCAP           equ	3852	;# 
  2509   000F0D                     INLVLA          equ	3853	;# 
  2510   000F0E                     SLRCONA         equ	3854	;# 
  2511   000F0F                     ODCONA          equ	3855	;# 
  2512   000F10                     WPUA            equ	3856	;# 
  2513   000F11                     ANSELA          equ	3857	;# 
  2514   000F12                     IOCBF           equ	3858	;# 
  2515   000F13                     IOCBN           equ	3859	;# 
  2516   000F14                     IOCBP           equ	3860	;# 
  2517   000F15                     INLVLB          equ	3861	;# 
  2518   000F16                     SLRCONB         equ	3862	;# 
  2519   000F17                     ODCONB          equ	3863	;# 
  2520   000F18                     WPUB            equ	3864	;# 
  2521   000F19                     ANSELB          equ	3865	;# 
  2522   000F1A                     IOCCF           equ	3866	;# 
  2523   000F1B                     IOCCN           equ	3867	;# 
  2524   000F1C                     IOCCP           equ	3868	;# 
  2525   000F1D                     INLVLC          equ	3869	;# 
  2526   000F1E                     SLRCONC         equ	3870	;# 
  2527   000F1F                     ODCONC          equ	3871	;# 
  2528   000F20                     WPUC            equ	3872	;# 
  2529   000F21                     ANSELC          equ	3873	;# 
  2530   000F27                     IOCEF           equ	3879	;# 
  2531   000F28                     IOCEN           equ	3880	;# 
  2532   000F29                     IOCEP           equ	3881	;# 
  2533   000F2A                     INLVLE          equ	3882	;# 
  2534   000F2D                     WPUE            equ	3885	;# 
  2535   000F2F                     HLVDCON0        equ	3887	;# 
  2536   000F30                     HLVDCON1        equ	3888	;# 
  2537   000F31                     FVRCON          equ	3889	;# 
  2538   000F32                     ZCDCON          equ	3890	;# 
  2539   000F33                     DAC1CON0        equ	3891	;# 
  2540   000F34                     DAC1CON1        equ	3892	;# 
  2541   000F35                     CM2CON0         equ	3893	;# 
  2542   000F36                     CM2CON1         equ	3894	;# 
  2543   000F37                     CM2NCH          equ	3895	;# 
  2544   000F38                     CM2PCH          equ	3896	;# 
  2545   000F39                     CM1CON0         equ	3897	;# 
  2546   000F3A                     CM1CON1         equ	3898	;# 
  2547   000F3B                     CM1NCH          equ	3899	;# 
  2548   000F3C                     CM1PCH          equ	3900	;# 
  2549   000F3D                     CMOUT           equ	3901	;# 
  2550   000F3E                     CLKRCON         equ	3902	;# 
  2551   000F3F                     CLKRCLK         equ	3903	;# 
  2552   000F40                     CWG1CLK         equ	3904	;# 
  2553   000F40                     CWG1CLKCON      equ	3904	;# 
  2554   000F41                     CWG1ISM         equ	3905	;# 
  2555   000F42                     CWG1DBR         equ	3906	;# 
  2556   000F43                     CWG1DBF         equ	3907	;# 
  2557   000F44                     CWG1CON0        equ	3908	;# 
  2558   000F45                     CWG1CON1        equ	3909	;# 
  2559   000F46                     CWG1AS0         equ	3910	;# 
  2560   000F47                     CWG1AS1         equ	3911	;# 
  2561   000F48                     CWG1STR         equ	3912	;# 
  2562   000F49                     SCANLADR        equ	3913	;# 
  2563   000F49                     SCANLADRL       equ	3913	;# 
  2564   000F4A                     SCANLADRH       equ	3914	;# 
  2565   000F4B                     SCANLADRU       equ	3915	;# 
  2566   000F4C                     SCANHADR        equ	3916	;# 
  2567   000F4C                     SCANHADRL       equ	3916	;# 
  2568   000F4D                     SCANHADRH       equ	3917	;# 
  2569   000F4E                     SCANHADRU       equ	3918	;# 
  2570   000F4F                     SCANCON0        equ	3919	;# 
  2571   000F50                     SCANTRIG        equ	3920	;# 
  2572   000F51                     MDCON0          equ	3921	;# 
  2573   000F52                     MDCON1          equ	3922	;# 
  2574   000F53                     MDSRC           equ	3923	;# 
  2575   000F54                     MDCARL          equ	3924	;# 
  2576   000F55                     MDCARH          equ	3925	;# 
  2577   000F56                     ADACT           equ	3926	;# 
  2578   000F57                     ADCLK           equ	3927	;# 
  2579   000F58                     ADREF           equ	3928	;# 
  2580   000F59                     ADCON1          equ	3929	;# 
  2581   000F5A                     ADCON2          equ	3930	;# 
  2582   000F5B                     ADCON3          equ	3931	;# 
  2583   000F5C                     ADACQ           equ	3932	;# 
  2584   000F5D                     ADCAP           equ	3933	;# 
  2585   000F5E                     ADPRE           equ	3934	;# 
  2586   000F5F                     ADPCH           equ	3935	;# 
  2587   000F60                     ADCON0          equ	3936	;# 
  2588   000F61                     ADPREV          equ	3937	;# 
  2589   000F61                     ADPREVL         equ	3937	;# 
  2590   000F62                     ADPREVH         equ	3938	;# 
  2591   000F63                     ADRES           equ	3939	;# 
  2592   000F63                     ADRESL          equ	3939	;# 
  2593   000F64                     ADRESH          equ	3940	;# 
  2594   000F65                     ADSTAT          equ	3941	;# 
  2595   000F66                     ADRPT           equ	3942	;# 
  2596   000F67                     ADCNT           equ	3943	;# 
  2597   000F68                     ADSTPT          equ	3944	;# 
  2598   000F68                     ADSTPTL         equ	3944	;# 
  2599   000F69                     ADSTPTH         equ	3945	;# 
  2600   000F6A                     ADLTH           equ	3946	;# 
  2601   000F6A                     ADLTHL          equ	3946	;# 
  2602   000F6B                     ADLTHH          equ	3947	;# 
  2603   000F6C                     ADUTH           equ	3948	;# 
  2604   000F6C                     ADUTHL          equ	3948	;# 
  2605   000F6D                     ADUTHH          equ	3949	;# 
  2606   000F6E                     ADERR           equ	3950	;# 
  2607   000F6E                     ADERRL          equ	3950	;# 
  2608   000F6F                     ADERRH          equ	3951	;# 
  2609   000F70                     ADACC           equ	3952	;# 
  2610   000F70                     ADACCL          equ	3952	;# 
  2611   000F71                     ADACCH          equ	3953	;# 
  2612   000F72                     ADFLTR          equ	3954	;# 
  2613   000F72                     ADFLTRL         equ	3954	;# 
  2614   000F73                     ADFLTRH         equ	3955	;# 
  2615   000F74                     CRCDATA         equ	3956	;# 
  2616   000F74                     CRCDATL         equ	3956	;# 
  2617   000F75                     CRCDATH         equ	3957	;# 
  2618   000F76                     CRCACC          equ	3958	;# 
  2619   000F76                     CRCACCL         equ	3958	;# 
  2620   000F77                     CRCACCH         equ	3959	;# 
  2621   000F78                     CRCSHFT         equ	3960	;# 
  2622   000F78                     CRCSHIFTL       equ	3960	;# 
  2623   000F79                     CRCSHIFTH       equ	3961	;# 
  2624   000F7A                     CRCXOR          equ	3962	;# 
  2625   000F7A                     CRCXORL         equ	3962	;# 
  2626   000F7B                     CRCXORH         equ	3963	;# 
  2627   000F7C                     CRCCON0         equ	3964	;# 
  2628   000F7D                     CRCCON1         equ	3965	;# 
  2629   000F7E                     NVMADR          equ	3966	;# 
  2630   000F7E                     NVMADRL         equ	3966	;# 
  2631   000F7F                     NVMADRH         equ	3967	;# 
  2632   000F80                     NVMDAT          equ	3968	;# 
  2633   000F81                     NVMCON1         equ	3969	;# 
  2634   000F82                     NVMCON2         equ	3970	;# 
  2635   000F83                     LATA            equ	3971	;# 
  2636   000F84                     LATB            equ	3972	;# 
  2637   000F85                     LATC            equ	3973	;# 
  2638   000F88                     TRISA           equ	3976	;# 
  2639   000F88                     DDRA            equ	3976	;# 
  2640   000F89                     TRISB           equ	3977	;# 
  2641   000F89                     DDRB            equ	3977	;# 
  2642   000F8A                     TRISC           equ	3978	;# 
  2643   000F8A                     DDRC            equ	3978	;# 
  2644   000F8D                     PORTA           equ	3981	;# 
  2645   000F8E                     PORTB           equ	3982	;# 
  2646   000F8F                     PORTC           equ	3983	;# 
  2647   000F91                     PORTE           equ	3985	;# 
  2648   000F92                     SSP1BUF         equ	3986	;# 
  2649   000F93                     SSP1ADD         equ	3987	;# 
  2650   000F94                     SSP1MSK         equ	3988	;# 
  2651   000F95                     SSP1STAT        equ	3989	;# 
  2652   000F96                     SSP1CON1        equ	3990	;# 
  2653   000F97                     SSP1CON2        equ	3991	;# 
  2654   000F98                     SSP1CON3        equ	3992	;# 
  2655   000F99                     RC1REG          equ	3993	;# 
  2656   000F99                     RCREG           equ	3993	;# 
  2657   000F99                     RCREG1          equ	3993	;# 
  2658   000F9A                     TX1REG          equ	3994	;# 
  2659   000F9A                     TXREG1          equ	3994	;# 
  2660   000F9A                     TXREG           equ	3994	;# 
  2661   000F9B                     SP1BRG          equ	3995	;# 
  2662   000F9B                     SP1BRGL         equ	3995	;# 
  2663   000F9B                     SPBRG           equ	3995	;# 
  2664   000F9B                     SPBRG1          equ	3995	;# 
  2665   000F9B                     SPBRGL          equ	3995	;# 
  2666   000F9C                     SP1BRGH         equ	3996	;# 
  2667   000F9C                     SPBRGH          equ	3996	;# 
  2668   000F9C                     SPBRGH1         equ	3996	;# 
  2669   000F9D                     RC1STA          equ	3997	;# 
  2670   000F9D                     RCSTA1          equ	3997	;# 
  2671   000F9D                     RCSTA           equ	3997	;# 
  2672   000F9E                     TX1STA          equ	3998	;# 
  2673   000F9E                     TXSTA1          equ	3998	;# 
  2674   000F9E                     TXSTA           equ	3998	;# 
  2675   000F9F                     BAUD1CON        equ	3999	;# 
  2676   000F9F                     BAUDCON1        equ	3999	;# 
  2677   000F9F                     BAUDCTL1        equ	3999	;# 
  2678   000F9F                     BAUDCON         equ	3999	;# 
  2679   000F9F                     BAUDCTL         equ	3999	;# 
  2680   000FA0                     PWM4DC          equ	4000	;# 
  2681   000FA0                     PWM4DCL         equ	4000	;# 
  2682   000FA1                     PWM4DCH         equ	4001	;# 
  2683   000FA2                     PWM4CON         equ	4002	;# 
  2684   000FA3                     PWM3DC          equ	4003	;# 
  2685   000FA3                     PWM3DCL         equ	4003	;# 
  2686   000FA4                     PWM3DCH         equ	4004	;# 
  2687   000FA5                     PWM3CON         equ	4005	;# 
  2688   000FA6                     CCPR2           equ	4006	;# 
  2689   000FA6                     CCPR2L          equ	4006	;# 
  2690   000FA7                     CCPR2H          equ	4007	;# 
  2691   000FA8                     CCP2CON         equ	4008	;# 
  2692   000FA9                     CCP2CAP         equ	4009	;# 
  2693   000FAA                     CCPR1           equ	4010	;# 
  2694   000FAA                     CCPR1L          equ	4010	;# 
  2695   000FAB                     CCPR1H          equ	4011	;# 
  2696   000FAC                     CCP1CON         equ	4012	;# 
  2697   000FAD                     CCP1CAP         equ	4013	;# 
  2698   000FAE                     CCPTMRS         equ	4014	;# 
  2699   000FAF                     T6TMR           equ	4015	;# 
  2700   000FAF                     TMR6            equ	4015	;# 
  2701   000FB0                     T6PR            equ	4016	;# 
  2702   000FB0                     PR6             equ	4016	;# 
  2703   000FB1                     T6CON           equ	4017	;# 
  2704   000FB2                     T6HLT           equ	4018	;# 
  2705   000FB3                     T6CLKCON        equ	4019	;# 
  2706   000FB3                     T6CLK           equ	4019	;# 
  2707   000FB4                     T6RST           equ	4020	;# 
  2708   000FB5                     T4TMR           equ	4021	;# 
  2709   000FB5                     TMR4            equ	4021	;# 
  2710   000FB6                     T4PR            equ	4022	;# 
  2711   000FB6                     PR4             equ	4022	;# 
  2712   000FB7                     T4CON           equ	4023	;# 
  2713   000FB8                     T4HLT           equ	4024	;# 
  2714   000FB9                     T4CLKCON        equ	4025	;# 
  2715   000FB9                     T4CLK           equ	4025	;# 
  2716   000FBA                     T4RST           equ	4026	;# 
  2717   000FBB                     T2TMR           equ	4027	;# 
  2718   000FBB                     TMR2            equ	4027	;# 
  2719   000FBC                     T2PR            equ	4028	;# 
  2720   000FBC                     PR2             equ	4028	;# 
  2721   000FBD                     T2CON           equ	4029	;# 
  2722   000FBE                     T2HLT           equ	4030	;# 
  2723   000FBF                     T2CLKCON        equ	4031	;# 
  2724   000FBF                     T2CLK           equ	4031	;# 
  2725   000FC0                     T2RST           equ	4032	;# 
  2726   000FC1                     TMR5            equ	4033	;# 
  2727   000FC1                     TMR5L           equ	4033	;# 
  2728   000FC2                     TMR5H           equ	4034	;# 
  2729   000FC3                     T5CON           equ	4035	;# 
  2730   000FC4                     T5GCON          equ	4036	;# 
  2731   000FC4                     PR5             equ	4036	;# 
  2732   000FC5                     T5GATE          equ	4037	;# 
  2733   000FC5                     TMR5GATE        equ	4037	;# 
  2734   000FC6                     T5CLK           equ	4038	;# 
  2735   000FC6                     TMR5CLK         equ	4038	;# 
  2736   000FC7                     TMR3            equ	4039	;# 
  2737   000FC7                     TMR3L           equ	4039	;# 
  2738   000FC8                     TMR3H           equ	4040	;# 
  2739   000FC9                     T3CON           equ	4041	;# 
  2740   000FCA                     T3GCON          equ	4042	;# 
  2741   000FCA                     PR3             equ	4042	;# 
  2742   000FCB                     T3GATE          equ	4043	;# 
  2743   000FCB                     TMR3GATE        equ	4043	;# 
  2744   000FCC                     T3CLK           equ	4044	;# 
  2745   000FCC                     TMR3CLK         equ	4044	;# 
  2746   000FCD                     TMR1            equ	4045	;# 
  2747   000FCD                     TMR1L           equ	4045	;# 
  2748   000FCE                     TMR1H           equ	4046	;# 
  2749   000FCF                     T1CON           equ	4047	;# 
  2750   000FD0                     T1GCON          equ	4048	;# 
  2751   000FD0                     PR1             equ	4048	;# 
  2752   000FD1                     T1GATE          equ	4049	;# 
  2753   000FD1                     TMR1GATE        equ	4049	;# 
  2754   000FD2                     T1CLK           equ	4050	;# 
  2755   000FD2                     TMR1CLK         equ	4050	;# 
  2756   000FD3                     TMR0L           equ	4051	;# 
  2757   000FD3                     TMR0            equ	4051	;# 
  2758   000FD4                     TMR0H           equ	4052	;# 
  2759   000FD4                     PR0             equ	4052	;# 
  2760   000FD5                     T0CON0          equ	4053	;# 
  2761   000FD6                     T0CON1          equ	4054	;# 
  2762   000FD7                     PCON0           equ	4055	;# 
  2763   000FD8                     STATUS          equ	4056	;# 
  2764   000FD9                     FSR2            equ	4057	;# 
  2765   000FD9                     FSR2L           equ	4057	;# 
  2766   000FDA                     FSR2H           equ	4058	;# 
  2767   000FDB                     PLUSW2          equ	4059	;# 
  2768   000FDC                     PREINC2         equ	4060	;# 
  2769   000FDD                     POSTDEC2        equ	4061	;# 
  2770   000FDE                     POSTINC2        equ	4062	;# 
  2771   000FDF                     INDF2           equ	4063	;# 
  2772   000FE0                     BSR             equ	4064	;# 
  2773   000FE1                     FSR1            equ	4065	;# 
  2774   000FE1                     FSR1L           equ	4065	;# 
  2775   000FE2                     FSR1H           equ	4066	;# 
  2776   000FE3                     PLUSW1          equ	4067	;# 
  2777   000FE4                     PREINC1         equ	4068	;# 
  2778   000FE5                     POSTDEC1        equ	4069	;# 
  2779   000FE6                     POSTINC1        equ	4070	;# 
  2780   000FE7                     INDF1           equ	4071	;# 
  2781   000FE8                     WREG            equ	4072	;# 
  2782   000FE9                     FSR0            equ	4073	;# 
  2783   000FE9                     FSR0L           equ	4073	;# 
  2784   000FEA                     FSR0H           equ	4074	;# 
  2785   000FEB                     PLUSW0          equ	4075	;# 
  2786   000FEC                     PREINC0         equ	4076	;# 
  2787   000FED                     POSTDEC0        equ	4077	;# 
  2788   000FEE                     POSTINC0        equ	4078	;# 
  2789   000FEF                     INDF0           equ	4079	;# 
  2790   000FF2                     INTCON          equ	4082	;# 
  2791   000FF3                     PROD            equ	4083	;# 
  2792   000FF3                     PRODL           equ	4083	;# 
  2793   000FF4                     PRODH           equ	4084	;# 
  2794   000FF5                     TABLAT          equ	4085	;# 
  2795   000FF6                     TBLPTR          equ	4086	;# 
  2796   000FF6                     TBLPTRL         equ	4086	;# 
  2797   000FF7                     TBLPTRH         equ	4087	;# 
  2798   000FF8                     TBLPTRU         equ	4088	;# 
  2799   000FF9                     PCLAT           equ	4089	;# 
  2800   000FF9                     PC              equ	4089	;# 
  2801   000FF9                     PCL             equ	4089	;# 
  2802   000FFA                     PCLATH          equ	4090	;# 
  2803   000FFB                     PCLATU          equ	4091	;# 
  2804   000FFC                     STKPTR          equ	4092	;# 
  2805   000FFD                     TOS             equ	4093	;# 
  2806   000FFD                     TOSL            equ	4093	;# 
  2807   000FFE                     TOSH            equ	4094	;# 
  2808   000FFF                     TOSU            equ	4095	;# 
  2809   000E8D                     RX2PPS          equ	3725	;# 
  2810   000E8E                     CK2PPS          equ	3726	;# 
  2811   000E8E                     TX2PPS          equ	3726	;# 
  2812   000E8F                     SSP2CLKPPS      equ	3727	;# 
  2813   000E90                     SSP2DATPPS      equ	3728	;# 
  2814   000E91                     SSP2SSPPS       equ	3729	;# 
  2815   000E92                     SSP2BUF         equ	3730	;# 
  2816   000E93                     SSP2ADD         equ	3731	;# 
  2817   000E94                     SSP2MSK         equ	3732	;# 
  2818   000E95                     SSP2STAT        equ	3733	;# 
  2819   000E96                     SSP2CON1        equ	3734	;# 
  2820   000E97                     SSP2CON2        equ	3735	;# 
  2821   000E98                     SSP2CON3        equ	3736	;# 
  2822   000E99                     RC2REG          equ	3737	;# 
  2823   000E99                     RCREG2          equ	3737	;# 
  2824   000E9A                     TX2REG          equ	3738	;# 
  2825   000E9A                     TXREG2          equ	3738	;# 
  2826   000E9B                     SP2BRG          equ	3739	;# 
  2827   000E9B                     SP2BRGL         equ	3739	;# 
  2828   000E9B                     SPBRG2          equ	3739	;# 
  2829   000E9C                     SP2BRGH         equ	3740	;# 
  2830   000E9C                     SPBRGH2         equ	3740	;# 
  2831   000E9D                     RC2STA          equ	3741	;# 
  2832   000E9D                     RCSTA2          equ	3741	;# 
  2833   000E9E                     TX2STA          equ	3742	;# 
  2834   000E9E                     TXSTA2          equ	3742	;# 
  2835   000E9F                     BAUD2CON        equ	3743	;# 
  2836   000E9F                     BAUDCON2        equ	3743	;# 
  2837   000E9F                     BAUDCTL2        equ	3743	;# 
  2838   000EA0                     PPSLOCK         equ	3744	;# 
  2839   000EA1                     INT0PPS         equ	3745	;# 
  2840   000EA2                     INT1PPS         equ	3746	;# 
  2841   000EA3                     INT2PPS         equ	3747	;# 
  2842   000EA4                     T0CKIPPS        equ	3748	;# 
  2843   000EA5                     T1CKIPPS        equ	3749	;# 
  2844   000EA6                     T1GPPS          equ	3750	;# 
  2845   000EA7                     T3CKIPPS        equ	3751	;# 
  2846   000EA8                     T3GPPS          equ	3752	;# 
  2847   000EA9                     T5CKIPPS        equ	3753	;# 
  2848   000EAA                     T5GPPS          equ	3754	;# 
  2849   000EAB                     T2INPPS         equ	3755	;# 
  2850   000EAC                     T4INPPS         equ	3756	;# 
  2851   000EAD                     T6INPPS         equ	3757	;# 
  2852   000EAE                     ADACTPPS        equ	3758	;# 
  2853   000EAF                     CCP1PPS         equ	3759	;# 
  2854   000EB0                     CCP2PPS         equ	3760	;# 
  2855   000EB1                     CWG1PPS         equ	3761	;# 
  2856   000EB1                     CWGINPPS        equ	3761	;# 
  2857   000EB2                     MDCARLPPS       equ	3762	;# 
  2858   000EB3                     MDCARHPPS       equ	3763	;# 
  2859   000EB4                     MDSRCPPS        equ	3764	;# 
  2860   000EB5                     RX1PPS          equ	3765	;# 
  2861   000EB5                     RXPPS           equ	3765	;# 
  2862   000EB6                     CK1PPS          equ	3766	;# 
  2863   000EB6                     TX1PPS          equ	3766	;# 
  2864   000EB6                     CKPPS           equ	3766	;# 
  2865   000EB6                     TXPPS           equ	3766	;# 
  2866   000EB7                     SSP1CLKPPS      equ	3767	;# 
  2867   000EB7                     SSPCLKPPS       equ	3767	;# 
  2868   000EB8                     SSP1DATPPS      equ	3768	;# 
  2869   000EB8                     SSPDATPPS       equ	3768	;# 
  2870   000EB9                     SSP1SSPPS       equ	3769	;# 
  2871   000EB9                     SSPSSPPS        equ	3769	;# 
  2872   000EBA                     IPR0            equ	3770	;# 
  2873   000EBB                     IPR1            equ	3771	;# 
  2874   000EBC                     IPR2            equ	3772	;# 
  2875   000EBD                     IPR3            equ	3773	;# 
  2876   000EBE                     IPR4            equ	3774	;# 
  2877   000EBF                     IPR5            equ	3775	;# 
  2878   000EC0                     IPR6            equ	3776	;# 
  2879   000EC1                     IPR7            equ	3777	;# 
  2880   000EC2                     PIE0            equ	3778	;# 
  2881   000EC3                     PIE1            equ	3779	;# 
  2882   000EC4                     PIE2            equ	3780	;# 
  2883   000EC5                     PIE3            equ	3781	;# 
  2884   000EC6                     PIE4            equ	3782	;# 
  2885   000EC7                     PIE5            equ	3783	;# 
  2886   000EC8                     PIE6            equ	3784	;# 
  2887   000EC9                     PIE7            equ	3785	;# 
  2888   000ECA                     PIR0            equ	3786	;# 
  2889   000ECB                     PIR1            equ	3787	;# 
  2890   000ECC                     PIR2            equ	3788	;# 
  2891   000ECD                     PIR3            equ	3789	;# 
  2892   000ECE                     PIR4            equ	3790	;# 
  2893   000ECF                     PIR5            equ	3791	;# 
  2894   000ED0                     PIR6            equ	3792	;# 
  2895   000ED1                     PIR7            equ	3793	;# 
  2896   000ED2                     WDTCON0         equ	3794	;# 
  2897   000ED3                     WDTCON1         equ	3795	;# 
  2898   000ED4                     WDTPSL          equ	3796	;# 
  2899   000ED5                     WDTPSH          equ	3797	;# 
  2900   000ED6                     WDTTMR          equ	3798	;# 
  2901   000ED7                     CPUDOZE         equ	3799	;# 
  2902   000ED8                     OSCCON1         equ	3800	;# 
  2903   000ED9                     OSCCON2         equ	3801	;# 
  2904   000EDA                     OSCCON3         equ	3802	;# 
  2905   000EDB                     OSCSTAT         equ	3803	;# 
  2906   000EDB                     OSCSTAT1        equ	3803	;# 
  2907   000EDC                     OSCEN           equ	3804	;# 
  2908   000EDD                     OSCTUNE         equ	3805	;# 
  2909   000EDE                     OSCFRQ          equ	3806	;# 
  2910   000EE0                     BORCON          equ	3808	;# 
  2911   000EE1                     PMD0            equ	3809	;# 
  2912   000EE2                     PMD1            equ	3810	;# 
  2913   000EE3                     PMD2            equ	3811	;# 
  2914   000EE4                     PMD3            equ	3812	;# 
  2915   000EE5                     PMD4            equ	3813	;# 
  2916   000EE6                     PMD5            equ	3814	;# 
  2917   000EE7                     RA0PPS          equ	3815	;# 
  2918   000EE8                     RA1PPS          equ	3816	;# 
  2919   000EE9                     RA2PPS          equ	3817	;# 
  2920   000EEA                     RA3PPS          equ	3818	;# 
  2921   000EEB                     RA4PPS          equ	3819	;# 
  2922   000EEC                     RA5PPS          equ	3820	;# 
  2923   000EED                     RA6PPS          equ	3821	;# 
  2924   000EEE                     RA7PPS          equ	3822	;# 
  2925   000EEF                     RB0PPS          equ	3823	;# 
  2926   000EF0                     RB1PPS          equ	3824	;# 
  2927   000EF1                     RB2PPS          equ	3825	;# 
  2928   000EF2                     RB3PPS          equ	3826	;# 
  2929   000EF3                     RB4PPS          equ	3827	;# 
  2930   000EF4                     RB5PPS          equ	3828	;# 
  2931   000EF5                     RB6PPS          equ	3829	;# 
  2932   000EF6                     RB7PPS          equ	3830	;# 
  2933   000EF7                     RC0PPS          equ	3831	;# 
  2934   000EF8                     RC1PPS          equ	3832	;# 
  2935   000EF9                     RC2PPS          equ	3833	;# 
  2936   000EFA                     RC3PPS          equ	3834	;# 
  2937   000EFB                     RC4PPS          equ	3835	;# 
  2938   000EFC                     RC5PPS          equ	3836	;# 
  2939   000EFD                     RC6PPS          equ	3837	;# 
  2940   000EFE                     RC7PPS          equ	3838	;# 
  2941   000F0A                     IOCAF           equ	3850	;# 
  2942   000F0B                     IOCAN           equ	3851	;# 
  2943   000F0C                     IOCAP           equ	3852	;# 
  2944   000F0D                     INLVLA          equ	3853	;# 
  2945   000F0E                     SLRCONA         equ	3854	;# 
  2946   000F0F                     ODCONA          equ	3855	;# 
  2947   000F10                     WPUA            equ	3856	;# 
  2948   000F11                     ANSELA          equ	3857	;# 
  2949   000F12                     IOCBF           equ	3858	;# 
  2950   000F13                     IOCBN           equ	3859	;# 
  2951   000F14                     IOCBP           equ	3860	;# 
  2952   000F15                     INLVLB          equ	3861	;# 
  2953   000F16                     SLRCONB         equ	3862	;# 
  2954   000F17                     ODCONB          equ	3863	;# 
  2955   000F18                     WPUB            equ	3864	;# 
  2956   000F19                     ANSELB          equ	3865	;# 
  2957   000F1A                     IOCCF           equ	3866	;# 
  2958   000F1B                     IOCCN           equ	3867	;# 
  2959   000F1C                     IOCCP           equ	3868	;# 
  2960   000F1D                     INLVLC          equ	3869	;# 
  2961   000F1E                     SLRCONC         equ	3870	;# 
  2962   000F1F                     ODCONC          equ	3871	;# 
  2963   000F20                     WPUC            equ	3872	;# 
  2964   000F21                     ANSELC          equ	3873	;# 
  2965   000F27                     IOCEF           equ	3879	;# 
  2966   000F28                     IOCEN           equ	3880	;# 
  2967   000F29                     IOCEP           equ	3881	;# 
  2968   000F2A                     INLVLE          equ	3882	;# 
  2969   000F2D                     WPUE            equ	3885	;# 
  2970   000F2F                     HLVDCON0        equ	3887	;# 
  2971   000F30                     HLVDCON1        equ	3888	;# 
  2972   000F31                     FVRCON          equ	3889	;# 
  2973   000F32                     ZCDCON          equ	3890	;# 
  2974   000F33                     DAC1CON0        equ	3891	;# 
  2975   000F34                     DAC1CON1        equ	3892	;# 
  2976   000F35                     CM2CON0         equ	3893	;# 
  2977   000F36                     CM2CON1         equ	3894	;# 
  2978   000F37                     CM2NCH          equ	3895	;# 
  2979   000F38                     CM2PCH          equ	3896	;# 
  2980   000F39                     CM1CON0         equ	3897	;# 
  2981   000F3A                     CM1CON1         equ	3898	;# 
  2982   000F3B                     CM1NCH          equ	3899	;# 
  2983   000F3C                     CM1PCH          equ	3900	;# 
  2984   000F3D                     CMOUT           equ	3901	;# 
  2985   000F3E                     CLKRCON         equ	3902	;# 
  2986   000F3F                     CLKRCLK         equ	3903	;# 
  2987   000F40                     CWG1CLK         equ	3904	;# 
  2988   000F40                     CWG1CLKCON      equ	3904	;# 
  2989   000F41                     CWG1ISM         equ	3905	;# 
  2990   000F42                     CWG1DBR         equ	3906	;# 
  2991   000F43                     CWG1DBF         equ	3907	;# 
  2992   000F44                     CWG1CON0        equ	3908	;# 
  2993   000F45                     CWG1CON1        equ	3909	;# 
  2994   000F46                     CWG1AS0         equ	3910	;# 
  2995   000F47                     CWG1AS1         equ	3911	;# 
  2996   000F48                     CWG1STR         equ	3912	;# 
  2997   000F49                     SCANLADR        equ	3913	;# 
  2998   000F49                     SCANLADRL       equ	3913	;# 
  2999   000F4A                     SCANLADRH       equ	3914	;# 
  3000   000F4B                     SCANLADRU       equ	3915	;# 
  3001   000F4C                     SCANHADR        equ	3916	;# 
  3002   000F4C                     SCANHADRL       equ	3916	;# 
  3003   000F4D                     SCANHADRH       equ	3917	;# 
  3004   000F4E                     SCANHADRU       equ	3918	;# 
  3005   000F4F                     SCANCON0        equ	3919	;# 
  3006   000F50                     SCANTRIG        equ	3920	;# 
  3007   000F51                     MDCON0          equ	3921	;# 
  3008   000F52                     MDCON1          equ	3922	;# 
  3009   000F53                     MDSRC           equ	3923	;# 
  3010   000F54                     MDCARL          equ	3924	;# 
  3011   000F55                     MDCARH          equ	3925	;# 
  3012   000F56                     ADACT           equ	3926	;# 
  3013   000F57                     ADCLK           equ	3927	;# 
  3014   000F58                     ADREF           equ	3928	;# 
  3015   000F59                     ADCON1          equ	3929	;# 
  3016   000F5A                     ADCON2          equ	3930	;# 
  3017   000F5B                     ADCON3          equ	3931	;# 
  3018   000F5C                     ADACQ           equ	3932	;# 
  3019   000F5D                     ADCAP           equ	3933	;# 
  3020   000F5E                     ADPRE           equ	3934	;# 
  3021   000F5F                     ADPCH           equ	3935	;# 
  3022   000F60                     ADCON0          equ	3936	;# 
  3023   000F61                     ADPREV          equ	3937	;# 
  3024   000F61                     ADPREVL         equ	3937	;# 
  3025   000F62                     ADPREVH         equ	3938	;# 
  3026   000F63                     ADRES           equ	3939	;# 
  3027   000F63                     ADRESL          equ	3939	;# 
  3028   000F64                     ADRESH          equ	3940	;# 
  3029   000F65                     ADSTAT          equ	3941	;# 
  3030   000F66                     ADRPT           equ	3942	;# 
  3031   000F67                     ADCNT           equ	3943	;# 
  3032   000F68                     ADSTPT          equ	3944	;# 
  3033   000F68                     ADSTPTL         equ	3944	;# 
  3034   000F69                     ADSTPTH         equ	3945	;# 
  3035   000F6A                     ADLTH           equ	3946	;# 
  3036   000F6A                     ADLTHL          equ	3946	;# 
  3037   000F6B                     ADLTHH          equ	3947	;# 
  3038   000F6C                     ADUTH           equ	3948	;# 
  3039   000F6C                     ADUTHL          equ	3948	;# 
  3040   000F6D                     ADUTHH          equ	3949	;# 
  3041   000F6E                     ADERR           equ	3950	;# 
  3042   000F6E                     ADERRL          equ	3950	;# 
  3043   000F6F                     ADERRH          equ	3951	;# 
  3044   000F70                     ADACC           equ	3952	;# 
  3045   000F70                     ADACCL          equ	3952	;# 
  3046   000F71                     ADACCH          equ	3953	;# 
  3047   000F72                     ADFLTR          equ	3954	;# 
  3048   000F72                     ADFLTRL         equ	3954	;# 
  3049   000F73                     ADFLTRH         equ	3955	;# 
  3050   000F74                     CRCDATA         equ	3956	;# 
  3051   000F74                     CRCDATL         equ	3956	;# 
  3052   000F75                     CRCDATH         equ	3957	;# 
  3053   000F76                     CRCACC          equ	3958	;# 
  3054   000F76                     CRCACCL         equ	3958	;# 
  3055   000F77                     CRCACCH         equ	3959	;# 
  3056   000F78                     CRCSHFT         equ	3960	;# 
  3057   000F78                     CRCSHIFTL       equ	3960	;# 
  3058   000F79                     CRCSHIFTH       equ	3961	;# 
  3059   000F7A                     CRCXOR          equ	3962	;# 
  3060   000F7A                     CRCXORL         equ	3962	;# 
  3061   000F7B                     CRCXORH         equ	3963	;# 
  3062   000F7C                     CRCCON0         equ	3964	;# 
  3063   000F7D                     CRCCON1         equ	3965	;# 
  3064   000F7E                     NVMADR          equ	3966	;# 
  3065   000F7E                     NVMADRL         equ	3966	;# 
  3066   000F7F                     NVMADRH         equ	3967	;# 
  3067   000F80                     NVMDAT          equ	3968	;# 
  3068   000F81                     NVMCON1         equ	3969	;# 
  3069   000F82                     NVMCON2         equ	3970	;# 
  3070   000F83                     LATA            equ	3971	;# 
  3071   000F84                     LATB            equ	3972	;# 
  3072   000F85                     LATC            equ	3973	;# 
  3073   000F88                     TRISA           equ	3976	;# 
  3074   000F88                     DDRA            equ	3976	;# 
  3075   000F89                     TRISB           equ	3977	;# 
  3076   000F89                     DDRB            equ	3977	;# 
  3077   000F8A                     TRISC           equ	3978	;# 
  3078   000F8A                     DDRC            equ	3978	;# 
  3079   000F8D                     PORTA           equ	3981	;# 
  3080   000F8E                     PORTB           equ	3982	;# 
  3081   000F8F                     PORTC           equ	3983	;# 
  3082   000F91                     PORTE           equ	3985	;# 
  3083   000F92                     SSP1BUF         equ	3986	;# 
  3084   000F93                     SSP1ADD         equ	3987	;# 
  3085   000F94                     SSP1MSK         equ	3988	;# 
  3086   000F95                     SSP1STAT        equ	3989	;# 
  3087   000F96                     SSP1CON1        equ	3990	;# 
  3088   000F97                     SSP1CON2        equ	3991	;# 
  3089   000F98                     SSP1CON3        equ	3992	;# 
  3090   000F99                     RC1REG          equ	3993	;# 
  3091   000F99                     RCREG           equ	3993	;# 
  3092   000F99                     RCREG1          equ	3993	;# 
  3093   000F9A                     TX1REG          equ	3994	;# 
  3094   000F9A                     TXREG1          equ	3994	;# 
  3095   000F9A                     TXREG           equ	3994	;# 
  3096   000F9B                     SP1BRG          equ	3995	;# 
  3097   000F9B                     SP1BRGL         equ	3995	;# 
  3098   000F9B                     SPBRG           equ	3995	;# 
  3099   000F9B                     SPBRG1          equ	3995	;# 
  3100   000F9B                     SPBRGL          equ	3995	;# 
  3101   000F9C                     SP1BRGH         equ	3996	;# 
  3102   000F9C                     SPBRGH          equ	3996	;# 
  3103   000F9C                     SPBRGH1         equ	3996	;# 
  3104   000F9D                     RC1STA          equ	3997	;# 
  3105   000F9D                     RCSTA1          equ	3997	;# 
  3106   000F9D                     RCSTA           equ	3997	;# 
  3107   000F9E                     TX1STA          equ	3998	;# 
  3108   000F9E                     TXSTA1          equ	3998	;# 
  3109   000F9E                     TXSTA           equ	3998	;# 
  3110   000F9F                     BAUD1CON        equ	3999	;# 
  3111   000F9F                     BAUDCON1        equ	3999	;# 
  3112   000F9F                     BAUDCTL1        equ	3999	;# 
  3113   000F9F                     BAUDCON         equ	3999	;# 
  3114   000F9F                     BAUDCTL         equ	3999	;# 
  3115   000FA0                     PWM4DC          equ	4000	;# 
  3116   000FA0                     PWM4DCL         equ	4000	;# 
  3117   000FA1                     PWM4DCH         equ	4001	;# 
  3118   000FA2                     PWM4CON         equ	4002	;# 
  3119   000FA3                     PWM3DC          equ	4003	;# 
  3120   000FA3                     PWM3DCL         equ	4003	;# 
  3121   000FA4                     PWM3DCH         equ	4004	;# 
  3122   000FA5                     PWM3CON         equ	4005	;# 
  3123   000FA6                     CCPR2           equ	4006	;# 
  3124   000FA6                     CCPR2L          equ	4006	;# 
  3125   000FA7                     CCPR2H          equ	4007	;# 
  3126   000FA8                     CCP2CON         equ	4008	;# 
  3127   000FA9                     CCP2CAP         equ	4009	;# 
  3128   000FAA                     CCPR1           equ	4010	;# 
  3129   000FAA                     CCPR1L          equ	4010	;# 
  3130   000FAB                     CCPR1H          equ	4011	;# 
  3131   000FAC                     CCP1CON         equ	4012	;# 
  3132   000FAD                     CCP1CAP         equ	4013	;# 
  3133   000FAE                     CCPTMRS         equ	4014	;# 
  3134   000FAF                     T6TMR           equ	4015	;# 
  3135   000FAF                     TMR6            equ	4015	;# 
  3136   000FB0                     T6PR            equ	4016	;# 
  3137   000FB0                     PR6             equ	4016	;# 
  3138   000FB1                     T6CON           equ	4017	;# 
  3139   000FB2                     T6HLT           equ	4018	;# 
  3140   000FB3                     T6CLKCON        equ	4019	;# 
  3141   000FB3                     T6CLK           equ	4019	;# 
  3142   000FB4                     T6RST           equ	4020	;# 
  3143   000FB5                     T4TMR           equ	4021	;# 
  3144   000FB5                     TMR4            equ	4021	;# 
  3145   000FB6                     T4PR            equ	4022	;# 
  3146   000FB6                     PR4             equ	4022	;# 
  3147   000FB7                     T4CON           equ	4023	;# 
  3148   000FB8                     T4HLT           equ	4024	;# 
  3149   000FB9                     T4CLKCON        equ	4025	;# 
  3150   000FB9                     T4CLK           equ	4025	;# 
  3151   000FBA                     T4RST           equ	4026	;# 
  3152   000FBB                     T2TMR           equ	4027	;# 
  3153   000FBB                     TMR2            equ	4027	;# 
  3154   000FBC                     T2PR            equ	4028	;# 
  3155   000FBC                     PR2             equ	4028	;# 
  3156   000FBD                     T2CON           equ	4029	;# 
  3157   000FBE                     T2HLT           equ	4030	;# 
  3158   000FBF                     T2CLKCON        equ	4031	;# 
  3159   000FBF                     T2CLK           equ	4031	;# 
  3160   000FC0                     T2RST           equ	4032	;# 
  3161   000FC1                     TMR5            equ	4033	;# 
  3162   000FC1                     TMR5L           equ	4033	;# 
  3163   000FC2                     TMR5H           equ	4034	;# 
  3164   000FC3                     T5CON           equ	4035	;# 
  3165   000FC4                     T5GCON          equ	4036	;# 
  3166   000FC4                     PR5             equ	4036	;# 
  3167   000FC5                     T5GATE          equ	4037	;# 
  3168   000FC5                     TMR5GATE        equ	4037	;# 
  3169   000FC6                     T5CLK           equ	4038	;# 
  3170   000FC6                     TMR5CLK         equ	4038	;# 
  3171   000FC7                     TMR3            equ	4039	;# 
  3172   000FC7                     TMR3L           equ	4039	;# 
  3173   000FC8                     TMR3H           equ	4040	;# 
  3174   000FC9                     T3CON           equ	4041	;# 
  3175   000FCA                     T3GCON          equ	4042	;# 
  3176   000FCA                     PR3             equ	4042	;# 
  3177   000FCB                     T3GATE          equ	4043	;# 
  3178   000FCB                     TMR3GATE        equ	4043	;# 
  3179   000FCC                     T3CLK           equ	4044	;# 
  3180   000FCC                     TMR3CLK         equ	4044	;# 
  3181   000FCD                     TMR1            equ	4045	;# 
  3182   000FCD                     TMR1L           equ	4045	;# 
  3183   000FCE                     TMR1H           equ	4046	;# 
  3184   000FCF                     T1CON           equ	4047	;# 
  3185   000FD0                     T1GCON          equ	4048	;# 
  3186   000FD0                     PR1             equ	4048	;# 
  3187   000FD1                     T1GATE          equ	4049	;# 
  3188   000FD1                     TMR1GATE        equ	4049	;# 
  3189   000FD2                     T1CLK           equ	4050	;# 
  3190   000FD2                     TMR1CLK         equ	4050	;# 
  3191   000FD3                     TMR0L           equ	4051	;# 
  3192   000FD3                     TMR0            equ	4051	;# 
  3193   000FD4                     TMR0H           equ	4052	;# 
  3194   000FD4                     PR0             equ	4052	;# 
  3195   000FD5                     T0CON0          equ	4053	;# 
  3196   000FD6                     T0CON1          equ	4054	;# 
  3197   000FD7                     PCON0           equ	4055	;# 
  3198   000FD8                     STATUS          equ	4056	;# 
  3199   000FD9                     FSR2            equ	4057	;# 
  3200   000FD9                     FSR2L           equ	4057	;# 
  3201   000FDA                     FSR2H           equ	4058	;# 
  3202   000FDB                     PLUSW2          equ	4059	;# 
  3203   000FDC                     PREINC2         equ	4060	;# 
  3204   000FDD                     POSTDEC2        equ	4061	;# 
  3205   000FDE                     POSTINC2        equ	4062	;# 
  3206   000FDF                     INDF2           equ	4063	;# 
  3207   000FE0                     BSR             equ	4064	;# 
  3208   000FE1                     FSR1            equ	4065	;# 
  3209   000FE1                     FSR1L           equ	4065	;# 
  3210   000FE2                     FSR1H           equ	4066	;# 
  3211   000FE3                     PLUSW1          equ	4067	;# 
  3212   000FE4                     PREINC1         equ	4068	;# 
  3213   000FE5                     POSTDEC1        equ	4069	;# 
  3214   000FE6                     POSTINC1        equ	4070	;# 
  3215   000FE7                     INDF1           equ	4071	;# 
  3216   000FE8                     WREG            equ	4072	;# 
  3217   000FE9                     FSR0            equ	4073	;# 
  3218   000FE9                     FSR0L           equ	4073	;# 
  3219   000FEA                     FSR0H           equ	4074	;# 
  3220   000FEB                     PLUSW0          equ	4075	;# 
  3221   000FEC                     PREINC0         equ	4076	;# 
  3222   000FED                     POSTDEC0        equ	4077	;# 
  3223   000FEE                     POSTINC0        equ	4078	;# 
  3224   000FEF                     INDF0           equ	4079	;# 
  3225   000FF2                     INTCON          equ	4082	;# 
  3226   000FF3                     PROD            equ	4083	;# 
  3227   000FF3                     PRODL           equ	4083	;# 
  3228   000FF4                     PRODH           equ	4084	;# 
  3229   000FF5                     TABLAT          equ	4085	;# 
  3230   000FF6                     TBLPTR          equ	4086	;# 
  3231   000FF6                     TBLPTRL         equ	4086	;# 
  3232   000FF7                     TBLPTRH         equ	4087	;# 
  3233   000FF8                     TBLPTRU         equ	4088	;# 
  3234   000FF9                     PCLAT           equ	4089	;# 
  3235   000FF9                     PC              equ	4089	;# 
  3236   000FF9                     PCL             equ	4089	;# 
  3237   000FFA                     PCLATH          equ	4090	;# 
  3238   000FFB                     PCLATU          equ	4091	;# 
  3239   000FFC                     STKPTR          equ	4092	;# 
  3240   000FFD                     TOS             equ	4093	;# 
  3241   000FFD                     TOSL            equ	4093	;# 
  3242   000FFE                     TOSH            equ	4094	;# 
  3243   000FFF                     TOSU            equ	4095	;# 
  3244   000E8D                     RX2PPS          equ	3725	;# 
  3245   000E8E                     CK2PPS          equ	3726	;# 
  3246   000E8E                     TX2PPS          equ	3726	;# 
  3247   000E8F                     SSP2CLKPPS      equ	3727	;# 
  3248   000E90                     SSP2DATPPS      equ	3728	;# 
  3249   000E91                     SSP2SSPPS       equ	3729	;# 
  3250   000E92                     SSP2BUF         equ	3730	;# 
  3251   000E93                     SSP2ADD         equ	3731	;# 
  3252   000E94                     SSP2MSK         equ	3732	;# 
  3253   000E95                     SSP2STAT        equ	3733	;# 
  3254   000E96                     SSP2CON1        equ	3734	;# 
  3255   000E97                     SSP2CON2        equ	3735	;# 
  3256   000E98                     SSP2CON3        equ	3736	;# 
  3257   000E99                     RC2REG          equ	3737	;# 
  3258   000E99                     RCREG2          equ	3737	;# 
  3259   000E9A                     TX2REG          equ	3738	;# 
  3260   000E9A                     TXREG2          equ	3738	;# 
  3261   000E9B                     SP2BRG          equ	3739	;# 
  3262   000E9B                     SP2BRGL         equ	3739	;# 
  3263   000E9B                     SPBRG2          equ	3739	;# 
  3264   000E9C                     SP2BRGH         equ	3740	;# 
  3265   000E9C                     SPBRGH2         equ	3740	;# 
  3266   000E9D                     RC2STA          equ	3741	;# 
  3267   000E9D                     RCSTA2          equ	3741	;# 
  3268   000E9E                     TX2STA          equ	3742	;# 
  3269   000E9E                     TXSTA2          equ	3742	;# 
  3270   000E9F                     BAUD2CON        equ	3743	;# 
  3271   000E9F                     BAUDCON2        equ	3743	;# 
  3272   000E9F                     BAUDCTL2        equ	3743	;# 
  3273   000EA0                     PPSLOCK         equ	3744	;# 
  3274   000EA1                     INT0PPS         equ	3745	;# 
  3275   000EA2                     INT1PPS         equ	3746	;# 
  3276   000EA3                     INT2PPS         equ	3747	;# 
  3277   000EA4                     T0CKIPPS        equ	3748	;# 
  3278   000EA5                     T1CKIPPS        equ	3749	;# 
  3279   000EA6                     T1GPPS          equ	3750	;# 
  3280   000EA7                     T3CKIPPS        equ	3751	;# 
  3281   000EA8                     T3GPPS          equ	3752	;# 
  3282   000EA9                     T5CKIPPS        equ	3753	;# 
  3283   000EAA                     T5GPPS          equ	3754	;# 
  3284   000EAB                     T2INPPS         equ	3755	;# 
  3285   000EAC                     T4INPPS         equ	3756	;# 
  3286   000EAD                     T6INPPS         equ	3757	;# 
  3287   000EAE                     ADACTPPS        equ	3758	;# 
  3288   000EAF                     CCP1PPS         equ	3759	;# 
  3289   000EB0                     CCP2PPS         equ	3760	;# 
  3290   000EB1                     CWG1PPS         equ	3761	;# 
  3291   000EB1                     CWGINPPS        equ	3761	;# 
  3292   000EB2                     MDCARLPPS       equ	3762	;# 
  3293   000EB3                     MDCARHPPS       equ	3763	;# 
  3294   000EB4                     MDSRCPPS        equ	3764	;# 
  3295   000EB5                     RX1PPS          equ	3765	;# 
  3296   000EB5                     RXPPS           equ	3765	;# 
  3297   000EB6                     CK1PPS          equ	3766	;# 
  3298   000EB6                     TX1PPS          equ	3766	;# 
  3299   000EB6                     CKPPS           equ	3766	;# 
  3300   000EB6                     TXPPS           equ	3766	;# 
  3301   000EB7                     SSP1CLKPPS      equ	3767	;# 
  3302   000EB7                     SSPCLKPPS       equ	3767	;# 
  3303   000EB8                     SSP1DATPPS      equ	3768	;# 
  3304   000EB8                     SSPDATPPS       equ	3768	;# 
  3305   000EB9                     SSP1SSPPS       equ	3769	;# 
  3306   000EB9                     SSPSSPPS        equ	3769	;# 
  3307   000EBA                     IPR0            equ	3770	;# 
  3308   000EBB                     IPR1            equ	3771	;# 
  3309   000EBC                     IPR2            equ	3772	;# 
  3310   000EBD                     IPR3            equ	3773	;# 
  3311   000EBE                     IPR4            equ	3774	;# 
  3312   000EBF                     IPR5            equ	3775	;# 
  3313   000EC0                     IPR6            equ	3776	;# 
  3314   000EC1                     IPR7            equ	3777	;# 
  3315   000EC2                     PIE0            equ	3778	;# 
  3316   000EC3                     PIE1            equ	3779	;# 
  3317   000EC4                     PIE2            equ	3780	;# 
  3318   000EC5                     PIE3            equ	3781	;# 
  3319   000EC6                     PIE4            equ	3782	;# 
  3320   000EC7                     PIE5            equ	3783	;# 
  3321   000EC8                     PIE6            equ	3784	;# 
  3322   000EC9                     PIE7            equ	3785	;# 
  3323   000ECA                     PIR0            equ	3786	;# 
  3324   000ECB                     PIR1            equ	3787	;# 
  3325   000ECC                     PIR2            equ	3788	;# 
  3326   000ECD                     PIR3            equ	3789	;# 
  3327   000ECE                     PIR4            equ	3790	;# 
  3328   000ECF                     PIR5            equ	3791	;# 
  3329   000ED0                     PIR6            equ	3792	;# 
  3330   000ED1                     PIR7            equ	3793	;# 
  3331   000ED2                     WDTCON0         equ	3794	;# 
  3332   000ED3                     WDTCON1         equ	3795	;# 
  3333   000ED4                     WDTPSL          equ	3796	;# 
  3334   000ED5                     WDTPSH          equ	3797	;# 
  3335   000ED6                     WDTTMR          equ	3798	;# 
  3336   000ED7                     CPUDOZE         equ	3799	;# 
  3337   000ED8                     OSCCON1         equ	3800	;# 
  3338   000ED9                     OSCCON2         equ	3801	;# 
  3339   000EDA                     OSCCON3         equ	3802	;# 
  3340   000EDB                     OSCSTAT         equ	3803	;# 
  3341   000EDB                     OSCSTAT1        equ	3803	;# 
  3342   000EDC                     OSCEN           equ	3804	;# 
  3343   000EDD                     OSCTUNE         equ	3805	;# 
  3344   000EDE                     OSCFRQ          equ	3806	;# 
  3345   000EE0                     BORCON          equ	3808	;# 
  3346   000EE1                     PMD0            equ	3809	;# 
  3347   000EE2                     PMD1            equ	3810	;# 
  3348   000EE3                     PMD2            equ	3811	;# 
  3349   000EE4                     PMD3            equ	3812	;# 
  3350   000EE5                     PMD4            equ	3813	;# 
  3351   000EE6                     PMD5            equ	3814	;# 
  3352   000EE7                     RA0PPS          equ	3815	;# 
  3353   000EE8                     RA1PPS          equ	3816	;# 
  3354   000EE9                     RA2PPS          equ	3817	;# 
  3355   000EEA                     RA3PPS          equ	3818	;# 
  3356   000EEB                     RA4PPS          equ	3819	;# 
  3357   000EEC                     RA5PPS          equ	3820	;# 
  3358   000EED                     RA6PPS          equ	3821	;# 
  3359   000EEE                     RA7PPS          equ	3822	;# 
  3360   000EEF                     RB0PPS          equ	3823	;# 
  3361   000EF0                     RB1PPS          equ	3824	;# 
  3362   000EF1                     RB2PPS          equ	3825	;# 
  3363   000EF2                     RB3PPS          equ	3826	;# 
  3364   000EF3                     RB4PPS          equ	3827	;# 
  3365   000EF4                     RB5PPS          equ	3828	;# 
  3366   000EF5                     RB6PPS          equ	3829	;# 
  3367   000EF6                     RB7PPS          equ	3830	;# 
  3368   000EF7                     RC0PPS          equ	3831	;# 
  3369   000EF8                     RC1PPS          equ	3832	;# 
  3370   000EF9                     RC2PPS          equ	3833	;# 
  3371   000EFA                     RC3PPS          equ	3834	;# 
  3372   000EFB                     RC4PPS          equ	3835	;# 
  3373   000EFC                     RC5PPS          equ	3836	;# 
  3374   000EFD                     RC6PPS          equ	3837	;# 
  3375   000EFE                     RC7PPS          equ	3838	;# 
  3376   000F0A                     IOCAF           equ	3850	;# 
  3377   000F0B                     IOCAN           equ	3851	;# 
  3378   000F0C                     IOCAP           equ	3852	;# 
  3379   000F0D                     INLVLA          equ	3853	;# 
  3380   000F0E                     SLRCONA         equ	3854	;# 
  3381   000F0F                     ODCONA          equ	3855	;# 
  3382   000F10                     WPUA            equ	3856	;# 
  3383   000F11                     ANSELA          equ	3857	;# 
  3384   000F12                     IOCBF           equ	3858	;# 
  3385   000F13                     IOCBN           equ	3859	;# 
  3386   000F14                     IOCBP           equ	3860	;# 
  3387   000F15                     INLVLB          equ	3861	;# 
  3388   000F16                     SLRCONB         equ	3862	;# 
  3389   000F17                     ODCONB          equ	3863	;# 
  3390   000F18                     WPUB            equ	3864	;# 
  3391   000F19                     ANSELB          equ	3865	;# 
  3392   000F1A                     IOCCF           equ	3866	;# 
  3393   000F1B                     IOCCN           equ	3867	;# 
  3394   000F1C                     IOCCP           equ	3868	;# 
  3395   000F1D                     INLVLC          equ	3869	;# 
  3396   000F1E                     SLRCONC         equ	3870	;# 
  3397   000F1F                     ODCONC          equ	3871	;# 
  3398   000F20                     WPUC            equ	3872	;# 
  3399   000F21                     ANSELC          equ	3873	;# 
  3400   000F27                     IOCEF           equ	3879	;# 
  3401   000F28                     IOCEN           equ	3880	;# 
  3402   000F29                     IOCEP           equ	3881	;# 
  3403   000F2A                     INLVLE          equ	3882	;# 
  3404   000F2D                     WPUE            equ	3885	;# 
  3405   000F2F                     HLVDCON0        equ	3887	;# 
  3406   000F30                     HLVDCON1        equ	3888	;# 
  3407   000F31                     FVRCON          equ	3889	;# 
  3408   000F32                     ZCDCON          equ	3890	;# 
  3409   000F33                     DAC1CON0        equ	3891	;# 
  3410   000F34                     DAC1CON1        equ	3892	;# 
  3411   000F35                     CM2CON0         equ	3893	;# 
  3412   000F36                     CM2CON1         equ	3894	;# 
  3413   000F37                     CM2NCH          equ	3895	;# 
  3414   000F38                     CM2PCH          equ	3896	;# 
  3415   000F39                     CM1CON0         equ	3897	;# 
  3416   000F3A                     CM1CON1         equ	3898	;# 
  3417   000F3B                     CM1NCH          equ	3899	;# 
  3418   000F3C                     CM1PCH          equ	3900	;# 
  3419   000F3D                     CMOUT           equ	3901	;# 
  3420   000F3E                     CLKRCON         equ	3902	;# 
  3421   000F3F                     CLKRCLK         equ	3903	;# 
  3422   000F40                     CWG1CLK         equ	3904	;# 
  3423   000F40                     CWG1CLKCON      equ	3904	;# 
  3424   000F41                     CWG1ISM         equ	3905	;# 
  3425   000F42                     CWG1DBR         equ	3906	;# 
  3426   000F43                     CWG1DBF         equ	3907	;# 
  3427   000F44                     CWG1CON0        equ	3908	;# 
  3428   000F45                     CWG1CON1        equ	3909	;# 
  3429   000F46                     CWG1AS0         equ	3910	;# 
  3430   000F47                     CWG1AS1         equ	3911	;# 
  3431   000F48                     CWG1STR         equ	3912	;# 
  3432   000F49                     SCANLADR        equ	3913	;# 
  3433   000F49                     SCANLADRL       equ	3913	;# 
  3434   000F4A                     SCANLADRH       equ	3914	;# 
  3435   000F4B                     SCANLADRU       equ	3915	;# 
  3436   000F4C                     SCANHADR        equ	3916	;# 
  3437   000F4C                     SCANHADRL       equ	3916	;# 
  3438   000F4D                     SCANHADRH       equ	3917	;# 
  3439   000F4E                     SCANHADRU       equ	3918	;# 
  3440   000F4F                     SCANCON0        equ	3919	;# 
  3441   000F50                     SCANTRIG        equ	3920	;# 
  3442   000F51                     MDCON0          equ	3921	;# 
  3443   000F52                     MDCON1          equ	3922	;# 
  3444   000F53                     MDSRC           equ	3923	;# 
  3445   000F54                     MDCARL          equ	3924	;# 
  3446   000F55                     MDCARH          equ	3925	;# 
  3447   000F56                     ADACT           equ	3926	;# 
  3448   000F57                     ADCLK           equ	3927	;# 
  3449   000F58                     ADREF           equ	3928	;# 
  3450   000F59                     ADCON1          equ	3929	;# 
  3451   000F5A                     ADCON2          equ	3930	;# 
  3452   000F5B                     ADCON3          equ	3931	;# 
  3453   000F5C                     ADACQ           equ	3932	;# 
  3454   000F5D                     ADCAP           equ	3933	;# 
  3455   000F5E                     ADPRE           equ	3934	;# 
  3456   000F5F                     ADPCH           equ	3935	;# 
  3457   000F60                     ADCON0          equ	3936	;# 
  3458   000F61                     ADPREV          equ	3937	;# 
  3459   000F61                     ADPREVL         equ	3937	;# 
  3460   000F62                     ADPREVH         equ	3938	;# 
  3461   000F63                     ADRES           equ	3939	;# 
  3462   000F63                     ADRESL          equ	3939	;# 
  3463   000F64                     ADRESH          equ	3940	;# 
  3464   000F65                     ADSTAT          equ	3941	;# 
  3465   000F66                     ADRPT           equ	3942	;# 
  3466   000F67                     ADCNT           equ	3943	;# 
  3467   000F68                     ADSTPT          equ	3944	;# 
  3468   000F68                     ADSTPTL         equ	3944	;# 
  3469   000F69                     ADSTPTH         equ	3945	;# 
  3470   000F6A                     ADLTH           equ	3946	;# 
  3471   000F6A                     ADLTHL          equ	3946	;# 
  3472   000F6B                     ADLTHH          equ	3947	;# 
  3473   000F6C                     ADUTH           equ	3948	;# 
  3474   000F6C                     ADUTHL          equ	3948	;# 
  3475   000F6D                     ADUTHH          equ	3949	;# 
  3476   000F6E                     ADERR           equ	3950	;# 
  3477   000F6E                     ADERRL          equ	3950	;# 
  3478   000F6F                     ADERRH          equ	3951	;# 
  3479   000F70                     ADACC           equ	3952	;# 
  3480   000F70                     ADACCL          equ	3952	;# 
  3481   000F71                     ADACCH          equ	3953	;# 
  3482   000F72                     ADFLTR          equ	3954	;# 
  3483   000F72                     ADFLTRL         equ	3954	;# 
  3484   000F73                     ADFLTRH         equ	3955	;# 
  3485   000F74                     CRCDATA         equ	3956	;# 
  3486   000F74                     CRCDATL         equ	3956	;# 
  3487   000F75                     CRCDATH         equ	3957	;# 
  3488   000F76                     CRCACC          equ	3958	;# 
  3489   000F76                     CRCACCL         equ	3958	;# 
  3490   000F77                     CRCACCH         equ	3959	;# 
  3491   000F78                     CRCSHFT         equ	3960	;# 
  3492   000F78                     CRCSHIFTL       equ	3960	;# 
  3493   000F79                     CRCSHIFTH       equ	3961	;# 
  3494   000F7A                     CRCXOR          equ	3962	;# 
  3495   000F7A                     CRCXORL         equ	3962	;# 
  3496   000F7B                     CRCXORH         equ	3963	;# 
  3497   000F7C                     CRCCON0         equ	3964	;# 
  3498   000F7D                     CRCCON1         equ	3965	;# 
  3499   000F7E                     NVMADR          equ	3966	;# 
  3500   000F7E                     NVMADRL         equ	3966	;# 
  3501   000F7F                     NVMADRH         equ	3967	;# 
  3502   000F80                     NVMDAT          equ	3968	;# 
  3503   000F81                     NVMCON1         equ	3969	;# 
  3504   000F82                     NVMCON2         equ	3970	;# 
  3505   000F83                     LATA            equ	3971	;# 
  3506   000F84                     LATB            equ	3972	;# 
  3507   000F85                     LATC            equ	3973	;# 
  3508   000F88                     TRISA           equ	3976	;# 
  3509   000F88                     DDRA            equ	3976	;# 
  3510   000F89                     TRISB           equ	3977	;# 
  3511   000F89                     DDRB            equ	3977	;# 
  3512   000F8A                     TRISC           equ	3978	;# 
  3513   000F8A                     DDRC            equ	3978	;# 
  3514   000F8D                     PORTA           equ	3981	;# 
  3515   000F8E                     PORTB           equ	3982	;# 
  3516   000F8F                     PORTC           equ	3983	;# 
  3517   000F91                     PORTE           equ	3985	;# 
  3518   000F92                     SSP1BUF         equ	3986	;# 
  3519   000F93                     SSP1ADD         equ	3987	;# 
  3520   000F94                     SSP1MSK         equ	3988	;# 
  3521   000F95                     SSP1STAT        equ	3989	;# 
  3522   000F96                     SSP1CON1        equ	3990	;# 
  3523   000F97                     SSP1CON2        equ	3991	;# 
  3524   000F98                     SSP1CON3        equ	3992	;# 
  3525   000F99                     RC1REG          equ	3993	;# 
  3526   000F99                     RCREG           equ	3993	;# 
  3527   000F99                     RCREG1          equ	3993	;# 
  3528   000F9A                     TX1REG          equ	3994	;# 
  3529   000F9A                     TXREG1          equ	3994	;# 
  3530   000F9A                     TXREG           equ	3994	;# 
  3531   000F9B                     SP1BRG          equ	3995	;# 
  3532   000F9B                     SP1BRGL         equ	3995	;# 
  3533   000F9B                     SPBRG           equ	3995	;# 
  3534   000F9B                     SPBRG1          equ	3995	;# 
  3535   000F9B                     SPBRGL          equ	3995	;# 
  3536   000F9C                     SP1BRGH         equ	3996	;# 
  3537   000F9C                     SPBRGH          equ	3996	;# 
  3538   000F9C                     SPBRGH1         equ	3996	;# 
  3539   000F9D                     RC1STA          equ	3997	;# 
  3540   000F9D                     RCSTA1          equ	3997	;# 
  3541   000F9D                     RCSTA           equ	3997	;# 
  3542   000F9E                     TX1STA          equ	3998	;# 
  3543   000F9E                     TXSTA1          equ	3998	;# 
  3544   000F9E                     TXSTA           equ	3998	;# 
  3545   000F9F                     BAUD1CON        equ	3999	;# 
  3546   000F9F                     BAUDCON1        equ	3999	;# 
  3547   000F9F                     BAUDCTL1        equ	3999	;# 
  3548   000F9F                     BAUDCON         equ	3999	;# 
  3549   000F9F                     BAUDCTL         equ	3999	;# 
  3550   000FA0                     PWM4DC          equ	4000	;# 
  3551   000FA0                     PWM4DCL         equ	4000	;# 
  3552   000FA1                     PWM4DCH         equ	4001	;# 
  3553   000FA2                     PWM4CON         equ	4002	;# 
  3554   000FA3                     PWM3DC          equ	4003	;# 
  3555   000FA3                     PWM3DCL         equ	4003	;# 
  3556   000FA4                     PWM3DCH         equ	4004	;# 
  3557   000FA5                     PWM3CON         equ	4005	;# 
  3558   000FA6                     CCPR2           equ	4006	;# 
  3559   000FA6                     CCPR2L          equ	4006	;# 
  3560   000FA7                     CCPR2H          equ	4007	;# 
  3561   000FA8                     CCP2CON         equ	4008	;# 
  3562   000FA9                     CCP2CAP         equ	4009	;# 
  3563   000FAA                     CCPR1           equ	4010	;# 
  3564   000FAA                     CCPR1L          equ	4010	;# 
  3565   000FAB                     CCPR1H          equ	4011	;# 
  3566   000FAC                     CCP1CON         equ	4012	;# 
  3567   000FAD                     CCP1CAP         equ	4013	;# 
  3568   000FAE                     CCPTMRS         equ	4014	;# 
  3569   000FAF                     T6TMR           equ	4015	;# 
  3570   000FAF                     TMR6            equ	4015	;# 
  3571   000FB0                     T6PR            equ	4016	;# 
  3572   000FB0                     PR6             equ	4016	;# 
  3573   000FB1                     T6CON           equ	4017	;# 
  3574   000FB2                     T6HLT           equ	4018	;# 
  3575   000FB3                     T6CLKCON        equ	4019	;# 
  3576   000FB3                     T6CLK           equ	4019	;# 
  3577   000FB4                     T6RST           equ	4020	;# 
  3578   000FB5                     T4TMR           equ	4021	;# 
  3579   000FB5                     TMR4            equ	4021	;# 
  3580   000FB6                     T4PR            equ	4022	;# 
  3581   000FB6                     PR4             equ	4022	;# 
  3582   000FB7                     T4CON           equ	4023	;# 
  3583   000FB8                     T4HLT           equ	4024	;# 
  3584   000FB9                     T4CLKCON        equ	4025	;# 
  3585   000FB9                     T4CLK           equ	4025	;# 
  3586   000FBA                     T4RST           equ	4026	;# 
  3587   000FBB                     T2TMR           equ	4027	;# 
  3588   000FBB                     TMR2            equ	4027	;# 
  3589   000FBC                     T2PR            equ	4028	;# 
  3590   000FBC                     PR2             equ	4028	;# 
  3591   000FBD                     T2CON           equ	4029	;# 
  3592   000FBE                     T2HLT           equ	4030	;# 
  3593   000FBF                     T2CLKCON        equ	4031	;# 
  3594   000FBF                     T2CLK           equ	4031	;# 
  3595   000FC0                     T2RST           equ	4032	;# 
  3596   000FC1                     TMR5            equ	4033	;# 
  3597   000FC1                     TMR5L           equ	4033	;# 
  3598   000FC2                     TMR5H           equ	4034	;# 
  3599   000FC3                     T5CON           equ	4035	;# 
  3600   000FC4                     T5GCON          equ	4036	;# 
  3601   000FC4                     PR5             equ	4036	;# 
  3602   000FC5                     T5GATE          equ	4037	;# 
  3603   000FC5                     TMR5GATE        equ	4037	;# 
  3604   000FC6                     T5CLK           equ	4038	;# 
  3605   000FC6                     TMR5CLK         equ	4038	;# 
  3606   000FC7                     TMR3            equ	4039	;# 
  3607   000FC7                     TMR3L           equ	4039	;# 
  3608   000FC8                     TMR3H           equ	4040	;# 
  3609   000FC9                     T3CON           equ	4041	;# 
  3610   000FCA                     T3GCON          equ	4042	;# 
  3611   000FCA                     PR3             equ	4042	;# 
  3612   000FCB                     T3GATE          equ	4043	;# 
  3613   000FCB                     TMR3GATE        equ	4043	;# 
  3614   000FCC                     T3CLK           equ	4044	;# 
  3615   000FCC                     TMR3CLK         equ	4044	;# 
  3616   000FCD                     TMR1            equ	4045	;# 
  3617   000FCD                     TMR1L           equ	4045	;# 
  3618   000FCE                     TMR1H           equ	4046	;# 
  3619   000FCF                     T1CON           equ	4047	;# 
  3620   000FD0                     T1GCON          equ	4048	;# 
  3621   000FD0                     PR1             equ	4048	;# 
  3622   000FD1                     T1GATE          equ	4049	;# 
  3623   000FD1                     TMR1GATE        equ	4049	;# 
  3624   000FD2                     T1CLK           equ	4050	;# 
  3625   000FD2                     TMR1CLK         equ	4050	;# 
  3626   000FD3                     TMR0L           equ	4051	;# 
  3627   000FD3                     TMR0            equ	4051	;# 
  3628   000FD4                     TMR0H           equ	4052	;# 
  3629   000FD4                     PR0             equ	4052	;# 
  3630   000FD5                     T0CON0          equ	4053	;# 
  3631   000FD6                     T0CON1          equ	4054	;# 
  3632   000FD7                     PCON0           equ	4055	;# 
  3633   000FD8                     STATUS          equ	4056	;# 
  3634   000FD9                     FSR2            equ	4057	;# 
  3635   000FD9                     FSR2L           equ	4057	;# 
  3636   000FDA                     FSR2H           equ	4058	;# 
  3637   000FDB                     PLUSW2          equ	4059	;# 
  3638   000FDC                     PREINC2         equ	4060	;# 
  3639   000FDD                     POSTDEC2        equ	4061	;# 
  3640   000FDE                     POSTINC2        equ	4062	;# 
  3641   000FDF                     INDF2           equ	4063	;# 
  3642   000FE0                     BSR             equ	4064	;# 
  3643   000FE1                     FSR1            equ	4065	;# 
  3644   000FE1                     FSR1L           equ	4065	;# 
  3645   000FE2                     FSR1H           equ	4066	;# 
  3646   000FE3                     PLUSW1          equ	4067	;# 
  3647   000FE4                     PREINC1         equ	4068	;# 
  3648   000FE5                     POSTDEC1        equ	4069	;# 
  3649   000FE6                     POSTINC1        equ	4070	;# 
  3650   000FE7                     INDF1           equ	4071	;# 
  3651   000FE8                     WREG            equ	4072	;# 
  3652   000FE9                     FSR0            equ	4073	;# 
  3653   000FE9                     FSR0L           equ	4073	;# 
  3654   000FEA                     FSR0H           equ	4074	;# 
  3655   000FEB                     PLUSW0          equ	4075	;# 
  3656   000FEC                     PREINC0         equ	4076	;# 
  3657   000FED                     POSTDEC0        equ	4077	;# 
  3658   000FEE                     POSTINC0        equ	4078	;# 
  3659   000FEF                     INDF0           equ	4079	;# 
  3660   000FF2                     INTCON          equ	4082	;# 
  3661   000FF3                     PROD            equ	4083	;# 
  3662   000FF3                     PRODL           equ	4083	;# 
  3663   000FF4                     PRODH           equ	4084	;# 
  3664   000FF5                     TABLAT          equ	4085	;# 
  3665   000FF6                     TBLPTR          equ	4086	;# 
  3666   000FF6                     TBLPTRL         equ	4086	;# 
  3667   000FF7                     TBLPTRH         equ	4087	;# 
  3668   000FF8                     TBLPTRU         equ	4088	;# 
  3669   000FF9                     PCLAT           equ	4089	;# 
  3670   000FF9                     PC              equ	4089	;# 
  3671   000FF9                     PCL             equ	4089	;# 
  3672   000FFA                     PCLATH          equ	4090	;# 
  3673   000FFB                     PCLATU          equ	4091	;# 
  3674   000FFC                     STKPTR          equ	4092	;# 
  3675   000FFD                     TOS             equ	4093	;# 
  3676   000FFD                     TOSL            equ	4093	;# 
  3677   000FFE                     TOSH            equ	4094	;# 
  3678   000FFF                     TOSU            equ	4095	;# 
  3679   000E8D                     RX2PPS          equ	3725	;# 
  3680   000E8E                     CK2PPS          equ	3726	;# 
  3681   000E8E                     TX2PPS          equ	3726	;# 
  3682   000E8F                     SSP2CLKPPS      equ	3727	;# 
  3683   000E90                     SSP2DATPPS      equ	3728	;# 
  3684   000E91                     SSP2SSPPS       equ	3729	;# 
  3685   000E92                     SSP2BUF         equ	3730	;# 
  3686   000E93                     SSP2ADD         equ	3731	;# 
  3687   000E94                     SSP2MSK         equ	3732	;# 
  3688   000E95                     SSP2STAT        equ	3733	;# 
  3689   000E96                     SSP2CON1        equ	3734	;# 
  3690   000E97                     SSP2CON2        equ	3735	;# 
  3691   000E98                     SSP2CON3        equ	3736	;# 
  3692   000E99                     RC2REG          equ	3737	;# 
  3693   000E99                     RCREG2          equ	3737	;# 
  3694   000E9A                     TX2REG          equ	3738	;# 
  3695   000E9A                     TXREG2          equ	3738	;# 
  3696   000E9B                     SP2BRG          equ	3739	;# 
  3697   000E9B                     SP2BRGL         equ	3739	;# 
  3698   000E9B                     SPBRG2          equ	3739	;# 
  3699   000E9C                     SP2BRGH         equ	3740	;# 
  3700   000E9C                     SPBRGH2         equ	3740	;# 
  3701   000E9D                     RC2STA          equ	3741	;# 
  3702   000E9D                     RCSTA2          equ	3741	;# 
  3703   000E9E                     TX2STA          equ	3742	;# 
  3704   000E9E                     TXSTA2          equ	3742	;# 
  3705   000E9F                     BAUD2CON        equ	3743	;# 
  3706   000E9F                     BAUDCON2        equ	3743	;# 
  3707   000E9F                     BAUDCTL2        equ	3743	;# 
  3708   000EA0                     PPSLOCK         equ	3744	;# 
  3709   000EA1                     INT0PPS         equ	3745	;# 
  3710   000EA2                     INT1PPS         equ	3746	;# 
  3711   000EA3                     INT2PPS         equ	3747	;# 
  3712   000EA4                     T0CKIPPS        equ	3748	;# 
  3713   000EA5                     T1CKIPPS        equ	3749	;# 
  3714   000EA6                     T1GPPS          equ	3750	;# 
  3715   000EA7                     T3CKIPPS        equ	3751	;# 
  3716   000EA8                     T3GPPS          equ	3752	;# 
  3717   000EA9                     T5CKIPPS        equ	3753	;# 
  3718   000EAA                     T5GPPS          equ	3754	;# 
  3719   000EAB                     T2INPPS         equ	3755	;# 
  3720   000EAC                     T4INPPS         equ	3756	;# 
  3721   000EAD                     T6INPPS         equ	3757	;# 
  3722   000EAE                     ADACTPPS        equ	3758	;# 
  3723   000EAF                     CCP1PPS         equ	3759	;# 
  3724   000EB0                     CCP2PPS         equ	3760	;# 
  3725   000EB1                     CWG1PPS         equ	3761	;# 
  3726   000EB1                     CWGINPPS        equ	3761	;# 
  3727   000EB2                     MDCARLPPS       equ	3762	;# 
  3728   000EB3                     MDCARHPPS       equ	3763	;# 
  3729   000EB4                     MDSRCPPS        equ	3764	;# 
  3730   000EB5                     RX1PPS          equ	3765	;# 
  3731   000EB5                     RXPPS           equ	3765	;# 
  3732   000EB6                     CK1PPS          equ	3766	;# 
  3733   000EB6                     TX1PPS          equ	3766	;# 
  3734   000EB6                     CKPPS           equ	3766	;# 
  3735   000EB6                     TXPPS           equ	3766	;# 
  3736   000EB7                     SSP1CLKPPS      equ	3767	;# 
  3737   000EB7                     SSPCLKPPS       equ	3767	;# 
  3738   000EB8                     SSP1DATPPS      equ	3768	;# 
  3739   000EB8                     SSPDATPPS       equ	3768	;# 
  3740   000EB9                     SSP1SSPPS       equ	3769	;# 
  3741   000EB9                     SSPSSPPS        equ	3769	;# 
  3742   000EBA                     IPR0            equ	3770	;# 
  3743   000EBB                     IPR1            equ	3771	;# 
  3744   000EBC                     IPR2            equ	3772	;# 
  3745   000EBD                     IPR3            equ	3773	;# 
  3746   000EBE                     IPR4            equ	3774	;# 
  3747   000EBF                     IPR5            equ	3775	;# 
  3748   000EC0                     IPR6            equ	3776	;# 
  3749   000EC1                     IPR7            equ	3777	;# 
  3750   000EC2                     PIE0            equ	3778	;# 
  3751   000EC3                     PIE1            equ	3779	;# 
  3752   000EC4                     PIE2            equ	3780	;# 
  3753   000EC5                     PIE3            equ	3781	;# 
  3754   000EC6                     PIE4            equ	3782	;# 
  3755   000EC7                     PIE5            equ	3783	;# 
  3756   000EC8                     PIE6            equ	3784	;# 
  3757   000EC9                     PIE7            equ	3785	;# 
  3758   000ECA                     PIR0            equ	3786	;# 
  3759   000ECB                     PIR1            equ	3787	;# 
  3760   000ECC                     PIR2            equ	3788	;# 
  3761   000ECD                     PIR3            equ	3789	;# 
  3762   000ECE                     PIR4            equ	3790	;# 
  3763   000ECF                     PIR5            equ	3791	;# 
  3764   000ED0                     PIR6            equ	3792	;# 
  3765   000ED1                     PIR7            equ	3793	;# 
  3766   000ED2                     WDTCON0         equ	3794	;# 
  3767   000ED3                     WDTCON1         equ	3795	;# 
  3768   000ED4                     WDTPSL          equ	3796	;# 
  3769   000ED5                     WDTPSH          equ	3797	;# 
  3770   000ED6                     WDTTMR          equ	3798	;# 
  3771   000ED7                     CPUDOZE         equ	3799	;# 
  3772   000ED8                     OSCCON1         equ	3800	;# 
  3773   000ED9                     OSCCON2         equ	3801	;# 
  3774   000EDA                     OSCCON3         equ	3802	;# 
  3775   000EDB                     OSCSTAT         equ	3803	;# 
  3776   000EDB                     OSCSTAT1        equ	3803	;# 
  3777   000EDC                     OSCEN           equ	3804	;# 
  3778   000EDD                     OSCTUNE         equ	3805	;# 
  3779   000EDE                     OSCFRQ          equ	3806	;# 
  3780   000EE0                     BORCON          equ	3808	;# 
  3781   000EE1                     PMD0            equ	3809	;# 
  3782   000EE2                     PMD1            equ	3810	;# 
  3783   000EE3                     PMD2            equ	3811	;# 
  3784   000EE4                     PMD3            equ	3812	;# 
  3785   000EE5                     PMD4            equ	3813	;# 
  3786   000EE6                     PMD5            equ	3814	;# 
  3787   000EE7                     RA0PPS          equ	3815	;# 
  3788   000EE8                     RA1PPS          equ	3816	;# 
  3789   000EE9                     RA2PPS          equ	3817	;# 
  3790   000EEA                     RA3PPS          equ	3818	;# 
  3791   000EEB                     RA4PPS          equ	3819	;# 
  3792   000EEC                     RA5PPS          equ	3820	;# 
  3793   000EED                     RA6PPS          equ	3821	;# 
  3794   000EEE                     RA7PPS          equ	3822	;# 
  3795   000EEF                     RB0PPS          equ	3823	;# 
  3796   000EF0                     RB1PPS          equ	3824	;# 
  3797   000EF1                     RB2PPS          equ	3825	;# 
  3798   000EF2                     RB3PPS          equ	3826	;# 
  3799   000EF3                     RB4PPS          equ	3827	;# 
  3800   000EF4                     RB5PPS          equ	3828	;# 
  3801   000EF5                     RB6PPS          equ	3829	;# 
  3802   000EF6                     RB7PPS          equ	3830	;# 
  3803   000EF7                     RC0PPS          equ	3831	;# 
  3804   000EF8                     RC1PPS          equ	3832	;# 
  3805   000EF9                     RC2PPS          equ	3833	;# 
  3806   000EFA                     RC3PPS          equ	3834	;# 
  3807   000EFB                     RC4PPS          equ	3835	;# 
  3808   000EFC                     RC5PPS          equ	3836	;# 
  3809   000EFD                     RC6PPS          equ	3837	;# 
  3810   000EFE                     RC7PPS          equ	3838	;# 
  3811   000F0A                     IOCAF           equ	3850	;# 
  3812   000F0B                     IOCAN           equ	3851	;# 
  3813   000F0C                     IOCAP           equ	3852	;# 
  3814   000F0D                     INLVLA          equ	3853	;# 
  3815   000F0E                     SLRCONA         equ	3854	;# 
  3816   000F0F                     ODCONA          equ	3855	;# 
  3817   000F10                     WPUA            equ	3856	;# 
  3818   000F11                     ANSELA          equ	3857	;# 
  3819   000F12                     IOCBF           equ	3858	;# 
  3820   000F13                     IOCBN           equ	3859	;# 
  3821   000F14                     IOCBP           equ	3860	;# 
  3822   000F15                     INLVLB          equ	3861	;# 
  3823   000F16                     SLRCONB         equ	3862	;# 
  3824   000F17                     ODCONB          equ	3863	;# 
  3825   000F18                     WPUB            equ	3864	;# 
  3826   000F19                     ANSELB          equ	3865	;# 
  3827   000F1A                     IOCCF           equ	3866	;# 
  3828   000F1B                     IOCCN           equ	3867	;# 
  3829   000F1C                     IOCCP           equ	3868	;# 
  3830   000F1D                     INLVLC          equ	3869	;# 
  3831   000F1E                     SLRCONC         equ	3870	;# 
  3832   000F1F                     ODCONC          equ	3871	;# 
  3833   000F20                     WPUC            equ	3872	;# 
  3834   000F21                     ANSELC          equ	3873	;# 
  3835   000F27                     IOCEF           equ	3879	;# 
  3836   000F28                     IOCEN           equ	3880	;# 
  3837   000F29                     IOCEP           equ	3881	;# 
  3838   000F2A                     INLVLE          equ	3882	;# 
  3839   000F2D                     WPUE            equ	3885	;# 
  3840   000F2F                     HLVDCON0        equ	3887	;# 
  3841   000F30                     HLVDCON1        equ	3888	;# 
  3842   000F31                     FVRCON          equ	3889	;# 
  3843   000F32                     ZCDCON          equ	3890	;# 
  3844   000F33                     DAC1CON0        equ	3891	;# 
  3845   000F34                     DAC1CON1        equ	3892	;# 
  3846   000F35                     CM2CON0         equ	3893	;# 
  3847   000F36                     CM2CON1         equ	3894	;# 
  3848   000F37                     CM2NCH          equ	3895	;# 
  3849   000F38                     CM2PCH          equ	3896	;# 
  3850   000F39                     CM1CON0         equ	3897	;# 
  3851   000F3A                     CM1CON1         equ	3898	;# 
  3852   000F3B                     CM1NCH          equ	3899	;# 
  3853   000F3C                     CM1PCH          equ	3900	;# 
  3854   000F3D                     CMOUT           equ	3901	;# 
  3855   000F3E                     CLKRCON         equ	3902	;# 
  3856   000F3F                     CLKRCLK         equ	3903	;# 
  3857   000F40                     CWG1CLK         equ	3904	;# 
  3858   000F40                     CWG1CLKCON      equ	3904	;# 
  3859   000F41                     CWG1ISM         equ	3905	;# 
  3860   000F42                     CWG1DBR         equ	3906	;# 
  3861   000F43                     CWG1DBF         equ	3907	;# 
  3862   000F44                     CWG1CON0        equ	3908	;# 
  3863   000F45                     CWG1CON1        equ	3909	;# 
  3864   000F46                     CWG1AS0         equ	3910	;# 
  3865   000F47                     CWG1AS1         equ	3911	;# 
  3866   000F48                     CWG1STR         equ	3912	;# 
  3867   000F49                     SCANLADR        equ	3913	;# 
  3868   000F49                     SCANLADRL       equ	3913	;# 
  3869   000F4A                     SCANLADRH       equ	3914	;# 
  3870   000F4B                     SCANLADRU       equ	3915	;# 
  3871   000F4C                     SCANHADR        equ	3916	;# 
  3872   000F4C                     SCANHADRL       equ	3916	;# 
  3873   000F4D                     SCANHADRH       equ	3917	;# 
  3874   000F4E                     SCANHADRU       equ	3918	;# 
  3875   000F4F                     SCANCON0        equ	3919	;# 
  3876   000F50                     SCANTRIG        equ	3920	;# 
  3877   000F51                     MDCON0          equ	3921	;# 
  3878   000F52                     MDCON1          equ	3922	;# 
  3879   000F53                     MDSRC           equ	3923	;# 
  3880   000F54                     MDCARL          equ	3924	;# 
  3881   000F55                     MDCARH          equ	3925	;# 
  3882   000F56                     ADACT           equ	3926	;# 
  3883   000F57                     ADCLK           equ	3927	;# 
  3884   000F58                     ADREF           equ	3928	;# 
  3885   000F59                     ADCON1          equ	3929	;# 
  3886   000F5A                     ADCON2          equ	3930	;# 
  3887   000F5B                     ADCON3          equ	3931	;# 
  3888   000F5C                     ADACQ           equ	3932	;# 
  3889   000F5D                     ADCAP           equ	3933	;# 
  3890   000F5E                     ADPRE           equ	3934	;# 
  3891   000F5F                     ADPCH           equ	3935	;# 
  3892   000F60                     ADCON0          equ	3936	;# 
  3893   000F61                     ADPREV          equ	3937	;# 
  3894   000F61                     ADPREVL         equ	3937	;# 
  3895   000F62                     ADPREVH         equ	3938	;# 
  3896   000F63                     ADRES           equ	3939	;# 
  3897   000F63                     ADRESL          equ	3939	;# 
  3898   000F64                     ADRESH          equ	3940	;# 
  3899   000F65                     ADSTAT          equ	3941	;# 
  3900   000F66                     ADRPT           equ	3942	;# 
  3901   000F67                     ADCNT           equ	3943	;# 
  3902   000F68                     ADSTPT          equ	3944	;# 
  3903   000F68                     ADSTPTL         equ	3944	;# 
  3904   000F69                     ADSTPTH         equ	3945	;# 
  3905   000F6A                     ADLTH           equ	3946	;# 
  3906   000F6A                     ADLTHL          equ	3946	;# 
  3907   000F6B                     ADLTHH          equ	3947	;# 
  3908   000F6C                     ADUTH           equ	3948	;# 
  3909   000F6C                     ADUTHL          equ	3948	;# 
  3910   000F6D                     ADUTHH          equ	3949	;# 
  3911   000F6E                     ADERR           equ	3950	;# 
  3912   000F6E                     ADERRL          equ	3950	;# 
  3913   000F6F                     ADERRH          equ	3951	;# 
  3914   000F70                     ADACC           equ	3952	;# 
  3915   000F70                     ADACCL          equ	3952	;# 
  3916   000F71                     ADACCH          equ	3953	;# 
  3917   000F72                     ADFLTR          equ	3954	;# 
  3918   000F72                     ADFLTRL         equ	3954	;# 
  3919   000F73                     ADFLTRH         equ	3955	;# 
  3920   000F74                     CRCDATA         equ	3956	;# 
  3921   000F74                     CRCDATL         equ	3956	;# 
  3922   000F75                     CRCDATH         equ	3957	;# 
  3923   000F76                     CRCACC          equ	3958	;# 
  3924   000F76                     CRCACCL         equ	3958	;# 
  3925   000F77                     CRCACCH         equ	3959	;# 
  3926   000F78                     CRCSHFT         equ	3960	;# 
  3927   000F78                     CRCSHIFTL       equ	3960	;# 
  3928   000F79                     CRCSHIFTH       equ	3961	;# 
  3929   000F7A                     CRCXOR          equ	3962	;# 
  3930   000F7A                     CRCXORL         equ	3962	;# 
  3931   000F7B                     CRCXORH         equ	3963	;# 
  3932   000F7C                     CRCCON0         equ	3964	;# 
  3933   000F7D                     CRCCON1         equ	3965	;# 
  3934   000F7E                     NVMADR          equ	3966	;# 
  3935   000F7E                     NVMADRL         equ	3966	;# 
  3936   000F7F                     NVMADRH         equ	3967	;# 
  3937   000F80                     NVMDAT          equ	3968	;# 
  3938   000F81                     NVMCON1         equ	3969	;# 
  3939   000F82                     NVMCON2         equ	3970	;# 
  3940   000F83                     LATA            equ	3971	;# 
  3941   000F84                     LATB            equ	3972	;# 
  3942   000F85                     LATC            equ	3973	;# 
  3943   000F88                     TRISA           equ	3976	;# 
  3944   000F88                     DDRA            equ	3976	;# 
  3945   000F89                     TRISB           equ	3977	;# 
  3946   000F89                     DDRB            equ	3977	;# 
  3947   000F8A                     TRISC           equ	3978	;# 
  3948   000F8A                     DDRC            equ	3978	;# 
  3949   000F8D                     PORTA           equ	3981	;# 
  3950   000F8E                     PORTB           equ	3982	;# 
  3951   000F8F                     PORTC           equ	3983	;# 
  3952   000F91                     PORTE           equ	3985	;# 
  3953   000F92                     SSP1BUF         equ	3986	;# 
  3954   000F93                     SSP1ADD         equ	3987	;# 
  3955   000F94                     SSP1MSK         equ	3988	;# 
  3956   000F95                     SSP1STAT        equ	3989	;# 
  3957   000F96                     SSP1CON1        equ	3990	;# 
  3958   000F97                     SSP1CON2        equ	3991	;# 
  3959   000F98                     SSP1CON3        equ	3992	;# 
  3960   000F99                     RC1REG          equ	3993	;# 
  3961   000F99                     RCREG           equ	3993	;# 
  3962   000F99                     RCREG1          equ	3993	;# 
  3963   000F9A                     TX1REG          equ	3994	;# 
  3964   000F9A                     TXREG1          equ	3994	;# 
  3965   000F9A                     TXREG           equ	3994	;# 
  3966   000F9B                     SP1BRG          equ	3995	;# 
  3967   000F9B                     SP1BRGL         equ	3995	;# 
  3968   000F9B                     SPBRG           equ	3995	;# 
  3969   000F9B                     SPBRG1          equ	3995	;# 
  3970   000F9B                     SPBRGL          equ	3995	;# 
  3971   000F9C                     SP1BRGH         equ	3996	;# 
  3972   000F9C                     SPBRGH          equ	3996	;# 
  3973   000F9C                     SPBRGH1         equ	3996	;# 
  3974   000F9D                     RC1STA          equ	3997	;# 
  3975   000F9D                     RCSTA1          equ	3997	;# 
  3976   000F9D                     RCSTA           equ	3997	;# 
  3977   000F9E                     TX1STA          equ	3998	;# 
  3978   000F9E                     TXSTA1          equ	3998	;# 
  3979   000F9E                     TXSTA           equ	3998	;# 
  3980   000F9F                     BAUD1CON        equ	3999	;# 
  3981   000F9F                     BAUDCON1        equ	3999	;# 
  3982   000F9F                     BAUDCTL1        equ	3999	;# 
  3983   000F9F                     BAUDCON         equ	3999	;# 
  3984   000F9F                     BAUDCTL         equ	3999	;# 
  3985   000FA0                     PWM4DC          equ	4000	;# 
  3986   000FA0                     PWM4DCL         equ	4000	;# 
  3987   000FA1                     PWM4DCH         equ	4001	;# 
  3988   000FA2                     PWM4CON         equ	4002	;# 
  3989   000FA3                     PWM3DC          equ	4003	;# 
  3990   000FA3                     PWM3DCL         equ	4003	;# 
  3991   000FA4                     PWM3DCH         equ	4004	;# 
  3992   000FA5                     PWM3CON         equ	4005	;# 
  3993   000FA6                     CCPR2           equ	4006	;# 
  3994   000FA6                     CCPR2L          equ	4006	;# 
  3995   000FA7                     CCPR2H          equ	4007	;# 
  3996   000FA8                     CCP2CON         equ	4008	;# 
  3997   000FA9                     CCP2CAP         equ	4009	;# 
  3998   000FAA                     CCPR1           equ	4010	;# 
  3999   000FAA                     CCPR1L          equ	4010	;# 
  4000   000FAB                     CCPR1H          equ	4011	;# 
  4001   000FAC                     CCP1CON         equ	4012	;# 
  4002   000FAD                     CCP1CAP         equ	4013	;# 
  4003   000FAE                     CCPTMRS         equ	4014	;# 
  4004   000FAF                     T6TMR           equ	4015	;# 
  4005   000FAF                     TMR6            equ	4015	;# 
  4006   000FB0                     T6PR            equ	4016	;# 
  4007   000FB0                     PR6             equ	4016	;# 
  4008   000FB1                     T6CON           equ	4017	;# 
  4009   000FB2                     T6HLT           equ	4018	;# 
  4010   000FB3                     T6CLKCON        equ	4019	;# 
  4011   000FB3                     T6CLK           equ	4019	;# 
  4012   000FB4                     T6RST           equ	4020	;# 
  4013   000FB5                     T4TMR           equ	4021	;# 
  4014   000FB5                     TMR4            equ	4021	;# 
  4015   000FB6                     T4PR            equ	4022	;# 
  4016   000FB6                     PR4             equ	4022	;# 
  4017   000FB7                     T4CON           equ	4023	;# 
  4018   000FB8                     T4HLT           equ	4024	;# 
  4019   000FB9                     T4CLKCON        equ	4025	;# 
  4020   000FB9                     T4CLK           equ	4025	;# 
  4021   000FBA                     T4RST           equ	4026	;# 
  4022   000FBB                     T2TMR           equ	4027	;# 
  4023   000FBB                     TMR2            equ	4027	;# 
  4024   000FBC                     T2PR            equ	4028	;# 
  4025   000FBC                     PR2             equ	4028	;# 
  4026   000FBD                     T2CON           equ	4029	;# 
  4027   000FBE                     T2HLT           equ	4030	;# 
  4028   000FBF                     T2CLKCON        equ	4031	;# 
  4029   000FBF                     T2CLK           equ	4031	;# 
  4030   000FC0                     T2RST           equ	4032	;# 
  4031   000FC1                     TMR5            equ	4033	;# 
  4032   000FC1                     TMR5L           equ	4033	;# 
  4033   000FC2                     TMR5H           equ	4034	;# 
  4034   000FC3                     T5CON           equ	4035	;# 
  4035   000FC4                     T5GCON          equ	4036	;# 
  4036   000FC4                     PR5             equ	4036	;# 
  4037   000FC5                     T5GATE          equ	4037	;# 
  4038   000FC5                     TMR5GATE        equ	4037	;# 
  4039   000FC6                     T5CLK           equ	4038	;# 
  4040   000FC6                     TMR5CLK         equ	4038	;# 
  4041   000FC7                     TMR3            equ	4039	;# 
  4042   000FC7                     TMR3L           equ	4039	;# 
  4043   000FC8                     TMR3H           equ	4040	;# 
  4044   000FC9                     T3CON           equ	4041	;# 
  4045   000FCA                     T3GCON          equ	4042	;# 
  4046   000FCA                     PR3             equ	4042	;# 
  4047   000FCB                     T3GATE          equ	4043	;# 
  4048   000FCB                     TMR3GATE        equ	4043	;# 
  4049   000FCC                     T3CLK           equ	4044	;# 
  4050   000FCC                     TMR3CLK         equ	4044	;# 
  4051   000FCD                     TMR1            equ	4045	;# 
  4052   000FCD                     TMR1L           equ	4045	;# 
  4053   000FCE                     TMR1H           equ	4046	;# 
  4054   000FCF                     T1CON           equ	4047	;# 
  4055   000FD0                     T1GCON          equ	4048	;# 
  4056   000FD0                     PR1             equ	4048	;# 
  4057   000FD1                     T1GATE          equ	4049	;# 
  4058   000FD1                     TMR1GATE        equ	4049	;# 
  4059   000FD2                     T1CLK           equ	4050	;# 
  4060   000FD2                     TMR1CLK         equ	4050	;# 
  4061   000FD3                     TMR0L           equ	4051	;# 
  4062   000FD3                     TMR0            equ	4051	;# 
  4063   000FD4                     TMR0H           equ	4052	;# 
  4064   000FD4                     PR0             equ	4052	;# 
  4065   000FD5                     T0CON0          equ	4053	;# 
  4066   000FD6                     T0CON1          equ	4054	;# 
  4067   000FD7                     PCON0           equ	4055	;# 
  4068   000FD8                     STATUS          equ	4056	;# 
  4069   000FD9                     FSR2            equ	4057	;# 
  4070   000FD9                     FSR2L           equ	4057	;# 
  4071   000FDA                     FSR2H           equ	4058	;# 
  4072   000FDB                     PLUSW2          equ	4059	;# 
  4073   000FDC                     PREINC2         equ	4060	;# 
  4074   000FDD                     POSTDEC2        equ	4061	;# 
  4075   000FDE                     POSTINC2        equ	4062	;# 
  4076   000FDF                     INDF2           equ	4063	;# 
  4077   000FE0                     BSR             equ	4064	;# 
  4078   000FE1                     FSR1            equ	4065	;# 
  4079   000FE1                     FSR1L           equ	4065	;# 
  4080   000FE2                     FSR1H           equ	4066	;# 
  4081   000FE3                     PLUSW1          equ	4067	;# 
  4082   000FE4                     PREINC1         equ	4068	;# 
  4083   000FE5                     POSTDEC1        equ	4069	;# 
  4084   000FE6                     POSTINC1        equ	4070	;# 
  4085   000FE7                     INDF1           equ	4071	;# 
  4086   000FE8                     WREG            equ	4072	;# 
  4087   000FE9                     FSR0            equ	4073	;# 
  4088   000FE9                     FSR0L           equ	4073	;# 
  4089   000FEA                     FSR0H           equ	4074	;# 
  4090   000FEB                     PLUSW0          equ	4075	;# 
  4091   000FEC                     PREINC0         equ	4076	;# 
  4092   000FED                     POSTDEC0        equ	4077	;# 
  4093   000FEE                     POSTINC0        equ	4078	;# 
  4094   000FEF                     INDF0           equ	4079	;# 
  4095   000FF2                     INTCON          equ	4082	;# 
  4096   000FF3                     PROD            equ	4083	;# 
  4097   000FF3                     PRODL           equ	4083	;# 
  4098   000FF4                     PRODH           equ	4084	;# 
  4099   000FF5                     TABLAT          equ	4085	;# 
  4100   000FF6                     TBLPTR          equ	4086	;# 
  4101   000FF6                     TBLPTRL         equ	4086	;# 
  4102   000FF7                     TBLPTRH         equ	4087	;# 
  4103   000FF8                     TBLPTRU         equ	4088	;# 
  4104   000FF9                     PCLAT           equ	4089	;# 
  4105   000FF9                     PC              equ	4089	;# 
  4106   000FF9                     PCL             equ	4089	;# 
  4107   000FFA                     PCLATH          equ	4090	;# 
  4108   000FFB                     PCLATU          equ	4091	;# 
  4109   000FFC                     STKPTR          equ	4092	;# 
  4110   000FFD                     TOS             equ	4093	;# 
  4111   000FFD                     TOSL            equ	4093	;# 
  4112   000FFE                     TOSH            equ	4094	;# 
  4113   000FFF                     TOSU            equ	4095	;# 
  4114   000E8D                     RX2PPS          equ	3725	;# 
  4115   000E8E                     CK2PPS          equ	3726	;# 
  4116   000E8E                     TX2PPS          equ	3726	;# 
  4117   000E8F                     SSP2CLKPPS      equ	3727	;# 
  4118   000E90                     SSP2DATPPS      equ	3728	;# 
  4119   000E91                     SSP2SSPPS       equ	3729	;# 
  4120   000E92                     SSP2BUF         equ	3730	;# 
  4121   000E93                     SSP2ADD         equ	3731	;# 
  4122   000E94                     SSP2MSK         equ	3732	;# 
  4123   000E95                     SSP2STAT        equ	3733	;# 
  4124   000E96                     SSP2CON1        equ	3734	;# 
  4125   000E97                     SSP2CON2        equ	3735	;# 
  4126   000E98                     SSP2CON3        equ	3736	;# 
  4127   000E99                     RC2REG          equ	3737	;# 
  4128   000E99                     RCREG2          equ	3737	;# 
  4129   000E9A                     TX2REG          equ	3738	;# 
  4130   000E9A                     TXREG2          equ	3738	;# 
  4131   000E9B                     SP2BRG          equ	3739	;# 
  4132   000E9B                     SP2BRGL         equ	3739	;# 
  4133   000E9B                     SPBRG2          equ	3739	;# 
  4134   000E9C                     SP2BRGH         equ	3740	;# 
  4135   000E9C                     SPBRGH2         equ	3740	;# 
  4136   000E9D                     RC2STA          equ	3741	;# 
  4137   000E9D                     RCSTA2          equ	3741	;# 
  4138   000E9E                     TX2STA          equ	3742	;# 
  4139   000E9E                     TXSTA2          equ	3742	;# 
  4140   000E9F                     BAUD2CON        equ	3743	;# 
  4141   000E9F                     BAUDCON2        equ	3743	;# 
  4142   000E9F                     BAUDCTL2        equ	3743	;# 
  4143   000EA0                     PPSLOCK         equ	3744	;# 
  4144   000EA1                     INT0PPS         equ	3745	;# 
  4145   000EA2                     INT1PPS         equ	3746	;# 
  4146   000EA3                     INT2PPS         equ	3747	;# 
  4147   000EA4                     T0CKIPPS        equ	3748	;# 
  4148   000EA5                     T1CKIPPS        equ	3749	;# 
  4149   000EA6                     T1GPPS          equ	3750	;# 
  4150   000EA7                     T3CKIPPS        equ	3751	;# 
  4151   000EA8                     T3GPPS          equ	3752	;# 
  4152   000EA9                     T5CKIPPS        equ	3753	;# 
  4153   000EAA                     T5GPPS          equ	3754	;# 
  4154   000EAB                     T2INPPS         equ	3755	;# 
  4155   000EAC                     T4INPPS         equ	3756	;# 
  4156   000EAD                     T6INPPS         equ	3757	;# 
  4157   000EAE                     ADACTPPS        equ	3758	;# 
  4158   000EAF                     CCP1PPS         equ	3759	;# 
  4159   000EB0                     CCP2PPS         equ	3760	;# 
  4160   000EB1                     CWG1PPS         equ	3761	;# 
  4161   000EB1                     CWGINPPS        equ	3761	;# 
  4162   000EB2                     MDCARLPPS       equ	3762	;# 
  4163   000EB3                     MDCARHPPS       equ	3763	;# 
  4164   000EB4                     MDSRCPPS        equ	3764	;# 
  4165   000EB5                     RX1PPS          equ	3765	;# 
  4166   000EB5                     RXPPS           equ	3765	;# 
  4167   000EB6                     CK1PPS          equ	3766	;# 
  4168   000EB6                     TX1PPS          equ	3766	;# 
  4169   000EB6                     CKPPS           equ	3766	;# 
  4170   000EB6                     TXPPS           equ	3766	;# 
  4171   000EB7                     SSP1CLKPPS      equ	3767	;# 
  4172   000EB7                     SSPCLKPPS       equ	3767	;# 
  4173   000EB8                     SSP1DATPPS      equ	3768	;# 
  4174   000EB8                     SSPDATPPS       equ	3768	;# 
  4175   000EB9                     SSP1SSPPS       equ	3769	;# 
  4176   000EB9                     SSPSSPPS        equ	3769	;# 
  4177   000EBA                     IPR0            equ	3770	;# 
  4178   000EBB                     IPR1            equ	3771	;# 
  4179   000EBC                     IPR2            equ	3772	;# 
  4180   000EBD                     IPR3            equ	3773	;# 
  4181   000EBE                     IPR4            equ	3774	;# 
  4182   000EBF                     IPR5            equ	3775	;# 
  4183   000EC0                     IPR6            equ	3776	;# 
  4184   000EC1                     IPR7            equ	3777	;# 
  4185   000EC2                     PIE0            equ	3778	;# 
  4186   000EC3                     PIE1            equ	3779	;# 
  4187   000EC4                     PIE2            equ	3780	;# 
  4188   000EC5                     PIE3            equ	3781	;# 
  4189   000EC6                     PIE4            equ	3782	;# 
  4190   000EC7                     PIE5            equ	3783	;# 
  4191   000EC8                     PIE6            equ	3784	;# 
  4192   000EC9                     PIE7            equ	3785	;# 
  4193   000ECA                     PIR0            equ	3786	;# 
  4194   000ECB                     PIR1            equ	3787	;# 
  4195   000ECC                     PIR2            equ	3788	;# 
  4196   000ECD                     PIR3            equ	3789	;# 
  4197   000ECE                     PIR4            equ	3790	;# 
  4198   000ECF                     PIR5            equ	3791	;# 
  4199   000ED0                     PIR6            equ	3792	;# 
  4200   000ED1                     PIR7            equ	3793	;# 
  4201   000ED2                     WDTCON0         equ	3794	;# 
  4202   000ED3                     WDTCON1         equ	3795	;# 
  4203   000ED4                     WDTPSL          equ	3796	;# 
  4204   000ED5                     WDTPSH          equ	3797	;# 
  4205   000ED6                     WDTTMR          equ	3798	;# 
  4206   000ED7                     CPUDOZE         equ	3799	;# 
  4207   000ED8                     OSCCON1         equ	3800	;# 
  4208   000ED9                     OSCCON2         equ	3801	;# 
  4209   000EDA                     OSCCON3         equ	3802	;# 
  4210   000EDB                     OSCSTAT         equ	3803	;# 
  4211   000EDB                     OSCSTAT1        equ	3803	;# 
  4212   000EDC                     OSCEN           equ	3804	;# 
  4213   000EDD                     OSCTUNE         equ	3805	;# 
  4214   000EDE                     OSCFRQ          equ	3806	;# 
  4215   000EE0                     BORCON          equ	3808	;# 
  4216   000EE1                     PMD0            equ	3809	;# 
  4217   000EE2                     PMD1            equ	3810	;# 
  4218   000EE3                     PMD2            equ	3811	;# 
  4219   000EE4                     PMD3            equ	3812	;# 
  4220   000EE5                     PMD4            equ	3813	;# 
  4221   000EE6                     PMD5            equ	3814	;# 
  4222   000EE7                     RA0PPS          equ	3815	;# 
  4223   000EE8                     RA1PPS          equ	3816	;# 
  4224   000EE9                     RA2PPS          equ	3817	;# 
  4225   000EEA                     RA3PPS          equ	3818	;# 
  4226   000EEB                     RA4PPS          equ	3819	;# 
  4227   000EEC                     RA5PPS          equ	3820	;# 
  4228   000EED                     RA6PPS          equ	3821	;# 
  4229   000EEE                     RA7PPS          equ	3822	;# 
  4230   000EEF                     RB0PPS          equ	3823	;# 
  4231   000EF0                     RB1PPS          equ	3824	;# 
  4232   000EF1                     RB2PPS          equ	3825	;# 
  4233   000EF2                     RB3PPS          equ	3826	;# 
  4234   000EF3                     RB4PPS          equ	3827	;# 
  4235   000EF4                     RB5PPS          equ	3828	;# 
  4236   000EF5                     RB6PPS          equ	3829	;# 
  4237   000EF6                     RB7PPS          equ	3830	;# 
  4238   000EF7                     RC0PPS          equ	3831	;# 
  4239   000EF8                     RC1PPS          equ	3832	;# 
  4240   000EF9                     RC2PPS          equ	3833	;# 
  4241   000EFA                     RC3PPS          equ	3834	;# 
  4242   000EFB                     RC4PPS          equ	3835	;# 
  4243   000EFC                     RC5PPS          equ	3836	;# 
  4244   000EFD                     RC6PPS          equ	3837	;# 
  4245   000EFE                     RC7PPS          equ	3838	;# 
  4246   000F0A                     IOCAF           equ	3850	;# 
  4247   000F0B                     IOCAN           equ	3851	;# 
  4248   000F0C                     IOCAP           equ	3852	;# 
  4249   000F0D                     INLVLA          equ	3853	;# 
  4250   000F0E                     SLRCONA         equ	3854	;# 
  4251   000F0F                     ODCONA          equ	3855	;# 
  4252   000F10                     WPUA            equ	3856	;# 
  4253   000F11                     ANSELA          equ	3857	;# 
  4254   000F12                     IOCBF           equ	3858	;# 
  4255   000F13                     IOCBN           equ	3859	;# 
  4256   000F14                     IOCBP           equ	3860	;# 
  4257   000F15                     INLVLB          equ	3861	;# 
  4258   000F16                     SLRCONB         equ	3862	;# 
  4259   000F17                     ODCONB          equ	3863	;# 
  4260   000F18                     WPUB            equ	3864	;# 
  4261   000F19                     ANSELB          equ	3865	;# 
  4262   000F1A                     IOCCF           equ	3866	;# 
  4263   000F1B                     IOCCN           equ	3867	;# 
  4264   000F1C                     IOCCP           equ	3868	;# 
  4265   000F1D                     INLVLC          equ	3869	;# 
  4266   000F1E                     SLRCONC         equ	3870	;# 
  4267   000F1F                     ODCONC          equ	3871	;# 
  4268   000F20                     WPUC            equ	3872	;# 
  4269   000F21                     ANSELC          equ	3873	;# 
  4270   000F27                     IOCEF           equ	3879	;# 
  4271   000F28                     IOCEN           equ	3880	;# 
  4272   000F29                     IOCEP           equ	3881	;# 
  4273   000F2A                     INLVLE          equ	3882	;# 
  4274   000F2D                     WPUE            equ	3885	;# 
  4275   000F2F                     HLVDCON0        equ	3887	;# 
  4276   000F30                     HLVDCON1        equ	3888	;# 
  4277   000F31                     FVRCON          equ	3889	;# 
  4278   000F32                     ZCDCON          equ	3890	;# 
  4279   000F33                     DAC1CON0        equ	3891	;# 
  4280   000F34                     DAC1CON1        equ	3892	;# 
  4281   000F35                     CM2CON0         equ	3893	;# 
  4282   000F36                     CM2CON1         equ	3894	;# 
  4283   000F37                     CM2NCH          equ	3895	;# 
  4284   000F38                     CM2PCH          equ	3896	;# 
  4285   000F39                     CM1CON0         equ	3897	;# 
  4286   000F3A                     CM1CON1         equ	3898	;# 
  4287   000F3B                     CM1NCH          equ	3899	;# 
  4288   000F3C                     CM1PCH          equ	3900	;# 
  4289   000F3D                     CMOUT           equ	3901	;# 
  4290   000F3E                     CLKRCON         equ	3902	;# 
  4291   000F3F                     CLKRCLK         equ	3903	;# 
  4292   000F40                     CWG1CLK         equ	3904	;# 
  4293   000F40                     CWG1CLKCON      equ	3904	;# 
  4294   000F41                     CWG1ISM         equ	3905	;# 
  4295   000F42                     CWG1DBR         equ	3906	;# 
  4296   000F43                     CWG1DBF         equ	3907	;# 
  4297   000F44                     CWG1CON0        equ	3908	;# 
  4298   000F45                     CWG1CON1        equ	3909	;# 
  4299   000F46                     CWG1AS0         equ	3910	;# 
  4300   000F47                     CWG1AS1         equ	3911	;# 
  4301   000F48                     CWG1STR         equ	3912	;# 
  4302   000F49                     SCANLADR        equ	3913	;# 
  4303   000F49                     SCANLADRL       equ	3913	;# 
  4304   000F4A                     SCANLADRH       equ	3914	;# 
  4305   000F4B                     SCANLADRU       equ	3915	;# 
  4306   000F4C                     SCANHADR        equ	3916	;# 
  4307   000F4C                     SCANHADRL       equ	3916	;# 
  4308   000F4D                     SCANHADRH       equ	3917	;# 
  4309   000F4E                     SCANHADRU       equ	3918	;# 
  4310   000F4F                     SCANCON0        equ	3919	;# 
  4311   000F50                     SCANTRIG        equ	3920	;# 
  4312   000F51                     MDCON0          equ	3921	;# 
  4313   000F52                     MDCON1          equ	3922	;# 
  4314   000F53                     MDSRC           equ	3923	;# 
  4315   000F54                     MDCARL          equ	3924	;# 
  4316   000F55                     MDCARH          equ	3925	;# 
  4317   000F56                     ADACT           equ	3926	;# 
  4318   000F57                     ADCLK           equ	3927	;# 
  4319   000F58                     ADREF           equ	3928	;# 
  4320   000F59                     ADCON1          equ	3929	;# 
  4321   000F5A                     ADCON2          equ	3930	;# 
  4322   000F5B                     ADCON3          equ	3931	;# 
  4323   000F5C                     ADACQ           equ	3932	;# 
  4324   000F5D                     ADCAP           equ	3933	;# 
  4325   000F5E                     ADPRE           equ	3934	;# 
  4326   000F5F                     ADPCH           equ	3935	;# 
  4327   000F60                     ADCON0          equ	3936	;# 
  4328   000F61                     ADPREV          equ	3937	;# 
  4329   000F61                     ADPREVL         equ	3937	;# 
  4330   000F62                     ADPREVH         equ	3938	;# 
  4331   000F63                     ADRES           equ	3939	;# 
  4332   000F63                     ADRESL          equ	3939	;# 
  4333   000F64                     ADRESH          equ	3940	;# 
  4334   000F65                     ADSTAT          equ	3941	;# 
  4335   000F66                     ADRPT           equ	3942	;# 
  4336   000F67                     ADCNT           equ	3943	;# 
  4337   000F68                     ADSTPT          equ	3944	;# 
  4338   000F68                     ADSTPTL         equ	3944	;# 
  4339   000F69                     ADSTPTH         equ	3945	;# 
  4340   000F6A                     ADLTH           equ	3946	;# 
  4341   000F6A                     ADLTHL          equ	3946	;# 
  4342   000F6B                     ADLTHH          equ	3947	;# 
  4343   000F6C                     ADUTH           equ	3948	;# 
  4344   000F6C                     ADUTHL          equ	3948	;# 
  4345   000F6D                     ADUTHH          equ	3949	;# 
  4346   000F6E                     ADERR           equ	3950	;# 
  4347   000F6E                     ADERRL          equ	3950	;# 
  4348   000F6F                     ADERRH          equ	3951	;# 
  4349   000F70                     ADACC           equ	3952	;# 
  4350   000F70                     ADACCL          equ	3952	;# 
  4351   000F71                     ADACCH          equ	3953	;# 
  4352   000F72                     ADFLTR          equ	3954	;# 
  4353   000F72                     ADFLTRL         equ	3954	;# 
  4354   000F73                     ADFLTRH         equ	3955	;# 
  4355   000F74                     CRCDATA         equ	3956	;# 
  4356   000F74                     CRCDATL         equ	3956	;# 
  4357   000F75                     CRCDATH         equ	3957	;# 
  4358   000F76                     CRCACC          equ	3958	;# 
  4359   000F76                     CRCACCL         equ	3958	;# 
  4360   000F77                     CRCACCH         equ	3959	;# 
  4361   000F78                     CRCSHFT         equ	3960	;# 
  4362   000F78                     CRCSHIFTL       equ	3960	;# 
  4363   000F79                     CRCSHIFTH       equ	3961	;# 
  4364   000F7A                     CRCXOR          equ	3962	;# 
  4365   000F7A                     CRCXORL         equ	3962	;# 
  4366   000F7B                     CRCXORH         equ	3963	;# 
  4367   000F7C                     CRCCON0         equ	3964	;# 
  4368   000F7D                     CRCCON1         equ	3965	;# 
  4369   000F7E                     NVMADR          equ	3966	;# 
  4370   000F7E                     NVMADRL         equ	3966	;# 
  4371   000F7F                     NVMADRH         equ	3967	;# 
  4372   000F80                     NVMDAT          equ	3968	;# 
  4373   000F81                     NVMCON1         equ	3969	;# 
  4374   000F82                     NVMCON2         equ	3970	;# 
  4375   000F83                     LATA            equ	3971	;# 
  4376   000F84                     LATB            equ	3972	;# 
  4377   000F85                     LATC            equ	3973	;# 
  4378   000F88                     TRISA           equ	3976	;# 
  4379   000F88                     DDRA            equ	3976	;# 
  4380   000F89                     TRISB           equ	3977	;# 
  4381   000F89                     DDRB            equ	3977	;# 
  4382   000F8A                     TRISC           equ	3978	;# 
  4383   000F8A                     DDRC            equ	3978	;# 
  4384   000F8D                     PORTA           equ	3981	;# 
  4385   000F8E                     PORTB           equ	3982	;# 
  4386   000F8F                     PORTC           equ	3983	;# 
  4387   000F91                     PORTE           equ	3985	;# 
  4388   000F92                     SSP1BUF         equ	3986	;# 
  4389   000F93                     SSP1ADD         equ	3987	;# 
  4390   000F94                     SSP1MSK         equ	3988	;# 
  4391   000F95                     SSP1STAT        equ	3989	;# 
  4392   000F96                     SSP1CON1        equ	3990	;# 
  4393   000F97                     SSP1CON2        equ	3991	;# 
  4394   000F98                     SSP1CON3        equ	3992	;# 
  4395   000F99                     RC1REG          equ	3993	;# 
  4396   000F99                     RCREG           equ	3993	;# 
  4397   000F99                     RCREG1          equ	3993	;# 
  4398   000F9A                     TX1REG          equ	3994	;# 
  4399   000F9A                     TXREG1          equ	3994	;# 
  4400   000F9A                     TXREG           equ	3994	;# 
  4401   000F9B                     SP1BRG          equ	3995	;# 
  4402   000F9B                     SP1BRGL         equ	3995	;# 
  4403   000F9B                     SPBRG           equ	3995	;# 
  4404   000F9B                     SPBRG1          equ	3995	;# 
  4405   000F9B                     SPBRGL          equ	3995	;# 
  4406   000F9C                     SP1BRGH         equ	3996	;# 
  4407   000F9C                     SPBRGH          equ	3996	;# 
  4408   000F9C                     SPBRGH1         equ	3996	;# 
  4409   000F9D                     RC1STA          equ	3997	;# 
  4410   000F9D                     RCSTA1          equ	3997	;# 
  4411   000F9D                     RCSTA           equ	3997	;# 
  4412   000F9E                     TX1STA          equ	3998	;# 
  4413   000F9E                     TXSTA1          equ	3998	;# 
  4414   000F9E                     TXSTA           equ	3998	;# 
  4415   000F9F                     BAUD1CON        equ	3999	;# 
  4416   000F9F                     BAUDCON1        equ	3999	;# 
  4417   000F9F                     BAUDCTL1        equ	3999	;# 
  4418   000F9F                     BAUDCON         equ	3999	;# 
  4419   000F9F                     BAUDCTL         equ	3999	;# 
  4420   000FA0                     PWM4DC          equ	4000	;# 
  4421   000FA0                     PWM4DCL         equ	4000	;# 
  4422   000FA1                     PWM4DCH         equ	4001	;# 
  4423   000FA2                     PWM4CON         equ	4002	;# 
  4424   000FA3                     PWM3DC          equ	4003	;# 
  4425   000FA3                     PWM3DCL         equ	4003	;# 
  4426   000FA4                     PWM3DCH         equ	4004	;# 
  4427   000FA5                     PWM3CON         equ	4005	;# 
  4428   000FA6                     CCPR2           equ	4006	;# 
  4429   000FA6                     CCPR2L          equ	4006	;# 
  4430   000FA7                     CCPR2H          equ	4007	;# 
  4431   000FA8                     CCP2CON         equ	4008	;# 
  4432   000FA9                     CCP2CAP         equ	4009	;# 
  4433   000FAA                     CCPR1           equ	4010	;# 
  4434   000FAA                     CCPR1L          equ	4010	;# 
  4435   000FAB                     CCPR1H          equ	4011	;# 
  4436   000FAC                     CCP1CON         equ	4012	;# 
  4437   000FAD                     CCP1CAP         equ	4013	;# 
  4438   000FAE                     CCPTMRS         equ	4014	;# 
  4439   000FAF                     T6TMR           equ	4015	;# 
  4440   000FAF                     TMR6            equ	4015	;# 
  4441   000FB0                     T6PR            equ	4016	;# 
  4442   000FB0                     PR6             equ	4016	;# 
  4443   000FB1                     T6CON           equ	4017	;# 
  4444   000FB2                     T6HLT           equ	4018	;# 
  4445   000FB3                     T6CLKCON        equ	4019	;# 
  4446   000FB3                     T6CLK           equ	4019	;# 
  4447   000FB4                     T6RST           equ	4020	;# 
  4448   000FB5                     T4TMR           equ	4021	;# 
  4449   000FB5                     TMR4            equ	4021	;# 
  4450   000FB6                     T4PR            equ	4022	;# 
  4451   000FB6                     PR4             equ	4022	;# 
  4452   000FB7                     T4CON           equ	4023	;# 
  4453   000FB8                     T4HLT           equ	4024	;# 
  4454   000FB9                     T4CLKCON        equ	4025	;# 
  4455   000FB9                     T4CLK           equ	4025	;# 
  4456   000FBA                     T4RST           equ	4026	;# 
  4457   000FBB                     T2TMR           equ	4027	;# 
  4458   000FBB                     TMR2            equ	4027	;# 
  4459   000FBC                     T2PR            equ	4028	;# 
  4460   000FBC                     PR2             equ	4028	;# 
  4461   000FBD                     T2CON           equ	4029	;# 
  4462   000FBE                     T2HLT           equ	4030	;# 
  4463   000FBF                     T2CLKCON        equ	4031	;# 
  4464   000FBF                     T2CLK           equ	4031	;# 
  4465   000FC0                     T2RST           equ	4032	;# 
  4466   000FC1                     TMR5            equ	4033	;# 
  4467   000FC1                     TMR5L           equ	4033	;# 
  4468   000FC2                     TMR5H           equ	4034	;# 
  4469   000FC3                     T5CON           equ	4035	;# 
  4470   000FC4                     T5GCON          equ	4036	;# 
  4471   000FC4                     PR5             equ	4036	;# 
  4472   000FC5                     T5GATE          equ	4037	;# 
  4473   000FC5                     TMR5GATE        equ	4037	;# 
  4474   000FC6                     T5CLK           equ	4038	;# 
  4475   000FC6                     TMR5CLK         equ	4038	;# 
  4476   000FC7                     TMR3            equ	4039	;# 
  4477   000FC7                     TMR3L           equ	4039	;# 
  4478   000FC8                     TMR3H           equ	4040	;# 
  4479   000FC9                     T3CON           equ	4041	;# 
  4480   000FCA                     T3GCON          equ	4042	;# 
  4481   000FCA                     PR3             equ	4042	;# 
  4482   000FCB                     T3GATE          equ	4043	;# 
  4483   000FCB                     TMR3GATE        equ	4043	;# 
  4484   000FCC                     T3CLK           equ	4044	;# 
  4485   000FCC                     TMR3CLK         equ	4044	;# 
  4486   000FCD                     TMR1            equ	4045	;# 
  4487   000FCD                     TMR1L           equ	4045	;# 
  4488   000FCE                     TMR1H           equ	4046	;# 
  4489   000FCF                     T1CON           equ	4047	;# 
  4490   000FD0                     T1GCON          equ	4048	;# 
  4491   000FD0                     PR1             equ	4048	;# 
  4492   000FD1                     T1GATE          equ	4049	;# 
  4493   000FD1                     TMR1GATE        equ	4049	;# 
  4494   000FD2                     T1CLK           equ	4050	;# 
  4495   000FD2                     TMR1CLK         equ	4050	;# 
  4496   000FD3                     TMR0L           equ	4051	;# 
  4497   000FD3                     TMR0            equ	4051	;# 
  4498   000FD4                     TMR0H           equ	4052	;# 
  4499   000FD4                     PR0             equ	4052	;# 
  4500   000FD5                     T0CON0          equ	4053	;# 
  4501   000FD6                     T0CON1          equ	4054	;# 
  4502   000FD7                     PCON0           equ	4055	;# 
  4503   000FD8                     STATUS          equ	4056	;# 
  4504   000FD9                     FSR2            equ	4057	;# 
  4505   000FD9                     FSR2L           equ	4057	;# 
  4506   000FDA                     FSR2H           equ	4058	;# 
  4507   000FDB                     PLUSW2          equ	4059	;# 
  4508   000FDC                     PREINC2         equ	4060	;# 
  4509   000FDD                     POSTDEC2        equ	4061	;# 
  4510   000FDE                     POSTINC2        equ	4062	;# 
  4511   000FDF                     INDF2           equ	4063	;# 
  4512   000FE0                     BSR             equ	4064	;# 
  4513   000FE1                     FSR1            equ	4065	;# 
  4514   000FE1                     FSR1L           equ	4065	;# 
  4515   000FE2                     FSR1H           equ	4066	;# 
  4516   000FE3                     PLUSW1          equ	4067	;# 
  4517   000FE4                     PREINC1         equ	4068	;# 
  4518   000FE5                     POSTDEC1        equ	4069	;# 
  4519   000FE6                     POSTINC1        equ	4070	;# 
  4520   000FE7                     INDF1           equ	4071	;# 
  4521   000FE8                     WREG            equ	4072	;# 
  4522   000FE9                     FSR0            equ	4073	;# 
  4523   000FE9                     FSR0L           equ	4073	;# 
  4524   000FEA                     FSR0H           equ	4074	;# 
  4525   000FEB                     PLUSW0          equ	4075	;# 
  4526   000FEC                     PREINC0         equ	4076	;# 
  4527   000FED                     POSTDEC0        equ	4077	;# 
  4528   000FEE                     POSTINC0        equ	4078	;# 
  4529   000FEF                     INDF0           equ	4079	;# 
  4530   000FF2                     INTCON          equ	4082	;# 
  4531   000FF3                     PROD            equ	4083	;# 
  4532   000FF3                     PRODL           equ	4083	;# 
  4533   000FF4                     PRODH           equ	4084	;# 
  4534   000FF5                     TABLAT          equ	4085	;# 
  4535   000FF6                     TBLPTR          equ	4086	;# 
  4536   000FF6                     TBLPTRL         equ	4086	;# 
  4537   000FF7                     TBLPTRH         equ	4087	;# 
  4538   000FF8                     TBLPTRU         equ	4088	;# 
  4539   000FF9                     PCLAT           equ	4089	;# 
  4540   000FF9                     PC              equ	4089	;# 
  4541   000FF9                     PCL             equ	4089	;# 
  4542   000FFA                     PCLATH          equ	4090	;# 
  4543   000FFB                     PCLATU          equ	4091	;# 
  4544   000FFC                     STKPTR          equ	4092	;# 
  4545   000FFD                     TOS             equ	4093	;# 
  4546   000FFD                     TOSL            equ	4093	;# 
  4547   000FFE                     TOSH            equ	4094	;# 
  4548   000FFF                     TOSU            equ	4095	;# 
  4549   000E8D                     RX2PPS          equ	3725	;# 
  4550   000E8E                     CK2PPS          equ	3726	;# 
  4551   000E8E                     TX2PPS          equ	3726	;# 
  4552   000E8F                     SSP2CLKPPS      equ	3727	;# 
  4553   000E90                     SSP2DATPPS      equ	3728	;# 
  4554   000E91                     SSP2SSPPS       equ	3729	;# 
  4555   000E92                     SSP2BUF         equ	3730	;# 
  4556   000E93                     SSP2ADD         equ	3731	;# 
  4557   000E94                     SSP2MSK         equ	3732	;# 
  4558   000E95                     SSP2STAT        equ	3733	;# 
  4559   000E96                     SSP2CON1        equ	3734	;# 
  4560   000E97                     SSP2CON2        equ	3735	;# 
  4561   000E98                     SSP2CON3        equ	3736	;# 
  4562   000E99                     RC2REG          equ	3737	;# 
  4563   000E99                     RCREG2          equ	3737	;# 
  4564   000E9A                     TX2REG          equ	3738	;# 
  4565   000E9A                     TXREG2          equ	3738	;# 
  4566   000E9B                     SP2BRG          equ	3739	;# 
  4567   000E9B                     SP2BRGL         equ	3739	;# 
  4568   000E9B                     SPBRG2          equ	3739	;# 
  4569   000E9C                     SP2BRGH         equ	3740	;# 
  4570   000E9C                     SPBRGH2         equ	3740	;# 
  4571   000E9D                     RC2STA          equ	3741	;# 
  4572   000E9D                     RCSTA2          equ	3741	;# 
  4573   000E9E                     TX2STA          equ	3742	;# 
  4574   000E9E                     TXSTA2          equ	3742	;# 
  4575   000E9F                     BAUD2CON        equ	3743	;# 
  4576   000E9F                     BAUDCON2        equ	3743	;# 
  4577   000E9F                     BAUDCTL2        equ	3743	;# 
  4578   000EA0                     PPSLOCK         equ	3744	;# 
  4579   000EA1                     INT0PPS         equ	3745	;# 
  4580   000EA2                     INT1PPS         equ	3746	;# 
  4581   000EA3                     INT2PPS         equ	3747	;# 
  4582   000EA4                     T0CKIPPS        equ	3748	;# 
  4583   000EA5                     T1CKIPPS        equ	3749	;# 
  4584   000EA6                     T1GPPS          equ	3750	;# 
  4585   000EA7                     T3CKIPPS        equ	3751	;# 
  4586   000EA8                     T3GPPS          equ	3752	;# 
  4587   000EA9                     T5CKIPPS        equ	3753	;# 
  4588   000EAA                     T5GPPS          equ	3754	;# 
  4589   000EAB                     T2INPPS         equ	3755	;# 
  4590   000EAC                     T4INPPS         equ	3756	;# 
  4591   000EAD                     T6INPPS         equ	3757	;# 
  4592   000EAE                     ADACTPPS        equ	3758	;# 
  4593   000EAF                     CCP1PPS         equ	3759	;# 
  4594   000EB0                     CCP2PPS         equ	3760	;# 
  4595   000EB1                     CWG1PPS         equ	3761	;# 
  4596   000EB1                     CWGINPPS        equ	3761	;# 
  4597   000EB2                     MDCARLPPS       equ	3762	;# 
  4598   000EB3                     MDCARHPPS       equ	3763	;# 
  4599   000EB4                     MDSRCPPS        equ	3764	;# 
  4600   000EB5                     RX1PPS          equ	3765	;# 
  4601   000EB5                     RXPPS           equ	3765	;# 
  4602   000EB6                     CK1PPS          equ	3766	;# 
  4603   000EB6                     TX1PPS          equ	3766	;# 
  4604   000EB6                     CKPPS           equ	3766	;# 
  4605   000EB6                     TXPPS           equ	3766	;# 
  4606   000EB7                     SSP1CLKPPS      equ	3767	;# 
  4607   000EB7                     SSPCLKPPS       equ	3767	;# 
  4608   000EB8                     SSP1DATPPS      equ	3768	;# 
  4609   000EB8                     SSPDATPPS       equ	3768	;# 
  4610   000EB9                     SSP1SSPPS       equ	3769	;# 
  4611   000EB9                     SSPSSPPS        equ	3769	;# 
  4612   000EBA                     IPR0            equ	3770	;# 
  4613   000EBB                     IPR1            equ	3771	;# 
  4614   000EBC                     IPR2            equ	3772	;# 
  4615   000EBD                     IPR3            equ	3773	;# 
  4616   000EBE                     IPR4            equ	3774	;# 
  4617   000EBF                     IPR5            equ	3775	;# 
  4618   000EC0                     IPR6            equ	3776	;# 
  4619   000EC1                     IPR7            equ	3777	;# 
  4620   000EC2                     PIE0            equ	3778	;# 
  4621   000EC3                     PIE1            equ	3779	;# 
  4622   000EC4                     PIE2            equ	3780	;# 
  4623   000EC5                     PIE3            equ	3781	;# 
  4624   000EC6                     PIE4            equ	3782	;# 
  4625   000EC7                     PIE5            equ	3783	;# 
  4626   000EC8                     PIE6            equ	3784	;# 
  4627   000EC9                     PIE7            equ	3785	;# 
  4628   000ECA                     PIR0            equ	3786	;# 
  4629   000ECB                     PIR1            equ	3787	;# 
  4630   000ECC                     PIR2            equ	3788	;# 
  4631   000ECD                     PIR3            equ	3789	;# 
  4632   000ECE                     PIR4            equ	3790	;# 
  4633   000ECF                     PIR5            equ	3791	;# 
  4634   000ED0                     PIR6            equ	3792	;# 
  4635   000ED1                     PIR7            equ	3793	;# 
  4636   000ED2                     WDTCON0         equ	3794	;# 
  4637   000ED3                     WDTCON1         equ	3795	;# 
  4638   000ED4                     WDTPSL          equ	3796	;# 
  4639   000ED5                     WDTPSH          equ	3797	;# 
  4640   000ED6                     WDTTMR          equ	3798	;# 
  4641   000ED7                     CPUDOZE         equ	3799	;# 
  4642   000ED8                     OSCCON1         equ	3800	;# 
  4643   000ED9                     OSCCON2         equ	3801	;# 
  4644   000EDA                     OSCCON3         equ	3802	;# 
  4645   000EDB                     OSCSTAT         equ	3803	;# 
  4646   000EDB                     OSCSTAT1        equ	3803	;# 
  4647   000EDC                     OSCEN           equ	3804	;# 
  4648   000EDD                     OSCTUNE         equ	3805	;# 
  4649   000EDE                     OSCFRQ          equ	3806	;# 
  4650   000EE0                     BORCON          equ	3808	;# 
  4651   000EE1                     PMD0            equ	3809	;# 
  4652   000EE2                     PMD1            equ	3810	;# 
  4653   000EE3                     PMD2            equ	3811	;# 
  4654   000EE4                     PMD3            equ	3812	;# 
  4655   000EE5                     PMD4            equ	3813	;# 
  4656   000EE6                     PMD5            equ	3814	;# 
  4657   000EE7                     RA0PPS          equ	3815	;# 
  4658   000EE8                     RA1PPS          equ	3816	;# 
  4659   000EE9                     RA2PPS          equ	3817	;# 
  4660   000EEA                     RA3PPS          equ	3818	;# 
  4661   000EEB                     RA4PPS          equ	3819	;# 
  4662   000EEC                     RA5PPS          equ	3820	;# 
  4663   000EED                     RA6PPS          equ	3821	;# 
  4664   000EEE                     RA7PPS          equ	3822	;# 
  4665   000EEF                     RB0PPS          equ	3823	;# 
  4666   000EF0                     RB1PPS          equ	3824	;# 
  4667   000EF1                     RB2PPS          equ	3825	;# 
  4668   000EF2                     RB3PPS          equ	3826	;# 
  4669   000EF3                     RB4PPS          equ	3827	;# 
  4670   000EF4                     RB5PPS          equ	3828	;# 
  4671   000EF5                     RB6PPS          equ	3829	;# 
  4672   000EF6                     RB7PPS          equ	3830	;# 
  4673   000EF7                     RC0PPS          equ	3831	;# 
  4674   000EF8                     RC1PPS          equ	3832	;# 
  4675   000EF9                     RC2PPS          equ	3833	;# 
  4676   000EFA                     RC3PPS          equ	3834	;# 
  4677   000EFB                     RC4PPS          equ	3835	;# 
  4678   000EFC                     RC5PPS          equ	3836	;# 
  4679   000EFD                     RC6PPS          equ	3837	;# 
  4680   000EFE                     RC7PPS          equ	3838	;# 
  4681   000F0A                     IOCAF           equ	3850	;# 
  4682   000F0B                     IOCAN           equ	3851	;# 
  4683   000F0C                     IOCAP           equ	3852	;# 
  4684   000F0D                     INLVLA          equ	3853	;# 
  4685   000F0E                     SLRCONA         equ	3854	;# 
  4686   000F0F                     ODCONA          equ	3855	;# 
  4687   000F10                     WPUA            equ	3856	;# 
  4688   000F11                     ANSELA          equ	3857	;# 
  4689   000F12                     IOCBF           equ	3858	;# 
  4690   000F13                     IOCBN           equ	3859	;# 
  4691   000F14                     IOCBP           equ	3860	;# 
  4692   000F15                     INLVLB          equ	3861	;# 
  4693   000F16                     SLRCONB         equ	3862	;# 
  4694   000F17                     ODCONB          equ	3863	;# 
  4695   000F18                     WPUB            equ	3864	;# 
  4696   000F19                     ANSELB          equ	3865	;# 
  4697   000F1A                     IOCCF           equ	3866	;# 
  4698   000F1B                     IOCCN           equ	3867	;# 
  4699   000F1C                     IOCCP           equ	3868	;# 
  4700   000F1D                     INLVLC          equ	3869	;# 
  4701   000F1E                     SLRCONC         equ	3870	;# 
  4702   000F1F                     ODCONC          equ	3871	;# 
  4703   000F20                     WPUC            equ	3872	;# 
  4704   000F21                     ANSELC          equ	3873	;# 
  4705   000F27                     IOCEF           equ	3879	;# 
  4706   000F28                     IOCEN           equ	3880	;# 
  4707   000F29                     IOCEP           equ	3881	;# 
  4708   000F2A                     INLVLE          equ	3882	;# 
  4709   000F2D                     WPUE            equ	3885	;# 
  4710   000F2F                     HLVDCON0        equ	3887	;# 
  4711   000F30                     HLVDCON1        equ	3888	;# 
  4712   000F31                     FVRCON          equ	3889	;# 
  4713   000F32                     ZCDCON          equ	3890	;# 
  4714   000F33                     DAC1CON0        equ	3891	;# 
  4715   000F34                     DAC1CON1        equ	3892	;# 
  4716   000F35                     CM2CON0         equ	3893	;# 
  4717   000F36                     CM2CON1         equ	3894	;# 
  4718   000F37                     CM2NCH          equ	3895	;# 
  4719   000F38                     CM2PCH          equ	3896	;# 
  4720   000F39                     CM1CON0         equ	3897	;# 
  4721   000F3A                     CM1CON1         equ	3898	;# 
  4722   000F3B                     CM1NCH          equ	3899	;# 
  4723   000F3C                     CM1PCH          equ	3900	;# 
  4724   000F3D                     CMOUT           equ	3901	;# 
  4725   000F3E                     CLKRCON         equ	3902	;# 
  4726   000F3F                     CLKRCLK         equ	3903	;# 
  4727   000F40                     CWG1CLK         equ	3904	;# 
  4728   000F40                     CWG1CLKCON      equ	3904	;# 
  4729   000F41                     CWG1ISM         equ	3905	;# 
  4730   000F42                     CWG1DBR         equ	3906	;# 
  4731   000F43                     CWG1DBF         equ	3907	;# 
  4732   000F44                     CWG1CON0        equ	3908	;# 
  4733   000F45                     CWG1CON1        equ	3909	;# 
  4734   000F46                     CWG1AS0         equ	3910	;# 
  4735   000F47                     CWG1AS1         equ	3911	;# 
  4736   000F48                     CWG1STR         equ	3912	;# 
  4737   000F49                     SCANLADR        equ	3913	;# 
  4738   000F49                     SCANLADRL       equ	3913	;# 
  4739   000F4A                     SCANLADRH       equ	3914	;# 
  4740   000F4B                     SCANLADRU       equ	3915	;# 
  4741   000F4C                     SCANHADR        equ	3916	;# 
  4742   000F4C                     SCANHADRL       equ	3916	;# 
  4743   000F4D                     SCANHADRH       equ	3917	;# 
  4744   000F4E                     SCANHADRU       equ	3918	;# 
  4745   000F4F                     SCANCON0        equ	3919	;# 
  4746   000F50                     SCANTRIG        equ	3920	;# 
  4747   000F51                     MDCON0          equ	3921	;# 
  4748   000F52                     MDCON1          equ	3922	;# 
  4749   000F53                     MDSRC           equ	3923	;# 
  4750   000F54                     MDCARL          equ	3924	;# 
  4751   000F55                     MDCARH          equ	3925	;# 
  4752   000F56                     ADACT           equ	3926	;# 
  4753   000F57                     ADCLK           equ	3927	;# 
  4754   000F58                     ADREF           equ	3928	;# 
  4755   000F59                     ADCON1          equ	3929	;# 
  4756   000F5A                     ADCON2          equ	3930	;# 
  4757   000F5B                     ADCON3          equ	3931	;# 
  4758   000F5C                     ADACQ           equ	3932	;# 
  4759   000F5D                     ADCAP           equ	3933	;# 
  4760   000F5E                     ADPRE           equ	3934	;# 
  4761   000F5F                     ADPCH           equ	3935	;# 
  4762   000F60                     ADCON0          equ	3936	;# 
  4763   000F61                     ADPREV          equ	3937	;# 
  4764   000F61                     ADPREVL         equ	3937	;# 
  4765   000F62                     ADPREVH         equ	3938	;# 
  4766   000F63                     ADRES           equ	3939	;# 
  4767   000F63                     ADRESL          equ	3939	;# 
  4768   000F64                     ADRESH          equ	3940	;# 
  4769   000F65                     ADSTAT          equ	3941	;# 
  4770   000F66                     ADRPT           equ	3942	;# 
  4771   000F67                     ADCNT           equ	3943	;# 
  4772   000F68                     ADSTPT          equ	3944	;# 
  4773   000F68                     ADSTPTL         equ	3944	;# 
  4774   000F69                     ADSTPTH         equ	3945	;# 
  4775   000F6A                     ADLTH           equ	3946	;# 
  4776   000F6A                     ADLTHL          equ	3946	;# 
  4777   000F6B                     ADLTHH          equ	3947	;# 
  4778   000F6C                     ADUTH           equ	3948	;# 
  4779   000F6C                     ADUTHL          equ	3948	;# 
  4780   000F6D                     ADUTHH          equ	3949	;# 
  4781   000F6E                     ADERR           equ	3950	;# 
  4782   000F6E                     ADERRL          equ	3950	;# 
  4783   000F6F                     ADERRH          equ	3951	;# 
  4784   000F70                     ADACC           equ	3952	;# 
  4785   000F70                     ADACCL          equ	3952	;# 
  4786   000F71                     ADACCH          equ	3953	;# 
  4787   000F72                     ADFLTR          equ	3954	;# 
  4788   000F72                     ADFLTRL         equ	3954	;# 
  4789   000F73                     ADFLTRH         equ	3955	;# 
  4790   000F74                     CRCDATA         equ	3956	;# 
  4791   000F74                     CRCDATL         equ	3956	;# 
  4792   000F75                     CRCDATH         equ	3957	;# 
  4793   000F76                     CRCACC          equ	3958	;# 
  4794   000F76                     CRCACCL         equ	3958	;# 
  4795   000F77                     CRCACCH         equ	3959	;# 
  4796   000F78                     CRCSHFT         equ	3960	;# 
  4797   000F78                     CRCSHIFTL       equ	3960	;# 
  4798   000F79                     CRCSHIFTH       equ	3961	;# 
  4799   000F7A                     CRCXOR          equ	3962	;# 
  4800   000F7A                     CRCXORL         equ	3962	;# 
  4801   000F7B                     CRCXORH         equ	3963	;# 
  4802   000F7C                     CRCCON0         equ	3964	;# 
  4803   000F7D                     CRCCON1         equ	3965	;# 
  4804   000F7E                     NVMADR          equ	3966	;# 
  4805   000F7E                     NVMADRL         equ	3966	;# 
  4806   000F7F                     NVMADRH         equ	3967	;# 
  4807   000F80                     NVMDAT          equ	3968	;# 
  4808   000F81                     NVMCON1         equ	3969	;# 
  4809   000F82                     NVMCON2         equ	3970	;# 
  4810   000F83                     LATA            equ	3971	;# 
  4811   000F84                     LATB            equ	3972	;# 
  4812   000F85                     LATC            equ	3973	;# 
  4813   000F88                     TRISA           equ	3976	;# 
  4814   000F88                     DDRA            equ	3976	;# 
  4815   000F89                     TRISB           equ	3977	;# 
  4816   000F89                     DDRB            equ	3977	;# 
  4817   000F8A                     TRISC           equ	3978	;# 
  4818   000F8A                     DDRC            equ	3978	;# 
  4819   000F8D                     PORTA           equ	3981	;# 
  4820   000F8E                     PORTB           equ	3982	;# 
  4821   000F8F                     PORTC           equ	3983	;# 
  4822   000F91                     PORTE           equ	3985	;# 
  4823   000F92                     SSP1BUF         equ	3986	;# 
  4824   000F93                     SSP1ADD         equ	3987	;# 
  4825   000F94                     SSP1MSK         equ	3988	;# 
  4826   000F95                     SSP1STAT        equ	3989	;# 
  4827   000F96                     SSP1CON1        equ	3990	;# 
  4828   000F97                     SSP1CON2        equ	3991	;# 
  4829   000F98                     SSP1CON3        equ	3992	;# 
  4830   000F99                     RC1REG          equ	3993	;# 
  4831   000F99                     RCREG           equ	3993	;# 
  4832   000F99                     RCREG1          equ	3993	;# 
  4833   000F9A                     TX1REG          equ	3994	;# 
  4834   000F9A                     TXREG1          equ	3994	;# 
  4835   000F9A                     TXREG           equ	3994	;# 
  4836   000F9B                     SP1BRG          equ	3995	;# 
  4837   000F9B                     SP1BRGL         equ	3995	;# 
  4838   000F9B                     SPBRG           equ	3995	;# 
  4839   000F9B                     SPBRG1          equ	3995	;# 
  4840   000F9B                     SPBRGL          equ	3995	;# 
  4841   000F9C                     SP1BRGH         equ	3996	;# 
  4842   000F9C                     SPBRGH          equ	3996	;# 
  4843   000F9C                     SPBRGH1         equ	3996	;# 
  4844   000F9D                     RC1STA          equ	3997	;# 
  4845   000F9D                     RCSTA1          equ	3997	;# 
  4846   000F9D                     RCSTA           equ	3997	;# 
  4847   000F9E                     TX1STA          equ	3998	;# 
  4848   000F9E                     TXSTA1          equ	3998	;# 
  4849   000F9E                     TXSTA           equ	3998	;# 
  4850   000F9F                     BAUD1CON        equ	3999	;# 
  4851   000F9F                     BAUDCON1        equ	3999	;# 
  4852   000F9F                     BAUDCTL1        equ	3999	;# 
  4853   000F9F                     BAUDCON         equ	3999	;# 
  4854   000F9F                     BAUDCTL         equ	3999	;# 
  4855   000FA0                     PWM4DC          equ	4000	;# 
  4856   000FA0                     PWM4DCL         equ	4000	;# 
  4857   000FA1                     PWM4DCH         equ	4001	;# 
  4858   000FA2                     PWM4CON         equ	4002	;# 
  4859   000FA3                     PWM3DC          equ	4003	;# 
  4860   000FA3                     PWM3DCL         equ	4003	;# 
  4861   000FA4                     PWM3DCH         equ	4004	;# 
  4862   000FA5                     PWM3CON         equ	4005	;# 
  4863   000FA6                     CCPR2           equ	4006	;# 
  4864   000FA6                     CCPR2L          equ	4006	;# 
  4865   000FA7                     CCPR2H          equ	4007	;# 
  4866   000FA8                     CCP2CON         equ	4008	;# 
  4867   000FA9                     CCP2CAP         equ	4009	;# 
  4868   000FAA                     CCPR1           equ	4010	;# 
  4869   000FAA                     CCPR1L          equ	4010	;# 
  4870   000FAB                     CCPR1H          equ	4011	;# 
  4871   000FAC                     CCP1CON         equ	4012	;# 
  4872   000FAD                     CCP1CAP         equ	4013	;# 
  4873   000FAE                     CCPTMRS         equ	4014	;# 
  4874   000FAF                     T6TMR           equ	4015	;# 
  4875   000FAF                     TMR6            equ	4015	;# 
  4876   000FB0                     T6PR            equ	4016	;# 
  4877   000FB0                     PR6             equ	4016	;# 
  4878   000FB1                     T6CON           equ	4017	;# 
  4879   000FB2                     T6HLT           equ	4018	;# 
  4880   000FB3                     T6CLKCON        equ	4019	;# 
  4881   000FB3                     T6CLK           equ	4019	;# 
  4882   000FB4                     T6RST           equ	4020	;# 
  4883   000FB5                     T4TMR           equ	4021	;# 
  4884   000FB5                     TMR4            equ	4021	;# 
  4885   000FB6                     T4PR            equ	4022	;# 
  4886   000FB6                     PR4             equ	4022	;# 
  4887   000FB7                     T4CON           equ	4023	;# 
  4888   000FB8                     T4HLT           equ	4024	;# 
  4889   000FB9                     T4CLKCON        equ	4025	;# 
  4890   000FB9                     T4CLK           equ	4025	;# 
  4891   000FBA                     T4RST           equ	4026	;# 
  4892   000FBB                     T2TMR           equ	4027	;# 
  4893   000FBB                     TMR2            equ	4027	;# 
  4894   000FBC                     T2PR            equ	4028	;# 
  4895   000FBC                     PR2             equ	4028	;# 
  4896   000FBD                     T2CON           equ	4029	;# 
  4897   000FBE                     T2HLT           equ	4030	;# 
  4898   000FBF                     T2CLKCON        equ	4031	;# 
  4899   000FBF                     T2CLK           equ	4031	;# 
  4900   000FC0                     T2RST           equ	4032	;# 
  4901   000FC1                     TMR5            equ	4033	;# 
  4902   000FC1                     TMR5L           equ	4033	;# 
  4903   000FC2                     TMR5H           equ	4034	;# 
  4904   000FC3                     T5CON           equ	4035	;# 
  4905   000FC4                     T5GCON          equ	4036	;# 
  4906   000FC4                     PR5             equ	4036	;# 
  4907   000FC5                     T5GATE          equ	4037	;# 
  4908   000FC5                     TMR5GATE        equ	4037	;# 
  4909   000FC6                     T5CLK           equ	4038	;# 
  4910   000FC6                     TMR5CLK         equ	4038	;# 
  4911   000FC7                     TMR3            equ	4039	;# 
  4912   000FC7                     TMR3L           equ	4039	;# 
  4913   000FC8                     TMR3H           equ	4040	;# 
  4914   000FC9                     T3CON           equ	4041	;# 
  4915   000FCA                     T3GCON          equ	4042	;# 
  4916   000FCA                     PR3             equ	4042	;# 
  4917   000FCB                     T3GATE          equ	4043	;# 
  4918   000FCB                     TMR3GATE        equ	4043	;# 
  4919   000FCC                     T3CLK           equ	4044	;# 
  4920   000FCC                     TMR3CLK         equ	4044	;# 
  4921   000FCD                     TMR1            equ	4045	;# 
  4922   000FCD                     TMR1L           equ	4045	;# 
  4923   000FCE                     TMR1H           equ	4046	;# 
  4924   000FCF                     T1CON           equ	4047	;# 
  4925   000FD0                     T1GCON          equ	4048	;# 
  4926   000FD0                     PR1             equ	4048	;# 
  4927   000FD1                     T1GATE          equ	4049	;# 
  4928   000FD1                     TMR1GATE        equ	4049	;# 
  4929   000FD2                     T1CLK           equ	4050	;# 
  4930   000FD2                     TMR1CLK         equ	4050	;# 
  4931   000FD3                     TMR0L           equ	4051	;# 
  4932   000FD3                     TMR0            equ	4051	;# 
  4933   000FD4                     TMR0H           equ	4052	;# 
  4934   000FD4                     PR0             equ	4052	;# 
  4935   000FD5                     T0CON0          equ	4053	;# 
  4936   000FD6                     T0CON1          equ	4054	;# 
  4937   000FD7                     PCON0           equ	4055	;# 
  4938   000FD8                     STATUS          equ	4056	;# 
  4939   000FD9                     FSR2            equ	4057	;# 
  4940   000FD9                     FSR2L           equ	4057	;# 
  4941   000FDA                     FSR2H           equ	4058	;# 
  4942   000FDB                     PLUSW2          equ	4059	;# 
  4943   000FDC                     PREINC2         equ	4060	;# 
  4944   000FDD                     POSTDEC2        equ	4061	;# 
  4945   000FDE                     POSTINC2        equ	4062	;# 
  4946   000FDF                     INDF2           equ	4063	;# 
  4947   000FE0                     BSR             equ	4064	;# 
  4948   000FE1                     FSR1            equ	4065	;# 
  4949   000FE1                     FSR1L           equ	4065	;# 
  4950   000FE2                     FSR1H           equ	4066	;# 
  4951   000FE3                     PLUSW1          equ	4067	;# 
  4952   000FE4                     PREINC1         equ	4068	;# 
  4953   000FE5                     POSTDEC1        equ	4069	;# 
  4954   000FE6                     POSTINC1        equ	4070	;# 
  4955   000FE7                     INDF1           equ	4071	;# 
  4956   000FE8                     WREG            equ	4072	;# 
  4957   000FE9                     FSR0            equ	4073	;# 
  4958   000FE9                     FSR0L           equ	4073	;# 
  4959   000FEA                     FSR0H           equ	4074	;# 
  4960   000FEB                     PLUSW0          equ	4075	;# 
  4961   000FEC                     PREINC0         equ	4076	;# 
  4962   000FED                     POSTDEC0        equ	4077	;# 
  4963   000FEE                     POSTINC0        equ	4078	;# 
  4964   000FEF                     INDF0           equ	4079	;# 
  4965   000FF2                     INTCON          equ	4082	;# 
  4966   000FF3                     PROD            equ	4083	;# 
  4967   000FF3                     PRODL           equ	4083	;# 
  4968   000FF4                     PRODH           equ	4084	;# 
  4969   000FF5                     TABLAT          equ	4085	;# 
  4970   000FF6                     TBLPTR          equ	4086	;# 
  4971   000FF6                     TBLPTRL         equ	4086	;# 
  4972   000FF7                     TBLPTRH         equ	4087	;# 
  4973   000FF8                     TBLPTRU         equ	4088	;# 
  4974   000FF9                     PCLAT           equ	4089	;# 
  4975   000FF9                     PC              equ	4089	;# 
  4976   000FF9                     PCL             equ	4089	;# 
  4977   000FFA                     PCLATH          equ	4090	;# 
  4978   000FFB                     PCLATU          equ	4091	;# 
  4979   000FFC                     STKPTR          equ	4092	;# 
  4980   000FFD                     TOS             equ	4093	;# 
  4981   000FFD                     TOSL            equ	4093	;# 
  4982   000FFE                     TOSH            equ	4094	;# 
  4983   000FFF                     TOSU            equ	4095	;# 
  4984   000E8D                     RX2PPS          equ	3725	;# 
  4985   000E8E                     CK2PPS          equ	3726	;# 
  4986   000E8E                     TX2PPS          equ	3726	;# 
  4987   000E8F                     SSP2CLKPPS      equ	3727	;# 
  4988   000E90                     SSP2DATPPS      equ	3728	;# 
  4989   000E91                     SSP2SSPPS       equ	3729	;# 
  4990   000E92                     SSP2BUF         equ	3730	;# 
  4991   000E93                     SSP2ADD         equ	3731	;# 
  4992   000E94                     SSP2MSK         equ	3732	;# 
  4993   000E95                     SSP2STAT        equ	3733	;# 
  4994   000E96                     SSP2CON1        equ	3734	;# 
  4995   000E97                     SSP2CON2        equ	3735	;# 
  4996   000E98                     SSP2CON3        equ	3736	;# 
  4997   000E99                     RC2REG          equ	3737	;# 
  4998   000E99                     RCREG2          equ	3737	;# 
  4999   000E9A                     TX2REG          equ	3738	;# 
  5000   000E9A                     TXREG2          equ	3738	;# 
  5001   000E9B                     SP2BRG          equ	3739	;# 
  5002   000E9B                     SP2BRGL         equ	3739	;# 
  5003   000E9B                     SPBRG2          equ	3739	;# 
  5004   000E9C                     SP2BRGH         equ	3740	;# 
  5005   000E9C                     SPBRGH2         equ	3740	;# 
  5006   000E9D                     RC2STA          equ	3741	;# 
  5007   000E9D                     RCSTA2          equ	3741	;# 
  5008   000E9E                     TX2STA          equ	3742	;# 
  5009   000E9E                     TXSTA2          equ	3742	;# 
  5010   000E9F                     BAUD2CON        equ	3743	;# 
  5011   000E9F                     BAUDCON2        equ	3743	;# 
  5012   000E9F                     BAUDCTL2        equ	3743	;# 
  5013   000EA0                     PPSLOCK         equ	3744	;# 
  5014   000EA1                     INT0PPS         equ	3745	;# 
  5015   000EA2                     INT1PPS         equ	3746	;# 
  5016   000EA3                     INT2PPS         equ	3747	;# 
  5017   000EA4                     T0CKIPPS        equ	3748	;# 
  5018   000EA5                     T1CKIPPS        equ	3749	;# 
  5019   000EA6                     T1GPPS          equ	3750	;# 
  5020   000EA7                     T3CKIPPS        equ	3751	;# 
  5021   000EA8                     T3GPPS          equ	3752	;# 
  5022   000EA9                     T5CKIPPS        equ	3753	;# 
  5023   000EAA                     T5GPPS          equ	3754	;# 
  5024   000EAB                     T2INPPS         equ	3755	;# 
  5025   000EAC                     T4INPPS         equ	3756	;# 
  5026   000EAD                     T6INPPS         equ	3757	;# 
  5027   000EAE                     ADACTPPS        equ	3758	;# 
  5028   000EAF                     CCP1PPS         equ	3759	;# 
  5029   000EB0                     CCP2PPS         equ	3760	;# 
  5030   000EB1                     CWG1PPS         equ	3761	;# 
  5031   000EB1                     CWGINPPS        equ	3761	;# 
  5032   000EB2                     MDCARLPPS       equ	3762	;# 
  5033   000EB3                     MDCARHPPS       equ	3763	;# 
  5034   000EB4                     MDSRCPPS        equ	3764	;# 
  5035   000EB5                     RX1PPS          equ	3765	;# 
  5036   000EB5                     RXPPS           equ	3765	;# 
  5037   000EB6                     CK1PPS          equ	3766	;# 
  5038   000EB6                     TX1PPS          equ	3766	;# 
  5039   000EB6                     CKPPS           equ	3766	;# 
  5040   000EB6                     TXPPS           equ	3766	;# 
  5041   000EB7                     SSP1CLKPPS      equ	3767	;# 
  5042   000EB7                     SSPCLKPPS       equ	3767	;# 
  5043   000EB8                     SSP1DATPPS      equ	3768	;# 
  5044   000EB8                     SSPDATPPS       equ	3768	;# 
  5045   000EB9                     SSP1SSPPS       equ	3769	;# 
  5046   000EB9                     SSPSSPPS        equ	3769	;# 
  5047   000EBA                     IPR0            equ	3770	;# 
  5048   000EBB                     IPR1            equ	3771	;# 
  5049   000EBC                     IPR2            equ	3772	;# 
  5050   000EBD                     IPR3            equ	3773	;# 
  5051   000EBE                     IPR4            equ	3774	;# 
  5052   000EBF                     IPR5            equ	3775	;# 
  5053   000EC0                     IPR6            equ	3776	;# 
  5054   000EC1                     IPR7            equ	3777	;# 
  5055   000EC2                     PIE0            equ	3778	;# 
  5056   000EC3                     PIE1            equ	3779	;# 
  5057   000EC4                     PIE2            equ	3780	;# 
  5058   000EC5                     PIE3            equ	3781	;# 
  5059   000EC6                     PIE4            equ	3782	;# 
  5060   000EC7                     PIE5            equ	3783	;# 
  5061   000EC8                     PIE6            equ	3784	;# 
  5062   000EC9                     PIE7            equ	3785	;# 
  5063   000ECA                     PIR0            equ	3786	;# 
  5064   000ECB                     PIR1            equ	3787	;# 
  5065   000ECC                     PIR2            equ	3788	;# 
  5066   000ECD                     PIR3            equ	3789	;# 
  5067   000ECE                     PIR4            equ	3790	;# 
  5068   000ECF                     PIR5            equ	3791	;# 
  5069   000ED0                     PIR6            equ	3792	;# 
  5070   000ED1                     PIR7            equ	3793	;# 
  5071   000ED2                     WDTCON0         equ	3794	;# 
  5072   000ED3                     WDTCON1         equ	3795	;# 
  5073   000ED4                     WDTPSL          equ	3796	;# 
  5074   000ED5                     WDTPSH          equ	3797	;# 
  5075   000ED6                     WDTTMR          equ	3798	;# 
  5076   000ED7                     CPUDOZE         equ	3799	;# 
  5077   000ED8                     OSCCON1         equ	3800	;# 
  5078   000ED9                     OSCCON2         equ	3801	;# 
  5079   000EDA                     OSCCON3         equ	3802	;# 
  5080   000EDB                     OSCSTAT         equ	3803	;# 
  5081   000EDB                     OSCSTAT1        equ	3803	;# 
  5082   000EDC                     OSCEN           equ	3804	;# 
  5083   000EDD                     OSCTUNE         equ	3805	;# 
  5084   000EDE                     OSCFRQ          equ	3806	;# 
  5085   000EE0                     BORCON          equ	3808	;# 
  5086   000EE1                     PMD0            equ	3809	;# 
  5087   000EE2                     PMD1            equ	3810	;# 
  5088   000EE3                     PMD2            equ	3811	;# 
  5089   000EE4                     PMD3            equ	3812	;# 
  5090   000EE5                     PMD4            equ	3813	;# 
  5091   000EE6                     PMD5            equ	3814	;# 
  5092   000EE7                     RA0PPS          equ	3815	;# 
  5093   000EE8                     RA1PPS          equ	3816	;# 
  5094   000EE9                     RA2PPS          equ	3817	;# 
  5095   000EEA                     RA3PPS          equ	3818	;# 
  5096   000EEB                     RA4PPS          equ	3819	;# 
  5097   000EEC                     RA5PPS          equ	3820	;# 
  5098   000EED                     RA6PPS          equ	3821	;# 
  5099   000EEE                     RA7PPS          equ	3822	;# 
  5100   000EEF                     RB0PPS          equ	3823	;# 
  5101   000EF0                     RB1PPS          equ	3824	;# 
  5102   000EF1                     RB2PPS          equ	3825	;# 
  5103   000EF2                     RB3PPS          equ	3826	;# 
  5104   000EF3                     RB4PPS          equ	3827	;# 
  5105   000EF4                     RB5PPS          equ	3828	;# 
  5106   000EF5                     RB6PPS          equ	3829	;# 
  5107   000EF6                     RB7PPS          equ	3830	;# 
  5108   000EF7                     RC0PPS          equ	3831	;# 
  5109   000EF8                     RC1PPS          equ	3832	;# 
  5110   000EF9                     RC2PPS          equ	3833	;# 
  5111   000EFA                     RC3PPS          equ	3834	;# 
  5112   000EFB                     RC4PPS          equ	3835	;# 
  5113   000EFC                     RC5PPS          equ	3836	;# 
  5114   000EFD                     RC6PPS          equ	3837	;# 
  5115   000EFE                     RC7PPS          equ	3838	;# 
  5116   000F0A                     IOCAF           equ	3850	;# 
  5117   000F0B                     IOCAN           equ	3851	;# 
  5118   000F0C                     IOCAP           equ	3852	;# 
  5119   000F0D                     INLVLA          equ	3853	;# 
  5120   000F0E                     SLRCONA         equ	3854	;# 
  5121   000F0F                     ODCONA          equ	3855	;# 
  5122   000F10                     WPUA            equ	3856	;# 
  5123   000F11                     ANSELA          equ	3857	;# 
  5124   000F12                     IOCBF           equ	3858	;# 
  5125   000F13                     IOCBN           equ	3859	;# 
  5126   000F14                     IOCBP           equ	3860	;# 
  5127   000F15                     INLVLB          equ	3861	;# 
  5128   000F16                     SLRCONB         equ	3862	;# 
  5129   000F17                     ODCONB          equ	3863	;# 
  5130   000F18                     WPUB            equ	3864	;# 
  5131   000F19                     ANSELB          equ	3865	;# 
  5132   000F1A                     IOCCF           equ	3866	;# 
  5133   000F1B                     IOCCN           equ	3867	;# 
  5134   000F1C                     IOCCP           equ	3868	;# 
  5135   000F1D                     INLVLC          equ	3869	;# 
  5136   000F1E                     SLRCONC         equ	3870	;# 
  5137   000F1F                     ODCONC          equ	3871	;# 
  5138   000F20                     WPUC            equ	3872	;# 
  5139   000F21                     ANSELC          equ	3873	;# 
  5140   000F27                     IOCEF           equ	3879	;# 
  5141   000F28                     IOCEN           equ	3880	;# 
  5142   000F29                     IOCEP           equ	3881	;# 
  5143   000F2A                     INLVLE          equ	3882	;# 
  5144   000F2D                     WPUE            equ	3885	;# 
  5145   000F2F                     HLVDCON0        equ	3887	;# 
  5146   000F30                     HLVDCON1        equ	3888	;# 
  5147   000F31                     FVRCON          equ	3889	;# 
  5148   000F32                     ZCDCON          equ	3890	;# 
  5149   000F33                     DAC1CON0        equ	3891	;# 
  5150   000F34                     DAC1CON1        equ	3892	;# 
  5151   000F35                     CM2CON0         equ	3893	;# 
  5152   000F36                     CM2CON1         equ	3894	;# 
  5153   000F37                     CM2NCH          equ	3895	;# 
  5154   000F38                     CM2PCH          equ	3896	;# 
  5155   000F39                     CM1CON0         equ	3897	;# 
  5156   000F3A                     CM1CON1         equ	3898	;# 
  5157   000F3B                     CM1NCH          equ	3899	;# 
  5158   000F3C                     CM1PCH          equ	3900	;# 
  5159   000F3D                     CMOUT           equ	3901	;# 
  5160   000F3E                     CLKRCON         equ	3902	;# 
  5161   000F3F                     CLKRCLK         equ	3903	;# 
  5162   000F40                     CWG1CLK         equ	3904	;# 
  5163   000F40                     CWG1CLKCON      equ	3904	;# 
  5164   000F41                     CWG1ISM         equ	3905	;# 
  5165   000F42                     CWG1DBR         equ	3906	;# 
  5166   000F43                     CWG1DBF         equ	3907	;# 
  5167   000F44                     CWG1CON0        equ	3908	;# 
  5168   000F45                     CWG1CON1        equ	3909	;# 
  5169   000F46                     CWG1AS0         equ	3910	;# 
  5170   000F47                     CWG1AS1         equ	3911	;# 
  5171   000F48                     CWG1STR         equ	3912	;# 
  5172   000F49                     SCANLADR        equ	3913	;# 
  5173   000F49                     SCANLADRL       equ	3913	;# 
  5174   000F4A                     SCANLADRH       equ	3914	;# 
  5175   000F4B                     SCANLADRU       equ	3915	;# 
  5176   000F4C                     SCANHADR        equ	3916	;# 
  5177   000F4C                     SCANHADRL       equ	3916	;# 
  5178   000F4D                     SCANHADRH       equ	3917	;# 
  5179   000F4E                     SCANHADRU       equ	3918	;# 
  5180   000F4F                     SCANCON0        equ	3919	;# 
  5181   000F50                     SCANTRIG        equ	3920	;# 
  5182   000F51                     MDCON0          equ	3921	;# 
  5183   000F52                     MDCON1          equ	3922	;# 
  5184   000F53                     MDSRC           equ	3923	;# 
  5185   000F54                     MDCARL          equ	3924	;# 
  5186   000F55                     MDCARH          equ	3925	;# 
  5187   000F56                     ADACT           equ	3926	;# 
  5188   000F57                     ADCLK           equ	3927	;# 
  5189   000F58                     ADREF           equ	3928	;# 
  5190   000F59                     ADCON1          equ	3929	;# 
  5191   000F5A                     ADCON2          equ	3930	;# 
  5192   000F5B                     ADCON3          equ	3931	;# 
  5193   000F5C                     ADACQ           equ	3932	;# 
  5194   000F5D                     ADCAP           equ	3933	;# 
  5195   000F5E                     ADPRE           equ	3934	;# 
  5196   000F5F                     ADPCH           equ	3935	;# 
  5197   000F60                     ADCON0          equ	3936	;# 
  5198   000F61                     ADPREV          equ	3937	;# 
  5199   000F61                     ADPREVL         equ	3937	;# 
  5200   000F62                     ADPREVH         equ	3938	;# 
  5201   000F63                     ADRES           equ	3939	;# 
  5202   000F63                     ADRESL          equ	3939	;# 
  5203   000F64                     ADRESH          equ	3940	;# 
  5204   000F65                     ADSTAT          equ	3941	;# 
  5205   000F66                     ADRPT           equ	3942	;# 
  5206   000F67                     ADCNT           equ	3943	;# 
  5207   000F68                     ADSTPT          equ	3944	;# 
  5208   000F68                     ADSTPTL         equ	3944	;# 
  5209   000F69                     ADSTPTH         equ	3945	;# 
  5210   000F6A                     ADLTH           equ	3946	;# 
  5211   000F6A                     ADLTHL          equ	3946	;# 
  5212   000F6B                     ADLTHH          equ	3947	;# 
  5213   000F6C                     ADUTH           equ	3948	;# 
  5214   000F6C                     ADUTHL          equ	3948	;# 
  5215   000F6D                     ADUTHH          equ	3949	;# 
  5216   000F6E                     ADERR           equ	3950	;# 
  5217   000F6E                     ADERRL          equ	3950	;# 
  5218   000F6F                     ADERRH          equ	3951	;# 
  5219   000F70                     ADACC           equ	3952	;# 
  5220   000F70                     ADACCL          equ	3952	;# 
  5221   000F71                     ADACCH          equ	3953	;# 
  5222   000F72                     ADFLTR          equ	3954	;# 
  5223   000F72                     ADFLTRL         equ	3954	;# 
  5224   000F73                     ADFLTRH         equ	3955	;# 
  5225   000F74                     CRCDATA         equ	3956	;# 
  5226   000F74                     CRCDATL         equ	3956	;# 
  5227   000F75                     CRCDATH         equ	3957	;# 
  5228   000F76                     CRCACC          equ	3958	;# 
  5229   000F76                     CRCACCL         equ	3958	;# 
  5230   000F77                     CRCACCH         equ	3959	;# 
  5231   000F78                     CRCSHFT         equ	3960	;# 
  5232   000F78                     CRCSHIFTL       equ	3960	;# 
  5233   000F79                     CRCSHIFTH       equ	3961	;# 
  5234   000F7A                     CRCXOR          equ	3962	;# 
  5235   000F7A                     CRCXORL         equ	3962	;# 
  5236   000F7B                     CRCXORH         equ	3963	;# 
  5237   000F7C                     CRCCON0         equ	3964	;# 
  5238   000F7D                     CRCCON1         equ	3965	;# 
  5239   000F7E                     NVMADR          equ	3966	;# 
  5240   000F7E                     NVMADRL         equ	3966	;# 
  5241   000F7F                     NVMADRH         equ	3967	;# 
  5242   000F80                     NVMDAT          equ	3968	;# 
  5243   000F81                     NVMCON1         equ	3969	;# 
  5244   000F82                     NVMCON2         equ	3970	;# 
  5245   000F83                     LATA            equ	3971	;# 
  5246   000F84                     LATB            equ	3972	;# 
  5247   000F85                     LATC            equ	3973	;# 
  5248   000F88                     TRISA           equ	3976	;# 
  5249   000F88                     DDRA            equ	3976	;# 
  5250   000F89                     TRISB           equ	3977	;# 
  5251   000F89                     DDRB            equ	3977	;# 
  5252   000F8A                     TRISC           equ	3978	;# 
  5253   000F8A                     DDRC            equ	3978	;# 
  5254   000F8D                     PORTA           equ	3981	;# 
  5255   000F8E                     PORTB           equ	3982	;# 
  5256   000F8F                     PORTC           equ	3983	;# 
  5257   000F91                     PORTE           equ	3985	;# 
  5258   000F92                     SSP1BUF         equ	3986	;# 
  5259   000F93                     SSP1ADD         equ	3987	;# 
  5260   000F94                     SSP1MSK         equ	3988	;# 
  5261   000F95                     SSP1STAT        equ	3989	;# 
  5262   000F96                     SSP1CON1        equ	3990	;# 
  5263   000F97                     SSP1CON2        equ	3991	;# 
  5264   000F98                     SSP1CON3        equ	3992	;# 
  5265   000F99                     RC1REG          equ	3993	;# 
  5266   000F99                     RCREG           equ	3993	;# 
  5267   000F99                     RCREG1          equ	3993	;# 
  5268   000F9A                     TX1REG          equ	3994	;# 
  5269   000F9A                     TXREG1          equ	3994	;# 
  5270   000F9A                     TXREG           equ	3994	;# 
  5271   000F9B                     SP1BRG          equ	3995	;# 
  5272   000F9B                     SP1BRGL         equ	3995	;# 
  5273   000F9B                     SPBRG           equ	3995	;# 
  5274   000F9B                     SPBRG1          equ	3995	;# 
  5275   000F9B                     SPBRGL          equ	3995	;# 
  5276   000F9C                     SP1BRGH         equ	3996	;# 
  5277   000F9C                     SPBRGH          equ	3996	;# 
  5278   000F9C                     SPBRGH1         equ	3996	;# 
  5279   000F9D                     RC1STA          equ	3997	;# 
  5280   000F9D                     RCSTA1          equ	3997	;# 
  5281   000F9D                     RCSTA           equ	3997	;# 
  5282   000F9E                     TX1STA          equ	3998	;# 
  5283   000F9E                     TXSTA1          equ	3998	;# 
  5284   000F9E                     TXSTA           equ	3998	;# 
  5285   000F9F                     BAUD1CON        equ	3999	;# 
  5286   000F9F                     BAUDCON1        equ	3999	;# 
  5287   000F9F                     BAUDCTL1        equ	3999	;# 
  5288   000F9F                     BAUDCON         equ	3999	;# 
  5289   000F9F                     BAUDCTL         equ	3999	;# 
  5290   000FA0                     PWM4DC          equ	4000	;# 
  5291   000FA0                     PWM4DCL         equ	4000	;# 
  5292   000FA1                     PWM4DCH         equ	4001	;# 
  5293   000FA2                     PWM4CON         equ	4002	;# 
  5294   000FA3                     PWM3DC          equ	4003	;# 
  5295   000FA3                     PWM3DCL         equ	4003	;# 
  5296   000FA4                     PWM3DCH         equ	4004	;# 
  5297   000FA5                     PWM3CON         equ	4005	;# 
  5298   000FA6                     CCPR2           equ	4006	;# 
  5299   000FA6                     CCPR2L          equ	4006	;# 
  5300   000FA7                     CCPR2H          equ	4007	;# 
  5301   000FA8                     CCP2CON         equ	4008	;# 
  5302   000FA9                     CCP2CAP         equ	4009	;# 
  5303   000FAA                     CCPR1           equ	4010	;# 
  5304   000FAA                     CCPR1L          equ	4010	;# 
  5305   000FAB                     CCPR1H          equ	4011	;# 
  5306   000FAC                     CCP1CON         equ	4012	;# 
  5307   000FAD                     CCP1CAP         equ	4013	;# 
  5308   000FAE                     CCPTMRS         equ	4014	;# 
  5309   000FAF                     T6TMR           equ	4015	;# 
  5310   000FAF                     TMR6            equ	4015	;# 
  5311   000FB0                     T6PR            equ	4016	;# 
  5312   000FB0                     PR6             equ	4016	;# 
  5313   000FB1                     T6CON           equ	4017	;# 
  5314   000FB2                     T6HLT           equ	4018	;# 
  5315   000FB3                     T6CLKCON        equ	4019	;# 
  5316   000FB3                     T6CLK           equ	4019	;# 
  5317   000FB4                     T6RST           equ	4020	;# 
  5318   000FB5                     T4TMR           equ	4021	;# 
  5319   000FB5                     TMR4            equ	4021	;# 
  5320   000FB6                     T4PR            equ	4022	;# 
  5321   000FB6                     PR4             equ	4022	;# 
  5322   000FB7                     T4CON           equ	4023	;# 
  5323   000FB8                     T4HLT           equ	4024	;# 
  5324   000FB9                     T4CLKCON        equ	4025	;# 
  5325   000FB9                     T4CLK           equ	4025	;# 
  5326   000FBA                     T4RST           equ	4026	;# 
  5327   000FBB                     T2TMR           equ	4027	;# 
  5328   000FBB                     TMR2            equ	4027	;# 
  5329   000FBC                     T2PR            equ	4028	;# 
  5330   000FBC                     PR2             equ	4028	;# 
  5331   000FBD                     T2CON           equ	4029	;# 
  5332   000FBE                     T2HLT           equ	4030	;# 
  5333   000FBF                     T2CLKCON        equ	4031	;# 
  5334   000FBF                     T2CLK           equ	4031	;# 
  5335   000FC0                     T2RST           equ	4032	;# 
  5336   000FC1                     TMR5            equ	4033	;# 
  5337   000FC1                     TMR5L           equ	4033	;# 
  5338   000FC2                     TMR5H           equ	4034	;# 
  5339   000FC3                     T5CON           equ	4035	;# 
  5340   000FC4                     T5GCON          equ	4036	;# 
  5341   000FC4                     PR5             equ	4036	;# 
  5342   000FC5                     T5GATE          equ	4037	;# 
  5343   000FC5                     TMR5GATE        equ	4037	;# 
  5344   000FC6                     T5CLK           equ	4038	;# 
  5345   000FC6                     TMR5CLK         equ	4038	;# 
  5346   000FC7                     TMR3            equ	4039	;# 
  5347   000FC7                     TMR3L           equ	4039	;# 
  5348   000FC8                     TMR3H           equ	4040	;# 
  5349   000FC9                     T3CON           equ	4041	;# 
  5350   000FCA                     T3GCON          equ	4042	;# 
  5351   000FCA                     PR3             equ	4042	;# 
  5352   000FCB                     T3GATE          equ	4043	;# 
  5353   000FCB                     TMR3GATE        equ	4043	;# 
  5354   000FCC                     T3CLK           equ	4044	;# 
  5355   000FCC                     TMR3CLK         equ	4044	;# 
  5356   000FCD                     TMR1            equ	4045	;# 
  5357   000FCD                     TMR1L           equ	4045	;# 
  5358   000FCE                     TMR1H           equ	4046	;# 
  5359   000FCF                     T1CON           equ	4047	;# 
  5360   000FD0                     T1GCON          equ	4048	;# 
  5361   000FD0                     PR1             equ	4048	;# 
  5362   000FD1                     T1GATE          equ	4049	;# 
  5363   000FD1                     TMR1GATE        equ	4049	;# 
  5364   000FD2                     T1CLK           equ	4050	;# 
  5365   000FD2                     TMR1CLK         equ	4050	;# 
  5366   000FD3                     TMR0L           equ	4051	;# 
  5367   000FD3                     TMR0            equ	4051	;# 
  5368   000FD4                     TMR0H           equ	4052	;# 
  5369   000FD4                     PR0             equ	4052	;# 
  5370   000FD5                     T0CON0          equ	4053	;# 
  5371   000FD6                     T0CON1          equ	4054	;# 
  5372   000FD7                     PCON0           equ	4055	;# 
  5373   000FD8                     STATUS          equ	4056	;# 
  5374   000FD9                     FSR2            equ	4057	;# 
  5375   000FD9                     FSR2L           equ	4057	;# 
  5376   000FDA                     FSR2H           equ	4058	;# 
  5377   000FDB                     PLUSW2          equ	4059	;# 
  5378   000FDC                     PREINC2         equ	4060	;# 
  5379   000FDD                     POSTDEC2        equ	4061	;# 
  5380   000FDE                     POSTINC2        equ	4062	;# 
  5381   000FDF                     INDF2           equ	4063	;# 
  5382   000FE0                     BSR             equ	4064	;# 
  5383   000FE1                     FSR1            equ	4065	;# 
  5384   000FE1                     FSR1L           equ	4065	;# 
  5385   000FE2                     FSR1H           equ	4066	;# 
  5386   000FE3                     PLUSW1          equ	4067	;# 
  5387   000FE4                     PREINC1         equ	4068	;# 
  5388   000FE5                     POSTDEC1        equ	4069	;# 
  5389   000FE6                     POSTINC1        equ	4070	;# 
  5390   000FE7                     INDF1           equ	4071	;# 
  5391   000FE8                     WREG            equ	4072	;# 
  5392   000FE9                     FSR0            equ	4073	;# 
  5393   000FE9                     FSR0L           equ	4073	;# 
  5394   000FEA                     FSR0H           equ	4074	;# 
  5395   000FEB                     PLUSW0          equ	4075	;# 
  5396   000FEC                     PREINC0         equ	4076	;# 
  5397   000FED                     POSTDEC0        equ	4077	;# 
  5398   000FEE                     POSTINC0        equ	4078	;# 
  5399   000FEF                     INDF0           equ	4079	;# 
  5400   000FF2                     INTCON          equ	4082	;# 
  5401   000FF3                     PROD            equ	4083	;# 
  5402   000FF3                     PRODL           equ	4083	;# 
  5403   000FF4                     PRODH           equ	4084	;# 
  5404   000FF5                     TABLAT          equ	4085	;# 
  5405   000FF6                     TBLPTR          equ	4086	;# 
  5406   000FF6                     TBLPTRL         equ	4086	;# 
  5407   000FF7                     TBLPTRH         equ	4087	;# 
  5408   000FF8                     TBLPTRU         equ	4088	;# 
  5409   000FF9                     PCLAT           equ	4089	;# 
  5410   000FF9                     PC              equ	4089	;# 
  5411   000FF9                     PCL             equ	4089	;# 
  5412   000FFA                     PCLATH          equ	4090	;# 
  5413   000FFB                     PCLATU          equ	4091	;# 
  5414   000FFC                     STKPTR          equ	4092	;# 
  5415   000FFD                     TOS             equ	4093	;# 
  5416   000FFD                     TOSL            equ	4093	;# 
  5417   000FFE                     TOSH            equ	4094	;# 
  5418   000FFF                     TOSU            equ	4095	;# 
  5419   000E8D                     RX2PPS          equ	3725	;# 
  5420   000E8E                     CK2PPS          equ	3726	;# 
  5421   000E8E                     TX2PPS          equ	3726	;# 
  5422   000E8F                     SSP2CLKPPS      equ	3727	;# 
  5423   000E90                     SSP2DATPPS      equ	3728	;# 
  5424   000E91                     SSP2SSPPS       equ	3729	;# 
  5425   000E92                     SSP2BUF         equ	3730	;# 
  5426   000E93                     SSP2ADD         equ	3731	;# 
  5427   000E94                     SSP2MSK         equ	3732	;# 
  5428   000E95                     SSP2STAT        equ	3733	;# 
  5429   000E96                     SSP2CON1        equ	3734	;# 
  5430   000E97                     SSP2CON2        equ	3735	;# 
  5431   000E98                     SSP2CON3        equ	3736	;# 
  5432   000E99                     RC2REG          equ	3737	;# 
  5433   000E99                     RCREG2          equ	3737	;# 
  5434   000E9A                     TX2REG          equ	3738	;# 
  5435   000E9A                     TXREG2          equ	3738	;# 
  5436   000E9B                     SP2BRG          equ	3739	;# 
  5437   000E9B                     SP2BRGL         equ	3739	;# 
  5438   000E9B                     SPBRG2          equ	3739	;# 
  5439   000E9C                     SP2BRGH         equ	3740	;# 
  5440   000E9C                     SPBRGH2         equ	3740	;# 
  5441   000E9D                     RC2STA          equ	3741	;# 
  5442   000E9D                     RCSTA2          equ	3741	;# 
  5443   000E9E                     TX2STA          equ	3742	;# 
  5444   000E9E                     TXSTA2          equ	3742	;# 
  5445   000E9F                     BAUD2CON        equ	3743	;# 
  5446   000E9F                     BAUDCON2        equ	3743	;# 
  5447   000E9F                     BAUDCTL2        equ	3743	;# 
  5448   000EA0                     PPSLOCK         equ	3744	;# 
  5449   000EA1                     INT0PPS         equ	3745	;# 
  5450   000EA2                     INT1PPS         equ	3746	;# 
  5451   000EA3                     INT2PPS         equ	3747	;# 
  5452   000EA4                     T0CKIPPS        equ	3748	;# 
  5453   000EA5                     T1CKIPPS        equ	3749	;# 
  5454   000EA6                     T1GPPS          equ	3750	;# 
  5455   000EA7                     T3CKIPPS        equ	3751	;# 
  5456   000EA8                     T3GPPS          equ	3752	;# 
  5457   000EA9                     T5CKIPPS        equ	3753	;# 
  5458   000EAA                     T5GPPS          equ	3754	;# 
  5459   000EAB                     T2INPPS         equ	3755	;# 
  5460   000EAC                     T4INPPS         equ	3756	;# 
  5461   000EAD                     T6INPPS         equ	3757	;# 
  5462   000EAE                     ADACTPPS        equ	3758	;# 
  5463   000EAF                     CCP1PPS         equ	3759	;# 
  5464   000EB0                     CCP2PPS         equ	3760	;# 
  5465   000EB1                     CWG1PPS         equ	3761	;# 
  5466   000EB1                     CWGINPPS        equ	3761	;# 
  5467   000EB2                     MDCARLPPS       equ	3762	;# 
  5468   000EB3                     MDCARHPPS       equ	3763	;# 
  5469   000EB4                     MDSRCPPS        equ	3764	;# 
  5470   000EB5                     RX1PPS          equ	3765	;# 
  5471   000EB5                     RXPPS           equ	3765	;# 
  5472   000EB6                     CK1PPS          equ	3766	;# 
  5473   000EB6                     TX1PPS          equ	3766	;# 
  5474   000EB6                     CKPPS           equ	3766	;# 
  5475   000EB6                     TXPPS           equ	3766	;# 
  5476   000EB7                     SSP1CLKPPS      equ	3767	;# 
  5477   000EB7                     SSPCLKPPS       equ	3767	;# 
  5478   000EB8                     SSP1DATPPS      equ	3768	;# 
  5479   000EB8                     SSPDATPPS       equ	3768	;# 
  5480   000EB9                     SSP1SSPPS       equ	3769	;# 
  5481   000EB9                     SSPSSPPS        equ	3769	;# 
  5482   000EBA                     IPR0            equ	3770	;# 
  5483   000EBB                     IPR1            equ	3771	;# 
  5484   000EBC                     IPR2            equ	3772	;# 
  5485   000EBD                     IPR3            equ	3773	;# 
  5486   000EBE                     IPR4            equ	3774	;# 
  5487   000EBF                     IPR5            equ	3775	;# 
  5488   000EC0                     IPR6            equ	3776	;# 
  5489   000EC1                     IPR7            equ	3777	;# 
  5490   000EC2                     PIE0            equ	3778	;# 
  5491   000EC3                     PIE1            equ	3779	;# 
  5492   000EC4                     PIE2            equ	3780	;# 
  5493   000EC5                     PIE3            equ	3781	;# 
  5494   000EC6                     PIE4            equ	3782	;# 
  5495   000EC7                     PIE5            equ	3783	;# 
  5496   000EC8                     PIE6            equ	3784	;# 
  5497   000EC9                     PIE7            equ	3785	;# 
  5498   000ECA                     PIR0            equ	3786	;# 
  5499   000ECB                     PIR1            equ	3787	;# 
  5500   000ECC                     PIR2            equ	3788	;# 
  5501   000ECD                     PIR3            equ	3789	;# 
  5502   000ECE                     PIR4            equ	3790	;# 
  5503   000ECF                     PIR5            equ	3791	;# 
  5504   000ED0                     PIR6            equ	3792	;# 
  5505   000ED1                     PIR7            equ	3793	;# 
  5506   000ED2                     WDTCON0         equ	3794	;# 
  5507   000ED3                     WDTCON1         equ	3795	;# 
  5508   000ED4                     WDTPSL          equ	3796	;# 
  5509   000ED5                     WDTPSH          equ	3797	;# 
  5510   000ED6                     WDTTMR          equ	3798	;# 
  5511   000ED7                     CPUDOZE         equ	3799	;# 
  5512   000ED8                     OSCCON1         equ	3800	;# 
  5513   000ED9                     OSCCON2         equ	3801	;# 
  5514   000EDA                     OSCCON3         equ	3802	;# 
  5515   000EDB                     OSCSTAT         equ	3803	;# 
  5516   000EDB                     OSCSTAT1        equ	3803	;# 
  5517   000EDC                     OSCEN           equ	3804	;# 
  5518   000EDD                     OSCTUNE         equ	3805	;# 
  5519   000EDE                     OSCFRQ          equ	3806	;# 
  5520   000EE0                     BORCON          equ	3808	;# 
  5521   000EE1                     PMD0            equ	3809	;# 
  5522   000EE2                     PMD1            equ	3810	;# 
  5523   000EE3                     PMD2            equ	3811	;# 
  5524   000EE4                     PMD3            equ	3812	;# 
  5525   000EE5                     PMD4            equ	3813	;# 
  5526   000EE6                     PMD5            equ	3814	;# 
  5527   000EE7                     RA0PPS          equ	3815	;# 
  5528   000EE8                     RA1PPS          equ	3816	;# 
  5529   000EE9                     RA2PPS          equ	3817	;# 
  5530   000EEA                     RA3PPS          equ	3818	;# 
  5531   000EEB                     RA4PPS          equ	3819	;# 
  5532   000EEC                     RA5PPS          equ	3820	;# 
  5533   000EED                     RA6PPS          equ	3821	;# 
  5534   000EEE                     RA7PPS          equ	3822	;# 
  5535   000EEF                     RB0PPS          equ	3823	;# 
  5536   000EF0                     RB1PPS          equ	3824	;# 
  5537   000EF1                     RB2PPS          equ	3825	;# 
  5538   000EF2                     RB3PPS          equ	3826	;# 
  5539   000EF3                     RB4PPS          equ	3827	;# 
  5540   000EF4                     RB5PPS          equ	3828	;# 
  5541   000EF5                     RB6PPS          equ	3829	;# 
  5542   000EF6                     RB7PPS          equ	3830	;# 
  5543   000EF7                     RC0PPS          equ	3831	;# 
  5544   000EF8                     RC1PPS          equ	3832	;# 
  5545   000EF9                     RC2PPS          equ	3833	;# 
  5546   000EFA                     RC3PPS          equ	3834	;# 
  5547   000EFB                     RC4PPS          equ	3835	;# 
  5548   000EFC                     RC5PPS          equ	3836	;# 
  5549   000EFD                     RC6PPS          equ	3837	;# 
  5550   000EFE                     RC7PPS          equ	3838	;# 
  5551   000F0A                     IOCAF           equ	3850	;# 
  5552   000F0B                     IOCAN           equ	3851	;# 
  5553   000F0C                     IOCAP           equ	3852	;# 
  5554   000F0D                     INLVLA          equ	3853	;# 
  5555   000F0E                     SLRCONA         equ	3854	;# 
  5556   000F0F                     ODCONA          equ	3855	;# 
  5557   000F10                     WPUA            equ	3856	;# 
  5558   000F11                     ANSELA          equ	3857	;# 
  5559   000F12                     IOCBF           equ	3858	;# 
  5560   000F13                     IOCBN           equ	3859	;# 
  5561   000F14                     IOCBP           equ	3860	;# 
  5562   000F15                     INLVLB          equ	3861	;# 
  5563   000F16                     SLRCONB         equ	3862	;# 
  5564   000F17                     ODCONB          equ	3863	;# 
  5565   000F18                     WPUB            equ	3864	;# 
  5566   000F19                     ANSELB          equ	3865	;# 
  5567   000F1A                     IOCCF           equ	3866	;# 
  5568   000F1B                     IOCCN           equ	3867	;# 
  5569   000F1C                     IOCCP           equ	3868	;# 
  5570   000F1D                     INLVLC          equ	3869	;# 
  5571   000F1E                     SLRCONC         equ	3870	;# 
  5572   000F1F                     ODCONC          equ	3871	;# 
  5573   000F20                     WPUC            equ	3872	;# 
  5574   000F21                     ANSELC          equ	3873	;# 
  5575   000F27                     IOCEF           equ	3879	;# 
  5576   000F28                     IOCEN           equ	3880	;# 
  5577   000F29                     IOCEP           equ	3881	;# 
  5578   000F2A                     INLVLE          equ	3882	;# 
  5579   000F2D                     WPUE            equ	3885	;# 
  5580   000F2F                     HLVDCON0        equ	3887	;# 
  5581   000F30                     HLVDCON1        equ	3888	;# 
  5582   000F31                     FVRCON          equ	3889	;# 
  5583   000F32                     ZCDCON          equ	3890	;# 
  5584   000F33                     DAC1CON0        equ	3891	;# 
  5585   000F34                     DAC1CON1        equ	3892	;# 
  5586   000F35                     CM2CON0         equ	3893	;# 
  5587   000F36                     CM2CON1         equ	3894	;# 
  5588   000F37                     CM2NCH          equ	3895	;# 
  5589   000F38                     CM2PCH          equ	3896	;# 
  5590   000F39                     CM1CON0         equ	3897	;# 
  5591   000F3A                     CM1CON1         equ	3898	;# 
  5592   000F3B                     CM1NCH          equ	3899	;# 
  5593   000F3C                     CM1PCH          equ	3900	;# 
  5594   000F3D                     CMOUT           equ	3901	;# 
  5595   000F3E                     CLKRCON         equ	3902	;# 
  5596   000F3F                     CLKRCLK         equ	3903	;# 
  5597   000F40                     CWG1CLK         equ	3904	;# 
  5598   000F40                     CWG1CLKCON      equ	3904	;# 
  5599   000F41                     CWG1ISM         equ	3905	;# 
  5600   000F42                     CWG1DBR         equ	3906	;# 
  5601   000F43                     CWG1DBF         equ	3907	;# 
  5602   000F44                     CWG1CON0        equ	3908	;# 
  5603   000F45                     CWG1CON1        equ	3909	;# 
  5604   000F46                     CWG1AS0         equ	3910	;# 
  5605   000F47                     CWG1AS1         equ	3911	;# 
  5606   000F48                     CWG1STR         equ	3912	;# 
  5607   000F49                     SCANLADR        equ	3913	;# 
  5608   000F49                     SCANLADRL       equ	3913	;# 
  5609   000F4A                     SCANLADRH       equ	3914	;# 
  5610   000F4B                     SCANLADRU       equ	3915	;# 
  5611   000F4C                     SCANHADR        equ	3916	;# 
  5612   000F4C                     SCANHADRL       equ	3916	;# 
  5613   000F4D                     SCANHADRH       equ	3917	;# 
  5614   000F4E                     SCANHADRU       equ	3918	;# 
  5615   000F4F                     SCANCON0        equ	3919	;# 
  5616   000F50                     SCANTRIG        equ	3920	;# 
  5617   000F51                     MDCON0          equ	3921	;# 
  5618   000F52                     MDCON1          equ	3922	;# 
  5619   000F53                     MDSRC           equ	3923	;# 
  5620   000F54                     MDCARL          equ	3924	;# 
  5621   000F55                     MDCARH          equ	3925	;# 
  5622   000F56                     ADACT           equ	3926	;# 
  5623   000F57                     ADCLK           equ	3927	;# 
  5624   000F58                     ADREF           equ	3928	;# 
  5625   000F59                     ADCON1          equ	3929	;# 
  5626   000F5A                     ADCON2          equ	3930	;# 
  5627   000F5B                     ADCON3          equ	3931	;# 
  5628   000F5C                     ADACQ           equ	3932	;# 
  5629   000F5D                     ADCAP           equ	3933	;# 
  5630   000F5E                     ADPRE           equ	3934	;# 
  5631   000F5F                     ADPCH           equ	3935	;# 
  5632   000F60                     ADCON0          equ	3936	;# 
  5633   000F61                     ADPREV          equ	3937	;# 
  5634   000F61                     ADPREVL         equ	3937	;# 
  5635   000F62                     ADPREVH         equ	3938	;# 
  5636   000F63                     ADRES           equ	3939	;# 
  5637   000F63                     ADRESL          equ	3939	;# 
  5638   000F64                     ADRESH          equ	3940	;# 
  5639   000F65                     ADSTAT          equ	3941	;# 
  5640   000F66                     ADRPT           equ	3942	;# 
  5641   000F67                     ADCNT           equ	3943	;# 
  5642   000F68                     ADSTPT          equ	3944	;# 
  5643   000F68                     ADSTPTL         equ	3944	;# 
  5644   000F69                     ADSTPTH         equ	3945	;# 
  5645   000F6A                     ADLTH           equ	3946	;# 
  5646   000F6A                     ADLTHL          equ	3946	;# 
  5647   000F6B                     ADLTHH          equ	3947	;# 
  5648   000F6C                     ADUTH           equ	3948	;# 
  5649   000F6C                     ADUTHL          equ	3948	;# 
  5650   000F6D                     ADUTHH          equ	3949	;# 
  5651   000F6E                     ADERR           equ	3950	;# 
  5652   000F6E                     ADERRL          equ	3950	;# 
  5653   000F6F                     ADERRH          equ	3951	;# 
  5654   000F70                     ADACC           equ	3952	;# 
  5655   000F70                     ADACCL          equ	3952	;# 
  5656   000F71                     ADACCH          equ	3953	;# 
  5657   000F72                     ADFLTR          equ	3954	;# 
  5658   000F72                     ADFLTRL         equ	3954	;# 
  5659   000F73                     ADFLTRH         equ	3955	;# 
  5660   000F74                     CRCDATA         equ	3956	;# 
  5661   000F74                     CRCDATL         equ	3956	;# 
  5662   000F75                     CRCDATH         equ	3957	;# 
  5663   000F76                     CRCACC          equ	3958	;# 
  5664   000F76                     CRCACCL         equ	3958	;# 
  5665   000F77                     CRCACCH         equ	3959	;# 
  5666   000F78                     CRCSHFT         equ	3960	;# 
  5667   000F78                     CRCSHIFTL       equ	3960	;# 
  5668   000F79                     CRCSHIFTH       equ	3961	;# 
  5669   000F7A                     CRCXOR          equ	3962	;# 
  5670   000F7A                     CRCXORL         equ	3962	;# 
  5671   000F7B                     CRCXORH         equ	3963	;# 
  5672   000F7C                     CRCCON0         equ	3964	;# 
  5673   000F7D                     CRCCON1         equ	3965	;# 
  5674   000F7E                     NVMADR          equ	3966	;# 
  5675   000F7E                     NVMADRL         equ	3966	;# 
  5676   000F7F                     NVMADRH         equ	3967	;# 
  5677   000F80                     NVMDAT          equ	3968	;# 
  5678   000F81                     NVMCON1         equ	3969	;# 
  5679   000F82                     NVMCON2         equ	3970	;# 
  5680   000F83                     LATA            equ	3971	;# 
  5681   000F84                     LATB            equ	3972	;# 
  5682   000F85                     LATC            equ	3973	;# 
  5683   000F88                     TRISA           equ	3976	;# 
  5684   000F88                     DDRA            equ	3976	;# 
  5685   000F89                     TRISB           equ	3977	;# 
  5686   000F89                     DDRB            equ	3977	;# 
  5687   000F8A                     TRISC           equ	3978	;# 
  5688   000F8A                     DDRC            equ	3978	;# 
  5689   000F8D                     PORTA           equ	3981	;# 
  5690   000F8E                     PORTB           equ	3982	;# 
  5691   000F8F                     PORTC           equ	3983	;# 
  5692   000F91                     PORTE           equ	3985	;# 
  5693   000F92                     SSP1BUF         equ	3986	;# 
  5694   000F93                     SSP1ADD         equ	3987	;# 
  5695   000F94                     SSP1MSK         equ	3988	;# 
  5696   000F95                     SSP1STAT        equ	3989	;# 
  5697   000F96                     SSP1CON1        equ	3990	;# 
  5698   000F97                     SSP1CON2        equ	3991	;# 
  5699   000F98                     SSP1CON3        equ	3992	;# 
  5700   000F99                     RC1REG          equ	3993	;# 
  5701   000F99                     RCREG           equ	3993	;# 
  5702   000F99                     RCREG1          equ	3993	;# 
  5703   000F9A                     TX1REG          equ	3994	;# 
  5704   000F9A                     TXREG1          equ	3994	;# 
  5705   000F9A                     TXREG           equ	3994	;# 
  5706   000F9B                     SP1BRG          equ	3995	;# 
  5707   000F9B                     SP1BRGL         equ	3995	;# 
  5708   000F9B                     SPBRG           equ	3995	;# 
  5709   000F9B                     SPBRG1          equ	3995	;# 
  5710   000F9B                     SPBRGL          equ	3995	;# 
  5711   000F9C                     SP1BRGH         equ	3996	;# 
  5712   000F9C                     SPBRGH          equ	3996	;# 
  5713   000F9C                     SPBRGH1         equ	3996	;# 
  5714   000F9D                     RC1STA          equ	3997	;# 
  5715   000F9D                     RCSTA1          equ	3997	;# 
  5716   000F9D                     RCSTA           equ	3997	;# 
  5717   000F9E                     TX1STA          equ	3998	;# 
  5718   000F9E                     TXSTA1          equ	3998	;# 
  5719   000F9E                     TXSTA           equ	3998	;# 
  5720   000F9F                     BAUD1CON        equ	3999	;# 
  5721   000F9F                     BAUDCON1        equ	3999	;# 
  5722   000F9F                     BAUDCTL1        equ	3999	;# 
  5723   000F9F                     BAUDCON         equ	3999	;# 
  5724   000F9F                     BAUDCTL         equ	3999	;# 
  5725   000FA0                     PWM4DC          equ	4000	;# 
  5726   000FA0                     PWM4DCL         equ	4000	;# 
  5727   000FA1                     PWM4DCH         equ	4001	;# 
  5728   000FA2                     PWM4CON         equ	4002	;# 
  5729   000FA3                     PWM3DC          equ	4003	;# 
  5730   000FA3                     PWM3DCL         equ	4003	;# 
  5731   000FA4                     PWM3DCH         equ	4004	;# 
  5732   000FA5                     PWM3CON         equ	4005	;# 
  5733   000FA6                     CCPR2           equ	4006	;# 
  5734   000FA6                     CCPR2L          equ	4006	;# 
  5735   000FA7                     CCPR2H          equ	4007	;# 
  5736   000FA8                     CCP2CON         equ	4008	;# 
  5737   000FA9                     CCP2CAP         equ	4009	;# 
  5738   000FAA                     CCPR1           equ	4010	;# 
  5739   000FAA                     CCPR1L          equ	4010	;# 
  5740   000FAB                     CCPR1H          equ	4011	;# 
  5741   000FAC                     CCP1CON         equ	4012	;# 
  5742   000FAD                     CCP1CAP         equ	4013	;# 
  5743   000FAE                     CCPTMRS         equ	4014	;# 
  5744   000FAF                     T6TMR           equ	4015	;# 
  5745   000FAF                     TMR6            equ	4015	;# 
  5746   000FB0                     T6PR            equ	4016	;# 
  5747   000FB0                     PR6             equ	4016	;# 
  5748   000FB1                     T6CON           equ	4017	;# 
  5749   000FB2                     T6HLT           equ	4018	;# 
  5750   000FB3                     T6CLKCON        equ	4019	;# 
  5751   000FB3                     T6CLK           equ	4019	;# 
  5752   000FB4                     T6RST           equ	4020	;# 
  5753   000FB5                     T4TMR           equ	4021	;# 
  5754   000FB5                     TMR4            equ	4021	;# 
  5755   000FB6                     T4PR            equ	4022	;# 
  5756   000FB6                     PR4             equ	4022	;# 
  5757   000FB7                     T4CON           equ	4023	;# 
  5758   000FB8                     T4HLT           equ	4024	;# 
  5759   000FB9                     T4CLKCON        equ	4025	;# 
  5760   000FB9                     T4CLK           equ	4025	;# 
  5761   000FBA                     T4RST           equ	4026	;# 
  5762   000FBB                     T2TMR           equ	4027	;# 
  5763   000FBB                     TMR2            equ	4027	;# 
  5764   000FBC                     T2PR            equ	4028	;# 
  5765   000FBC                     PR2             equ	4028	;# 
  5766   000FBD                     T2CON           equ	4029	;# 
  5767   000FBE                     T2HLT           equ	4030	;# 
  5768   000FBF                     T2CLKCON        equ	4031	;# 
  5769   000FBF                     T2CLK           equ	4031	;# 
  5770   000FC0                     T2RST           equ	4032	;# 
  5771   000FC1                     TMR5            equ	4033	;# 
  5772   000FC1                     TMR5L           equ	4033	;# 
  5773   000FC2                     TMR5H           equ	4034	;# 
  5774   000FC3                     T5CON           equ	4035	;# 
  5775   000FC4                     T5GCON          equ	4036	;# 
  5776   000FC4                     PR5             equ	4036	;# 
  5777   000FC5                     T5GATE          equ	4037	;# 
  5778   000FC5                     TMR5GATE        equ	4037	;# 
  5779   000FC6                     T5CLK           equ	4038	;# 
  5780   000FC6                     TMR5CLK         equ	4038	;# 
  5781   000FC7                     TMR3            equ	4039	;# 
  5782   000FC7                     TMR3L           equ	4039	;# 
  5783   000FC8                     TMR3H           equ	4040	;# 
  5784   000FC9                     T3CON           equ	4041	;# 
  5785   000FCA                     T3GCON          equ	4042	;# 
  5786   000FCA                     PR3             equ	4042	;# 
  5787   000FCB                     T3GATE          equ	4043	;# 
  5788   000FCB                     TMR3GATE        equ	4043	;# 
  5789   000FCC                     T3CLK           equ	4044	;# 
  5790   000FCC                     TMR3CLK         equ	4044	;# 
  5791   000FCD                     TMR1            equ	4045	;# 
  5792   000FCD                     TMR1L           equ	4045	;# 
  5793   000FCE                     TMR1H           equ	4046	;# 
  5794   000FCF                     T1CON           equ	4047	;# 
  5795   000FD0                     T1GCON          equ	4048	;# 
  5796   000FD0                     PR1             equ	4048	;# 
  5797   000FD1                     T1GATE          equ	4049	;# 
  5798   000FD1                     TMR1GATE        equ	4049	;# 
  5799   000FD2                     T1CLK           equ	4050	;# 
  5800   000FD2                     TMR1CLK         equ	4050	;# 
  5801   000FD3                     TMR0L           equ	4051	;# 
  5802   000FD3                     TMR0            equ	4051	;# 
  5803   000FD4                     TMR0H           equ	4052	;# 
  5804   000FD4                     PR0             equ	4052	;# 
  5805   000FD5                     T0CON0          equ	4053	;# 
  5806   000FD6                     T0CON1          equ	4054	;# 
  5807   000FD7                     PCON0           equ	4055	;# 
  5808   000FD8                     STATUS          equ	4056	;# 
  5809   000FD9                     FSR2            equ	4057	;# 
  5810   000FD9                     FSR2L           equ	4057	;# 
  5811   000FDA                     FSR2H           equ	4058	;# 
  5812   000FDB                     PLUSW2          equ	4059	;# 
  5813   000FDC                     PREINC2         equ	4060	;# 
  5814   000FDD                     POSTDEC2        equ	4061	;# 
  5815   000FDE                     POSTINC2        equ	4062	;# 
  5816   000FDF                     INDF2           equ	4063	;# 
  5817   000FE0                     BSR             equ	4064	;# 
  5818   000FE1                     FSR1            equ	4065	;# 
  5819   000FE1                     FSR1L           equ	4065	;# 
  5820   000FE2                     FSR1H           equ	4066	;# 
  5821   000FE3                     PLUSW1          equ	4067	;# 
  5822   000FE4                     PREINC1         equ	4068	;# 
  5823   000FE5                     POSTDEC1        equ	4069	;# 
  5824   000FE6                     POSTINC1        equ	4070	;# 
  5825   000FE7                     INDF1           equ	4071	;# 
  5826   000FE8                     WREG            equ	4072	;# 
  5827   000FE9                     FSR0            equ	4073	;# 
  5828   000FE9                     FSR0L           equ	4073	;# 
  5829   000FEA                     FSR0H           equ	4074	;# 
  5830   000FEB                     PLUSW0          equ	4075	;# 
  5831   000FEC                     PREINC0         equ	4076	;# 
  5832   000FED                     POSTDEC0        equ	4077	;# 
  5833   000FEE                     POSTINC0        equ	4078	;# 
  5834   000FEF                     INDF0           equ	4079	;# 
  5835   000FF2                     INTCON          equ	4082	;# 
  5836   000FF3                     PROD            equ	4083	;# 
  5837   000FF3                     PRODL           equ	4083	;# 
  5838   000FF4                     PRODH           equ	4084	;# 
  5839   000FF5                     TABLAT          equ	4085	;# 
  5840   000FF6                     TBLPTR          equ	4086	;# 
  5841   000FF6                     TBLPTRL         equ	4086	;# 
  5842   000FF7                     TBLPTRH         equ	4087	;# 
  5843   000FF8                     TBLPTRU         equ	4088	;# 
  5844   000FF9                     PCLAT           equ	4089	;# 
  5845   000FF9                     PC              equ	4089	;# 
  5846   000FF9                     PCL             equ	4089	;# 
  5847   000FFA                     PCLATH          equ	4090	;# 
  5848   000FFB                     PCLATU          equ	4091	;# 
  5849   000FFC                     STKPTR          equ	4092	;# 
  5850   000FFD                     TOS             equ	4093	;# 
  5851   000FFD                     TOSL            equ	4093	;# 
  5852   000FFE                     TOSH            equ	4094	;# 
  5853   000FFF                     TOSU            equ	4095	;# 
  5854   000E8D                     RX2PPS          equ	3725	;# 
  5855   000E8E                     CK2PPS          equ	3726	;# 
  5856   000E8E                     TX2PPS          equ	3726	;# 
  5857   000E8F                     SSP2CLKPPS      equ	3727	;# 
  5858   000E90                     SSP2DATPPS      equ	3728	;# 
  5859   000E91                     SSP2SSPPS       equ	3729	;# 
  5860   000E92                     SSP2BUF         equ	3730	;# 
  5861   000E93                     SSP2ADD         equ	3731	;# 
  5862   000E94                     SSP2MSK         equ	3732	;# 
  5863   000E95                     SSP2STAT        equ	3733	;# 
  5864   000E96                     SSP2CON1        equ	3734	;# 
  5865   000E97                     SSP2CON2        equ	3735	;# 
  5866   000E98                     SSP2CON3        equ	3736	;# 
  5867   000E99                     RC2REG          equ	3737	;# 
  5868   000E99                     RCREG2          equ	3737	;# 
  5869   000E9A                     TX2REG          equ	3738	;# 
  5870   000E9A                     TXREG2          equ	3738	;# 
  5871   000E9B                     SP2BRG          equ	3739	;# 
  5872   000E9B                     SP2BRGL         equ	3739	;# 
  5873   000E9B                     SPBRG2          equ	3739	;# 
  5874   000E9C                     SP2BRGH         equ	3740	;# 
  5875   000E9C                     SPBRGH2         equ	3740	;# 
  5876   000E9D                     RC2STA          equ	3741	;# 
  5877   000E9D                     RCSTA2          equ	3741	;# 
  5878   000E9E                     TX2STA          equ	3742	;# 
  5879   000E9E                     TXSTA2          equ	3742	;# 
  5880   000E9F                     BAUD2CON        equ	3743	;# 
  5881   000E9F                     BAUDCON2        equ	3743	;# 
  5882   000E9F                     BAUDCTL2        equ	3743	;# 
  5883   000EA0                     PPSLOCK         equ	3744	;# 
  5884   000EA1                     INT0PPS         equ	3745	;# 
  5885   000EA2                     INT1PPS         equ	3746	;# 
  5886   000EA3                     INT2PPS         equ	3747	;# 
  5887   000EA4                     T0CKIPPS        equ	3748	;# 
  5888   000EA5                     T1CKIPPS        equ	3749	;# 
  5889   000EA6                     T1GPPS          equ	3750	;# 
  5890   000EA7                     T3CKIPPS        equ	3751	;# 
  5891   000EA8                     T3GPPS          equ	3752	;# 
  5892   000EA9                     T5CKIPPS        equ	3753	;# 
  5893   000EAA                     T5GPPS          equ	3754	;# 
  5894   000EAB                     T2INPPS         equ	3755	;# 
  5895   000EAC                     T4INPPS         equ	3756	;# 
  5896   000EAD                     T6INPPS         equ	3757	;# 
  5897   000EAE                     ADACTPPS        equ	3758	;# 
  5898   000EAF                     CCP1PPS         equ	3759	;# 
  5899   000EB0                     CCP2PPS         equ	3760	;# 
  5900   000EB1                     CWG1PPS         equ	3761	;# 
  5901   000EB1                     CWGINPPS        equ	3761	;# 
  5902   000EB2                     MDCARLPPS       equ	3762	;# 
  5903   000EB3                     MDCARHPPS       equ	3763	;# 
  5904   000EB4                     MDSRCPPS        equ	3764	;# 
  5905   000EB5                     RX1PPS          equ	3765	;# 
  5906   000EB5                     RXPPS           equ	3765	;# 
  5907   000EB6                     CK1PPS          equ	3766	;# 
  5908   000EB6                     TX1PPS          equ	3766	;# 
  5909   000EB6                     CKPPS           equ	3766	;# 
  5910   000EB6                     TXPPS           equ	3766	;# 
  5911   000EB7                     SSP1CLKPPS      equ	3767	;# 
  5912   000EB7                     SSPCLKPPS       equ	3767	;# 
  5913   000EB8                     SSP1DATPPS      equ	3768	;# 
  5914   000EB8                     SSPDATPPS       equ	3768	;# 
  5915   000EB9                     SSP1SSPPS       equ	3769	;# 
  5916   000EB9                     SSPSSPPS        equ	3769	;# 
  5917   000EBA                     IPR0            equ	3770	;# 
  5918   000EBB                     IPR1            equ	3771	;# 
  5919   000EBC                     IPR2            equ	3772	;# 
  5920   000EBD                     IPR3            equ	3773	;# 
  5921   000EBE                     IPR4            equ	3774	;# 
  5922   000EBF                     IPR5            equ	3775	;# 
  5923   000EC0                     IPR6            equ	3776	;# 
  5924   000EC1                     IPR7            equ	3777	;# 
  5925   000EC2                     PIE0            equ	3778	;# 
  5926   000EC3                     PIE1            equ	3779	;# 
  5927   000EC4                     PIE2            equ	3780	;# 
  5928   000EC5                     PIE3            equ	3781	;# 
  5929   000EC6                     PIE4            equ	3782	;# 
  5930   000EC7                     PIE5            equ	3783	;# 
  5931   000EC8                     PIE6            equ	3784	;# 
  5932   000EC9                     PIE7            equ	3785	;# 
  5933   000ECA                     PIR0            equ	3786	;# 
  5934   000ECB                     PIR1            equ	3787	;# 
  5935   000ECC                     PIR2            equ	3788	;# 
  5936   000ECD                     PIR3            equ	3789	;# 
  5937   000ECE                     PIR4            equ	3790	;# 
  5938   000ECF                     PIR5            equ	3791	;# 
  5939   000ED0                     PIR6            equ	3792	;# 
  5940   000ED1                     PIR7            equ	3793	;# 
  5941   000ED2                     WDTCON0         equ	3794	;# 
  5942   000ED3                     WDTCON1         equ	3795	;# 
  5943   000ED4                     WDTPSL          equ	3796	;# 
  5944   000ED5                     WDTPSH          equ	3797	;# 
  5945   000ED6                     WDTTMR          equ	3798	;# 
  5946   000ED7                     CPUDOZE         equ	3799	;# 
  5947   000ED8                     OSCCON1         equ	3800	;# 
  5948   000ED9                     OSCCON2         equ	3801	;# 
  5949   000EDA                     OSCCON3         equ	3802	;# 
  5950   000EDB                     OSCSTAT         equ	3803	;# 
  5951   000EDB                     OSCSTAT1        equ	3803	;# 
  5952   000EDC                     OSCEN           equ	3804	;# 
  5953   000EDD                     OSCTUNE         equ	3805	;# 
  5954   000EDE                     OSCFRQ          equ	3806	;# 
  5955   000EE0                     BORCON          equ	3808	;# 
  5956   000EE1                     PMD0            equ	3809	;# 
  5957   000EE2                     PMD1            equ	3810	;# 
  5958   000EE3                     PMD2            equ	3811	;# 
  5959   000EE4                     PMD3            equ	3812	;# 
  5960   000EE5                     PMD4            equ	3813	;# 
  5961   000EE6                     PMD5            equ	3814	;# 
  5962   000EE7                     RA0PPS          equ	3815	;# 
  5963   000EE8                     RA1PPS          equ	3816	;# 
  5964   000EE9                     RA2PPS          equ	3817	;# 
  5965   000EEA                     RA3PPS          equ	3818	;# 
  5966   000EEB                     RA4PPS          equ	3819	;# 
  5967   000EEC                     RA5PPS          equ	3820	;# 
  5968   000EED                     RA6PPS          equ	3821	;# 
  5969   000EEE                     RA7PPS          equ	3822	;# 
  5970   000EEF                     RB0PPS          equ	3823	;# 
  5971   000EF0                     RB1PPS          equ	3824	;# 
  5972   000EF1                     RB2PPS          equ	3825	;# 
  5973   000EF2                     RB3PPS          equ	3826	;# 
  5974   000EF3                     RB4PPS          equ	3827	;# 
  5975   000EF4                     RB5PPS          equ	3828	;# 
  5976   000EF5                     RB6PPS          equ	3829	;# 
  5977   000EF6                     RB7PPS          equ	3830	;# 
  5978   000EF7                     RC0PPS          equ	3831	;# 
  5979   000EF8                     RC1PPS          equ	3832	;# 
  5980   000EF9                     RC2PPS          equ	3833	;# 
  5981   000EFA                     RC3PPS          equ	3834	;# 
  5982   000EFB                     RC4PPS          equ	3835	;# 
  5983   000EFC                     RC5PPS          equ	3836	;# 
  5984   000EFD                     RC6PPS          equ	3837	;# 
  5985   000EFE                     RC7PPS          equ	3838	;# 
  5986   000F0A                     IOCAF           equ	3850	;# 
  5987   000F0B                     IOCAN           equ	3851	;# 
  5988   000F0C                     IOCAP           equ	3852	;# 
  5989   000F0D                     INLVLA          equ	3853	;# 
  5990   000F0E                     SLRCONA         equ	3854	;# 
  5991   000F0F                     ODCONA          equ	3855	;# 
  5992   000F10                     WPUA            equ	3856	;# 
  5993   000F11                     ANSELA          equ	3857	;# 
  5994   000F12                     IOCBF           equ	3858	;# 
  5995   000F13                     IOCBN           equ	3859	;# 
  5996   000F14                     IOCBP           equ	3860	;# 
  5997   000F15                     INLVLB          equ	3861	;# 
  5998   000F16                     SLRCONB         equ	3862	;# 
  5999   000F17                     ODCONB          equ	3863	;# 
  6000   000F18                     WPUB            equ	3864	;# 
  6001   000F19                     ANSELB          equ	3865	;# 
  6002   000F1A                     IOCCF           equ	3866	;# 
  6003   000F1B                     IOCCN           equ	3867	;# 
  6004   000F1C                     IOCCP           equ	3868	;# 
  6005   000F1D                     INLVLC          equ	3869	;# 
  6006   000F1E                     SLRCONC         equ	3870	;# 
  6007   000F1F                     ODCONC          equ	3871	;# 
  6008   000F20                     WPUC            equ	3872	;# 
  6009   000F21                     ANSELC          equ	3873	;# 
  6010   000F27                     IOCEF           equ	3879	;# 
  6011   000F28                     IOCEN           equ	3880	;# 
  6012   000F29                     IOCEP           equ	3881	;# 
  6013   000F2A                     INLVLE          equ	3882	;# 
  6014   000F2D                     WPUE            equ	3885	;# 
  6015   000F2F                     HLVDCON0        equ	3887	;# 
  6016   000F30                     HLVDCON1        equ	3888	;# 
  6017   000F31                     FVRCON          equ	3889	;# 
  6018   000F32                     ZCDCON          equ	3890	;# 
  6019   000F33                     DAC1CON0        equ	3891	;# 
  6020   000F34                     DAC1CON1        equ	3892	;# 
  6021   000F35                     CM2CON0         equ	3893	;# 
  6022   000F36                     CM2CON1         equ	3894	;# 
  6023   000F37                     CM2NCH          equ	3895	;# 
  6024   000F38                     CM2PCH          equ	3896	;# 
  6025   000F39                     CM1CON0         equ	3897	;# 
  6026   000F3A                     CM1CON1         equ	3898	;# 
  6027   000F3B                     CM1NCH          equ	3899	;# 
  6028   000F3C                     CM1PCH          equ	3900	;# 
  6029   000F3D                     CMOUT           equ	3901	;# 
  6030   000F3E                     CLKRCON         equ	3902	;# 
  6031   000F3F                     CLKRCLK         equ	3903	;# 
  6032   000F40                     CWG1CLK         equ	3904	;# 
  6033   000F40                     CWG1CLKCON      equ	3904	;# 
  6034   000F41                     CWG1ISM         equ	3905	;# 
  6035   000F42                     CWG1DBR         equ	3906	;# 
  6036   000F43                     CWG1DBF         equ	3907	;# 
  6037   000F44                     CWG1CON0        equ	3908	;# 
  6038   000F45                     CWG1CON1        equ	3909	;# 
  6039   000F46                     CWG1AS0         equ	3910	;# 
  6040   000F47                     CWG1AS1         equ	3911	;# 
  6041   000F48                     CWG1STR         equ	3912	;# 
  6042   000F49                     SCANLADR        equ	3913	;# 
  6043   000F49                     SCANLADRL       equ	3913	;# 
  6044   000F4A                     SCANLADRH       equ	3914	;# 
  6045   000F4B                     SCANLADRU       equ	3915	;# 
  6046   000F4C                     SCANHADR        equ	3916	;# 
  6047   000F4C                     SCANHADRL       equ	3916	;# 
  6048   000F4D                     SCANHADRH       equ	3917	;# 
  6049   000F4E                     SCANHADRU       equ	3918	;# 
  6050   000F4F                     SCANCON0        equ	3919	;# 
  6051   000F50                     SCANTRIG        equ	3920	;# 
  6052   000F51                     MDCON0          equ	3921	;# 
  6053   000F52                     MDCON1          equ	3922	;# 
  6054   000F53                     MDSRC           equ	3923	;# 
  6055   000F54                     MDCARL          equ	3924	;# 
  6056   000F55                     MDCARH          equ	3925	;# 
  6057   000F56                     ADACT           equ	3926	;# 
  6058   000F57                     ADCLK           equ	3927	;# 
  6059   000F58                     ADREF           equ	3928	;# 
  6060   000F59                     ADCON1          equ	3929	;# 
  6061   000F5A                     ADCON2          equ	3930	;# 
  6062   000F5B                     ADCON3          equ	3931	;# 
  6063   000F5C                     ADACQ           equ	3932	;# 
  6064   000F5D                     ADCAP           equ	3933	;# 
  6065   000F5E                     ADPRE           equ	3934	;# 
  6066   000F5F                     ADPCH           equ	3935	;# 
  6067   000F60                     ADCON0          equ	3936	;# 
  6068   000F61                     ADPREV          equ	3937	;# 
  6069   000F61                     ADPREVL         equ	3937	;# 
  6070   000F62                     ADPREVH         equ	3938	;# 
  6071   000F63                     ADRES           equ	3939	;# 
  6072   000F63                     ADRESL          equ	3939	;# 
  6073   000F64                     ADRESH          equ	3940	;# 
  6074   000F65                     ADSTAT          equ	3941	;# 
  6075   000F66                     ADRPT           equ	3942	;# 
  6076   000F67                     ADCNT           equ	3943	;# 
  6077   000F68                     ADSTPT          equ	3944	;# 
  6078   000F68                     ADSTPTL         equ	3944	;# 
  6079   000F69                     ADSTPTH         equ	3945	;# 
  6080   000F6A                     ADLTH           equ	3946	;# 
  6081   000F6A                     ADLTHL          equ	3946	;# 
  6082   000F6B                     ADLTHH          equ	3947	;# 
  6083   000F6C                     ADUTH           equ	3948	;# 
  6084   000F6C                     ADUTHL          equ	3948	;# 
  6085   000F6D                     ADUTHH          equ	3949	;# 
  6086   000F6E                     ADERR           equ	3950	;# 
  6087   000F6E                     ADERRL          equ	3950	;# 
  6088   000F6F                     ADERRH          equ	3951	;# 
  6089   000F70                     ADACC           equ	3952	;# 
  6090   000F70                     ADACCL          equ	3952	;# 
  6091   000F71                     ADACCH          equ	3953	;# 
  6092   000F72                     ADFLTR          equ	3954	;# 
  6093   000F72                     ADFLTRL         equ	3954	;# 
  6094   000F73                     ADFLTRH         equ	3955	;# 
  6095   000F74                     CRCDATA         equ	3956	;# 
  6096   000F74                     CRCDATL         equ	3956	;# 
  6097   000F75                     CRCDATH         equ	3957	;# 
  6098   000F76                     CRCACC          equ	3958	;# 
  6099   000F76                     CRCACCL         equ	3958	;# 
  6100   000F77                     CRCACCH         equ	3959	;# 
  6101   000F78                     CRCSHFT         equ	3960	;# 
  6102   000F78                     CRCSHIFTL       equ	3960	;# 
  6103   000F79                     CRCSHIFTH       equ	3961	;# 
  6104   000F7A                     CRCXOR          equ	3962	;# 
  6105   000F7A                     CRCXORL         equ	3962	;# 
  6106   000F7B                     CRCXORH         equ	3963	;# 
  6107   000F7C                     CRCCON0         equ	3964	;# 
  6108   000F7D                     CRCCON1         equ	3965	;# 
  6109   000F7E                     NVMADR          equ	3966	;# 
  6110   000F7E                     NVMADRL         equ	3966	;# 
  6111   000F7F                     NVMADRH         equ	3967	;# 
  6112   000F80                     NVMDAT          equ	3968	;# 
  6113   000F81                     NVMCON1         equ	3969	;# 
  6114   000F82                     NVMCON2         equ	3970	;# 
  6115   000F83                     LATA            equ	3971	;# 
  6116   000F84                     LATB            equ	3972	;# 
  6117   000F85                     LATC            equ	3973	;# 
  6118   000F88                     TRISA           equ	3976	;# 
  6119   000F88                     DDRA            equ	3976	;# 
  6120   000F89                     TRISB           equ	3977	;# 
  6121   000F89                     DDRB            equ	3977	;# 
  6122   000F8A                     TRISC           equ	3978	;# 
  6123   000F8A                     DDRC            equ	3978	;# 
  6124   000F8D                     PORTA           equ	3981	;# 
  6125   000F8E                     PORTB           equ	3982	;# 
  6126   000F8F                     PORTC           equ	3983	;# 
  6127   000F91                     PORTE           equ	3985	;# 
  6128   000F92                     SSP1BUF         equ	3986	;# 
  6129   000F93                     SSP1ADD         equ	3987	;# 
  6130   000F94                     SSP1MSK         equ	3988	;# 
  6131   000F95                     SSP1STAT        equ	3989	;# 
  6132   000F96                     SSP1CON1        equ	3990	;# 
  6133   000F97                     SSP1CON2        equ	3991	;# 
  6134   000F98                     SSP1CON3        equ	3992	;# 
  6135   000F99                     RC1REG          equ	3993	;# 
  6136   000F99                     RCREG           equ	3993	;# 
  6137   000F99                     RCREG1          equ	3993	;# 
  6138   000F9A                     TX1REG          equ	3994	;# 
  6139   000F9A                     TXREG1          equ	3994	;# 
  6140   000F9A                     TXREG           equ	3994	;# 
  6141   000F9B                     SP1BRG          equ	3995	;# 
  6142   000F9B                     SP1BRGL         equ	3995	;# 
  6143   000F9B                     SPBRG           equ	3995	;# 
  6144   000F9B                     SPBRG1          equ	3995	;# 
  6145   000F9B                     SPBRGL          equ	3995	;# 
  6146   000F9C                     SP1BRGH         equ	3996	;# 
  6147   000F9C                     SPBRGH          equ	3996	;# 
  6148   000F9C                     SPBRGH1         equ	3996	;# 
  6149   000F9D                     RC1STA          equ	3997	;# 
  6150   000F9D                     RCSTA1          equ	3997	;# 
  6151   000F9D                     RCSTA           equ	3997	;# 
  6152   000F9E                     TX1STA          equ	3998	;# 
  6153   000F9E                     TXSTA1          equ	3998	;# 
  6154   000F9E                     TXSTA           equ	3998	;# 
  6155   000F9F                     BAUD1CON        equ	3999	;# 
  6156   000F9F                     BAUDCON1        equ	3999	;# 
  6157   000F9F                     BAUDCTL1        equ	3999	;# 
  6158   000F9F                     BAUDCON         equ	3999	;# 
  6159   000F9F                     BAUDCTL         equ	3999	;# 
  6160   000FA0                     PWM4DC          equ	4000	;# 
  6161   000FA0                     PWM4DCL         equ	4000	;# 
  6162   000FA1                     PWM4DCH         equ	4001	;# 
  6163   000FA2                     PWM4CON         equ	4002	;# 
  6164   000FA3                     PWM3DC          equ	4003	;# 
  6165   000FA3                     PWM3DCL         equ	4003	;# 
  6166   000FA4                     PWM3DCH         equ	4004	;# 
  6167   000FA5                     PWM3CON         equ	4005	;# 
  6168   000FA6                     CCPR2           equ	4006	;# 
  6169   000FA6                     CCPR2L          equ	4006	;# 
  6170   000FA7                     CCPR2H          equ	4007	;# 
  6171   000FA8                     CCP2CON         equ	4008	;# 
  6172   000FA9                     CCP2CAP         equ	4009	;# 
  6173   000FAA                     CCPR1           equ	4010	;# 
  6174   000FAA                     CCPR1L          equ	4010	;# 
  6175   000FAB                     CCPR1H          equ	4011	;# 
  6176   000FAC                     CCP1CON         equ	4012	;# 
  6177   000FAD                     CCP1CAP         equ	4013	;# 
  6178   000FAE                     CCPTMRS         equ	4014	;# 
  6179   000FAF                     T6TMR           equ	4015	;# 
  6180   000FAF                     TMR6            equ	4015	;# 
  6181   000FB0                     T6PR            equ	4016	;# 
  6182   000FB0                     PR6             equ	4016	;# 
  6183   000FB1                     T6CON           equ	4017	;# 
  6184   000FB2                     T6HLT           equ	4018	;# 
  6185   000FB3                     T6CLKCON        equ	4019	;# 
  6186   000FB3                     T6CLK           equ	4019	;# 
  6187   000FB4                     T6RST           equ	4020	;# 
  6188   000FB5                     T4TMR           equ	4021	;# 
  6189   000FB5                     TMR4            equ	4021	;# 
  6190   000FB6                     T4PR            equ	4022	;# 
  6191   000FB6                     PR4             equ	4022	;# 
  6192   000FB7                     T4CON           equ	4023	;# 
  6193   000FB8                     T4HLT           equ	4024	;# 
  6194   000FB9                     T4CLKCON        equ	4025	;# 
  6195   000FB9                     T4CLK           equ	4025	;# 
  6196   000FBA                     T4RST           equ	4026	;# 
  6197   000FBB                     T2TMR           equ	4027	;# 
  6198   000FBB                     TMR2            equ	4027	;# 
  6199   000FBC                     T2PR            equ	4028	;# 
  6200   000FBC                     PR2             equ	4028	;# 
  6201   000FBD                     T2CON           equ	4029	;# 
  6202   000FBE                     T2HLT           equ	4030	;# 
  6203   000FBF                     T2CLKCON        equ	4031	;# 
  6204   000FBF                     T2CLK           equ	4031	;# 
  6205   000FC0                     T2RST           equ	4032	;# 
  6206   000FC1                     TMR5            equ	4033	;# 
  6207   000FC1                     TMR5L           equ	4033	;# 
  6208   000FC2                     TMR5H           equ	4034	;# 
  6209   000FC3                     T5CON           equ	4035	;# 
  6210   000FC4                     T5GCON          equ	4036	;# 
  6211   000FC4                     PR5             equ	4036	;# 
  6212   000FC5                     T5GATE          equ	4037	;# 
  6213   000FC5                     TMR5GATE        equ	4037	;# 
  6214   000FC6                     T5CLK           equ	4038	;# 
  6215   000FC6                     TMR5CLK         equ	4038	;# 
  6216   000FC7                     TMR3            equ	4039	;# 
  6217   000FC7                     TMR3L           equ	4039	;# 
  6218   000FC8                     TMR3H           equ	4040	;# 
  6219   000FC9                     T3CON           equ	4041	;# 
  6220   000FCA                     T3GCON          equ	4042	;# 
  6221   000FCA                     PR3             equ	4042	;# 
  6222   000FCB                     T3GATE          equ	4043	;# 
  6223   000FCB                     TMR3GATE        equ	4043	;# 
  6224   000FCC                     T3CLK           equ	4044	;# 
  6225   000FCC                     TMR3CLK         equ	4044	;# 
  6226   000FCD                     TMR1            equ	4045	;# 
  6227   000FCD                     TMR1L           equ	4045	;# 
  6228   000FCE                     TMR1H           equ	4046	;# 
  6229   000FCF                     T1CON           equ	4047	;# 
  6230   000FD0                     T1GCON          equ	4048	;# 
  6231   000FD0                     PR1             equ	4048	;# 
  6232   000FD1                     T1GATE          equ	4049	;# 
  6233   000FD1                     TMR1GATE        equ	4049	;# 
  6234   000FD2                     T1CLK           equ	4050	;# 
  6235   000FD2                     TMR1CLK         equ	4050	;# 
  6236   000FD3                     TMR0L           equ	4051	;# 
  6237   000FD3                     TMR0            equ	4051	;# 
  6238   000FD4                     TMR0H           equ	4052	;# 
  6239   000FD4                     PR0             equ	4052	;# 
  6240   000FD5                     T0CON0          equ	4053	;# 
  6241   000FD6                     T0CON1          equ	4054	;# 
  6242   000FD7                     PCON0           equ	4055	;# 
  6243   000FD8                     STATUS          equ	4056	;# 
  6244   000FD9                     FSR2            equ	4057	;# 
  6245   000FD9                     FSR2L           equ	4057	;# 
  6246   000FDA                     FSR2H           equ	4058	;# 
  6247   000FDB                     PLUSW2          equ	4059	;# 
  6248   000FDC                     PREINC2         equ	4060	;# 
  6249   000FDD                     POSTDEC2        equ	4061	;# 
  6250   000FDE                     POSTINC2        equ	4062	;# 
  6251   000FDF                     INDF2           equ	4063	;# 
  6252   000FE0                     BSR             equ	4064	;# 
  6253   000FE1                     FSR1            equ	4065	;# 
  6254   000FE1                     FSR1L           equ	4065	;# 
  6255   000FE2                     FSR1H           equ	4066	;# 
  6256   000FE3                     PLUSW1          equ	4067	;# 
  6257   000FE4                     PREINC1         equ	4068	;# 
  6258   000FE5                     POSTDEC1        equ	4069	;# 
  6259   000FE6                     POSTINC1        equ	4070	;# 
  6260   000FE7                     INDF1           equ	4071	;# 
  6261   000FE8                     WREG            equ	4072	;# 
  6262   000FE9                     FSR0            equ	4073	;# 
  6263   000FE9                     FSR0L           equ	4073	;# 
  6264   000FEA                     FSR0H           equ	4074	;# 
  6265   000FEB                     PLUSW0          equ	4075	;# 
  6266   000FEC                     PREINC0         equ	4076	;# 
  6267   000FED                     POSTDEC0        equ	4077	;# 
  6268   000FEE                     POSTINC0        equ	4078	;# 
  6269   000FEF                     INDF0           equ	4079	;# 
  6270   000FF2                     INTCON          equ	4082	;# 
  6271   000FF3                     PROD            equ	4083	;# 
  6272   000FF3                     PRODL           equ	4083	;# 
  6273   000FF4                     PRODH           equ	4084	;# 
  6274   000FF5                     TABLAT          equ	4085	;# 
  6275   000FF6                     TBLPTR          equ	4086	;# 
  6276   000FF6                     TBLPTRL         equ	4086	;# 
  6277   000FF7                     TBLPTRH         equ	4087	;# 
  6278   000FF8                     TBLPTRU         equ	4088	;# 
  6279   000FF9                     PCLAT           equ	4089	;# 
  6280   000FF9                     PC              equ	4089	;# 
  6281   000FF9                     PCL             equ	4089	;# 
  6282   000FFA                     PCLATH          equ	4090	;# 
  6283   000FFB                     PCLATU          equ	4091	;# 
  6284   000FFC                     STKPTR          equ	4092	;# 
  6285   000FFD                     TOS             equ	4093	;# 
  6286   000FFD                     TOSL            equ	4093	;# 
  6287   000FFE                     TOSH            equ	4094	;# 
  6288   000FFF                     TOSU            equ	4095	;# 
  6289                           
  6290 ;; Function _SPI1_Close is unused but had its address taken
  6291   000000                     _SPI1_Close     equ	0
  6292                           
  6293 ;; Function _SPI1_ExchangeBlock is unused but had its address taken
  6294   000000                     _SPI1_ExchangeBlock equ	0
  6295                           
  6296 ;; Function _SPI1_WriteBlock is unused but had its address taken
  6297   000000                     _SPI1_WriteBlock equ	0
  6298                           
  6299 ;; Function _SPI1_ReadBlock is unused but had its address taken
  6300   000000                     _SPI1_ReadBlock equ	0
  6301                           
  6302 ;; Function _SPI1_WriteByte is unused but had its address taken
  6303   000000                     _SPI1_WriteByte equ	0
  6304                           
  6305 ;; Function _SPI1_ReadByte is unused but had its address taken
  6306   000000                     _SPI1_ReadByte  equ	0
  6307                           
  6308 ;; Function _DHCP_Handler is unused but had its address taken
  6309   000000                     _DHCP_Handler   equ	0
  6310                           
  6311 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  6312   000000                     _EUSART1_DefaultFramingErrorHandler equ	0
  6313                           
  6314 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
  6315   000000                     _EUSART1_DefaultOverrunErrorHandler equ	0
  6316                           
  6317 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
  6318   000000                     _EUSART1_DefaultErrorHandler equ	0
  6319                           
  6320                           	psect	idataCOMRAM
  6321   002A5A                     __pidataCOMRAM:
  6322                           	callstack 0
  6323                           
  6324                           ;initializer for _tcpMss
  6325   002A5A  0218               	dw	536
  6326                           
  6327                           ;initializer for _lfsr_value
  6328   002A5C  40                 	db	64
  6329                           
  6330                           ;initializer for _xor_mask
  6331   002A5D  41                 	db	65
  6332                           
  6333                           	psect	idataBANK1
  6334   00252C                     __pidataBANK1:
  6335                           	callstack 0
  6336                           
  6337                           ;initializer for _dhcpData
  6338   00252C  0000               	dw	0
  6339   00252E  0000               	dw	0
  6340   002530  0000               	dw	0
  6341   002532  0000               	dw	0
  6342   002534  0000               	dw	0
  6343   002536  0000               	dw	0
  6344   002538  0000               	dw	0
  6345   00253A  0000               	dw	0
  6346   00253C  0000               	dw	0
  6347   00253E  0000               	dw	0
  6348   002540  0000               	dw	0
  6349   002542  0000               	dw	0
  6350   002544  0000               	dw	0
  6351   002546  0000               	dw	0
  6352   002548  0000               	dw	0
  6353   00254A  0000               	dw	0
  6354   00254C  0000               	dw	0
  6355   00254E  0000               	dw	0
  6356   002550  000A               	dw	10
  6357   002552  0000               	dw	0
  6358   002554  0E10               	dw	3600
  6359   002556  0000               	dw	0
  6360   002558  0000               	dw	0
  6361   00255A  0000               	dw	0
  6362                           
  6363                           ;initializer for _macAddress
  6364   00255C  02                 	db	2
  6365   00255D  00                 	db	0
  6366   00255E  00                 	db	0
  6367   00255F  00                 	db	0
  6368   002560  00                 	db	0
  6369   002561  01                 	db	1
  6370                           
  6371                           	psect	idataBANK2
  6372   002168                     __pidataBANK2:
  6373                           	callstack 0
  6374                           
  6375                           ;initializer for DHCP_Handler@F1305
  6376   002168  0000               	dw	0
  6377   00216A  0000               	dw	0
  6378   00216C  0000               	dw	0
  6379   00216E  0000               	dw	0
  6380   002170  0000               	dw	0
  6381   002172  0000               	dw	0
  6382   002174  0000               	dw	0
  6383   002176  0000               	dw	0
  6384   002178  0000               	dw	0
  6385   00217A  0000               	dw	0
  6386   00217C  0000               	dw	0
  6387   00217E  0000               	dw	0
  6388   002180  0000               	dw	0
  6389   002182  0000               	dw	0
  6390   002184  0000               	dw	0
  6391   002186  0000               	dw	0
  6392   002188  0000               	dw	0
  6393   00218A  0000               	dw	0
  6394   00218C  0E10               	dw	3600
  6395   00218E  0000               	dw	0
  6396   002190  0E10               	dw	3600
  6397   002192  0000               	dw	0
  6398   002194  0000               	dw	0
  6399   002196  0000               	dw	0
  6400                           
  6401                           ;initializer for _network_errors
  6402   002198  DF                 	db	low STR_22
  6403   002199  FF                 	db	high STR_22
  6404   00219A  C8                 	db	low STR_23
  6405   00219B  FF                 	db	high STR_23
  6406   00219C  79                 	db	low STR_24
  6407   00219D  FF                 	db	high STR_24
  6408   00219E  BC                 	db	low STR_25
  6409   00219F  FF                 	db	high STR_25
  6410   0021A0  45                 	db	low STR_26
  6411   0021A1  FF                 	db	high STR_26
  6412   0021A2  88                 	db	low STR_27
  6413   0021A3  FF                 	db	high STR_27
  6414   0021A4  57                 	db	low STR_28
  6415   0021A5  FF                 	db	high STR_28
  6416   0021A6  BE                 	db	low STR_29
  6417   0021A7  FE                 	db	high STR_29
  6418   0021A8  AA                 	db	low STR_30
  6419   0021A9  FE                 	db	high STR_30
  6420   0021AA  D2                 	db	low STR_31
  6421   0021AB  FE                 	db	high STR_31
  6422   0021AC  1F                 	db	low STR_32
  6423   0021AD  FF                 	db	high STR_32
  6424   0021AE  0C                 	db	low STR_33
  6425   0021AF  FF                 	db	high STR_33
  6426   0021B0  B0                 	db	low STR_34
  6427   0021B1  FF                 	db	high STR_34
  6428   0021B2  F9                 	db	low STR_35
  6429   0021B3  FE                 	db	high STR_35
  6430   0021B4  E6                 	db	low STR_36
  6431   0021B5  FE                 	db	high STR_36
  6432   0021B6  6B                 	db	low STR_37
  6433   0021B7  FE                 	db	high STR_37
  6434                           
  6435                           	psect	mediumconst
  6436   00FD4E                     __pmediumconst:
  6437                           	callstack 0
  6438   00FD4E  00                 	db	0
  6439   00FD4F                     _severityThresholdTable:
  6440                           	callstack 0
  6441   00FD4F  00                 	db	0
  6442   00FD50  06                 	db	6
  6443   00FD51  01                 	db	1
  6444   00FD52  05                 	db	5
  6445   00FD53  02                 	db	2
  6446   00FD54  05                 	db	5
  6447   00FD55  03                 	db	3
  6448   00FD56  06                 	db	6
  6449   00FD57  04                 	db	4
  6450   00FD58  05                 	db	5
  6451   00FD59  05                 	db	5
  6452   00FD5A  05                 	db	5
  6453   00FD5B  06                 	db	6
  6454   00FD5C  06                 	db	6
  6455   00FD5D  07                 	db	7
  6456   00FD5E  05                 	db	5
  6457   00FD5F  08                 	db	8
  6458   00FD60  06                 	db	6
  6459   00FD61  09                 	db	9
  6460   00FD62  05                 	db	5
  6461   00FD63  0A                 	db	10
  6462   00FD64  05                 	db	5
  6463   00FD65  0B                 	db	11
  6464   00FD66  05                 	db	5
  6465   00FD67  0C                 	db	12
  6466   00FD68  06                 	db	6
  6467   00FD69  0D                 	db	13
  6468   00FD6A  05                 	db	5
  6469   00FD6B  0E                 	db	14
  6470   00FD6C  05                 	db	5
  6471   00FD6D  0F                 	db	15
  6472   00FD6E  05                 	db	5
  6473   00FD6F  10                 	db	16
  6474   00FD70  06                 	db	6
  6475   00FD71  11                 	db	17
  6476   00FD72  05                 	db	5
  6477   00FD73  12                 	db	18
  6478   00FD74  05                 	db	5
  6479   00FD75  13                 	db	19
  6480   00FD76  06                 	db	6
  6481   00FD77  14                 	db	20
  6482   00FD78  05                 	db	5
  6483   00FD79  15                 	db	21
  6484   00FD7A  06                 	db	6
  6485   00FD7B  16                 	db	22
  6486   00FD7C  05                 	db	5
  6487   00FD7D  17                 	db	23
  6488   00FD7E  05                 	db	5
  6489   00FD7F                     __end_of_severityThresholdTable:
  6490                           	callstack 0
  6491   00FD7F                     _spiMaster:
  6492                           	callstack 0
  6493   00FD7F  00                 	db	0
  6494   00FD80  00                 	db	0
  6495   00FD81  4C                 	db	low _MAC_open
  6496   00FD82  2A                 	db	high _MAC_open
  6497   00FD83  BE                 	db	low _SPI1_ExchangeByte
  6498   00FD84  28                 	db	high _SPI1_ExchangeByte
  6499   00FD85  00                 	db	0
  6500   00FD86  00                 	db	0
  6501   00FD87  00                 	db	0
  6502   00FD88  00                 	db	0
  6503   00FD89  00                 	db	0
  6504   00FD8A  00                 	db	0
  6505   00FD8B  00                 	db	0
  6506   00FD8C  00                 	db	0
  6507   00FD8D  00                 	db	0
  6508   00FD8E  00                 	db	0
  6509   00FD8F  00                 	db	0
  6510   00FD90  00                 	db	0
  6511   00FD91  00                 	db	0
  6512   00FD92  00                 	db	0
  6513   00FD93                     __end_of_spiMaster:
  6514                           	callstack 0
  6515   00FD93                     _xorSequences:
  6516                           	callstack 0
  6517   00FD93  41                 	db	65
  6518   00FD94  44                 	db	68
  6519   00FD95  47                 	db	71
  6520   00FD96  48                 	db	72
  6521   00FD97  4E                 	db	78
  6522   00FD98  53                 	db	83
  6523   00FD99  55                 	db	85
  6524   00FD9A  5C                 	db	92
  6525   00FD9B  5F                 	db	95
  6526   00FD9C  60                 	db	96
  6527   00FD9D  65                 	db	101
  6528   00FD9E  69                 	db	105
  6529   00FD9F  6A                 	db	106
  6530   00FDA0  72                 	db	114
  6531   00FDA1  77                 	db	119
  6532   00FDA2  78                 	db	120
  6533   00FDA3  7B                 	db	123
  6534   00FDA4  7E                 	db	126
  6535   00FDA5                     __end_of_xorSequences:
  6536                           	callstack 0
  6537   00FDA5                     ___secs_to_tm@days_in_month:
  6538                           	callstack 0
  6539   00FDA5  1F                 	db	31
  6540   00FDA6  1E                 	db	30
  6541   00FDA7  1F                 	db	31
  6542   00FDA8  1E                 	db	30
  6543   00FDA9  1F                 	db	31
  6544   00FDAA  1F                 	db	31
  6545   00FDAB  1E                 	db	30
  6546   00FDAC  1F                 	db	31
  6547   00FDAD  1E                 	db	30
  6548   00FDAE  1F                 	db	31
  6549   00FDAF  1F                 	db	31
  6550   00FDB0  1D                 	db	29
  6551   00FDB1                     __end_of___secs_to_tm@days_in_month:
  6552                           	callstack 0
  6553   00FDB1                     _spi1_configuration:
  6554                           	callstack 0
  6555   00FDB1  00                 	db	0
  6556   00FDB2  C0                 	db	192
  6557   00FDB3  01                 	db	1
  6558   00FDB4  00                 	db	0
  6559   00FDB5  0A                 	db	10
  6560   00FDB6  C0                 	db	192
  6561   00FDB7  0B                 	db	11
  6562   00FDB8  00                 	db	0
  6563   00FDB9                     __end_of_spi1_configuration:
  6564                           	callstack 0
  6565   00FDB9                     _dhcpName:
  6566                           	callstack 0
  6567   00FDB9  50                 	db	80
  6568   00FDBA  49                 	db	73
  6569   00FDBB  43                 	db	67
  6570   00FDBC  31                 	db	49
  6571   00FDBD  38                 	db	56
  6572   00FDBE  4C                 	db	76
  6573   00FDBF  46                 	db	70
  6574   00FDC0  32                 	db	50
  6575   00FDC1  36                 	db	54
  6576   00FDC2  4B                 	db	75
  6577   00FDC3  34                 	db	52
  6578   00FDC4  30                 	db	48
  6579   00FDC5  5F                 	db	95
  6580   00FDC6  66                 	db	102
  6581   00FDC7  69                 	db	105
  6582   00FDC8  78                 	db	120
  6583   00FDC9  65                 	db	101
  6584   00FDCA  00                 	db	0
  6585   00FDCB                     __end_of_dhcpName:
  6586                           	callstack 0
  6587   00FDCB                     _broadcastMAC:
  6588                           	callstack 0
  6589   00FDCB  FF                 	db	255
  6590   00FDCC  FF                 	db	255
  6591   00FDCD  FF                 	db	255
  6592   00FDCE  FF                 	db	255
  6593   00FDCF  FF                 	db	255
  6594   00FDD0  FF                 	db	255
  6595   00FDD1                     __end_of_broadcastMAC:
  6596                           	callstack 0
  6597   00FDD1                     _UDP_CallBackTable:
  6598                           	callstack 0
  6599   00FDD1  0044               	dw	68
  6600   00FDD3  00                 	db	0
  6601   00FDD4  00                 	db	0
  6602   00FDD5                     __end_of_UDP_CallBackTable:
  6603                           	callstack 0
  6604   00FDD5  3C                 	db	60	;'<'
  6605   00FDD6  25                 	db	37
  6606   00FDD7  64                 	db	100	;'d'
  6607   00FDD8  3E                 	db	62	;'>'
  6608   00FDD9  25                 	db	37
  6609   00FDDA  64                 	db	100	;'d'
  6610   00FDDB  20                 	db	32
  6611   00FDDC  25                 	db	37
  6612   00FDDD  64                 	db	100	;'d'
  6613   00FDDE  2D                 	db	45
  6614   00FDDF  25                 	db	37
  6615   00FDE0  2E                 	db	46
  6616   00FDE1  32                 	db	50	;'2'
  6617   00FDE2  64                 	db	100	;'d'
  6618   00FDE3  2D                 	db	45
  6619   00FDE4  25                 	db	37
  6620   00FDE5  2E                 	db	46
  6621   00FDE6  32                 	db	50	;'2'
  6622   00FDE7  64                 	db	100	;'d'
  6623   00FDE8  54                 	db	84	;'T'
  6624   00FDE9  25                 	db	37
  6625   00FDEA  2E                 	db	46
  6626   00FDEB  32                 	db	50	;'2'
  6627   00FDEC  64                 	db	100	;'d'
  6628   00FDED  3A                 	db	58	;':'
  6629   00FDEE  25                 	db	37
  6630   00FDEF  2E                 	db	46
  6631   00FDF0  32                 	db	50	;'2'
  6632   00FDF1  64                 	db	100	;'d'
  6633   00FDF2  3A                 	db	58	;':'
  6634   00FDF3  25                 	db	37
  6635   00FDF4  2E                 	db	46
  6636   00FDF5  32                 	db	50	;'2'
  6637   00FDF6  64                 	db	100	;'d'
  6638   00FDF7  5A                 	db	90	;'Z'
  6639   00FDF8  20                 	db	32
  6640   00FDF9  25                 	db	37
  6641   00FDFA  64                 	db	100	;'d'
  6642   00FDFB  2E                 	db	46
  6643   00FDFC  25                 	db	37
  6644   00FDFD  64                 	db	100	;'d'
  6645   00FDFE  2E                 	db	46
  6646   00FDFF  25                 	db	37
  6647   00FE00  64                 	db	100	;'d'
  6648   00FE01  2E                 	db	46
  6649   00FE02  25                 	db	37
  6650   00FE03  64                 	db	100	;'d'
  6651   00FE04  20                 	db	32
  6652   00FE05  25                 	db	37
  6653   00FE06  73                 	db	115	;'s'
  6654   00FE07  20                 	db	32
  6655   00FE08  25                 	db	37
  6656   00FE09  73                 	db	115	;'s'
  6657   00FE0A  20                 	db	32
  6658   00FE0B  25                 	db	37
  6659   00FE0C  73                 	db	115	;'s'
  6660   00FE0D  20                 	db	32
  6661   00FE0E  25                 	db	37
  6662   00FE0F  73                 	db	115	;'s'
  6663   00FE10  5B                 	db	91	;'['
  6664   00FE11  25                 	db	37
  6665   00FE12  73                 	db	115	;'s'
  6666   00FE13  5D                 	db	93	;']'
  6667   00FE14  0D                 	db	13
  6668   00FE15  0A                 	db	10
  6669   00FE16  00                 	db	0
  6670   00FE17                     STR_14:
  6671   00FE17  41                 	db	65	;'A'
  6672   00FE18  44                 	db	68	;'D'
  6673   00FE19  43                 	db	67	;'C'
  6674   00FE1A  30                 	db	48	;'0'
  6675   00FE1B  3A                 	db	58	;':'
  6676   00FE1C  20                 	db	32
  6677   00FE1D  25                 	db	37
  6678   00FE1E  75                 	db	117	;'u'
  6679   00FE1F  2C                 	db	44
  6680   00FE20  20                 	db	32
  6681   00FE21  41                 	db	65	;'A'
  6682   00FE22  44                 	db	68	;'D'
  6683   00FE23  43                 	db	67	;'C'
  6684   00FE24  31                 	db	49	;'1'
  6685   00FE25  3A                 	db	58	;':'
  6686   00FE26  20                 	db	32
  6687   00FE27  25                 	db	37
  6688   00FE28  75                 	db	117	;'u'
  6689   00FE29  2C                 	db	44
  6690   00FE2A  20                 	db	32
  6691   00FE2B  41                 	db	65	;'A'
  6692   00FE2C  44                 	db	68	;'D'
  6693   00FE2D  43                 	db	67	;'C'
  6694   00FE2E  32                 	db	50	;'2'
  6695   00FE2F  3A                 	db	58	;':'
  6696   00FE30  20                 	db	32
  6697   00FE31  25                 	db	37
  6698   00FE32  75                 	db	117	;'u'
  6699   00FE33  0D                 	db	13
  6700   00FE34  0A                 	db	10
  6701   00FE35  00                 	db	0
  6702   00FE36                     STR_15:
  6703   00FE36  54                 	db	84	;'T'
  6704   00FE37  4D                 	db	77	;'M'
  6705   00FE38  52                 	db	82	;'R'
  6706   00FE39  30                 	db	48	;'0'
  6707   00FE3A  20                 	db	32
  6708   00FE3B  49                 	db	73	;'I'
  6709   00FE3C  6E                 	db	110	;'n'
  6710   00FE3D  74                 	db	116	;'t'
  6711   00FE3E  65                 	db	101	;'e'
  6712   00FE3F  72                 	db	114	;'r'
  6713   00FE40  72                 	db	114	;'r'
  6714   00FE41  75                 	db	117	;'u'
  6715   00FE42  70                 	db	112	;'p'
  6716   00FE43  74                 	db	116	;'t'
  6717   00FE44  20                 	db	32
  6718   00FE45  6F                 	db	111	;'o'
  6719   00FE46  63                 	db	99	;'c'
  6720   00FE47  63                 	db	99	;'c'
  6721   00FE48  75                 	db	117	;'u'
  6722   00FE49  72                 	db	114	;'r'
  6723   00FE4A  72                 	db	114	;'r'
  6724   00FE4B  65                 	db	101	;'e'
  6725   00FE4C  64                 	db	100	;'d'
  6726   00FE4D  21                 	db	33
  6727   00FE4E  0A                 	db	10
  6728   00FE4F  0D                 	db	13
  6729   00FE50  00                 	db	0
  6730   00FE51                     STR_21:
  6731   00FE51  0A                 	db	10
  6732   00FE52  0A                 	db	10
  6733   00FE53  53                 	db	83	;'S'
  6734   00FE54  74                 	db	116	;'t'
  6735   00FE55  61                 	db	97	;'a'
  6736   00FE56  72                 	db	114	;'r'
  6737   00FE57  74                 	db	116	;'t'
  6738   00FE58  69                 	db	105	;'i'
  6739   00FE59  6E                 	db	110	;'n'
  6740   00FE5A  67                 	db	103	;'g'
  6741   00FE5B  20                 	db	32
  6742   00FE5C  53                 	db	83	;'S'
  6743   00FE5D  79                 	db	121	;'y'
  6744   00FE5E  73                 	db	115	;'s'
  6745   00FE5F  6C                 	db	108	;'l'
  6746   00FE60  6F                 	db	111	;'o'
  6747   00FE61  67                 	db	103	;'g'
  6748   00FE62  20                 	db	32
  6749   00FE63  61                 	db	97	;'a'
  6750   00FE64  74                 	db	116	;'t'
  6751   00FE65  20                 	db	32
  6752   00FE66  25                 	db	37
  6753   00FE67  6C                 	db	108	;'l'
  6754   00FE68  75                 	db	117	;'u'
  6755   00FE69  0A                 	db	10
  6756   00FE6A  00                 	db	0
  6757   00FE6B                     STR_37:
  6758   00FE6B  45                 	db	69	;'E'
  6759   00FE6C  41                 	db	65	;'A'
  6760   00FE6D  50                 	db	80	;'P'
  6761   00FE6E  6F                 	db	111	;'o'
  6762   00FE6F  6C                 	db	108	;'l'
  6763   00FE70  5F                 	db	95	;'_'
  6764   00FE71  50                 	db	80	;'P'
  6765   00FE72  41                 	db	65	;'A'
  6766   00FE73  43                 	db	67	;'C'
  6767   00FE74  4B                 	db	75	;'K'
  6768   00FE75  45                 	db	69	;'E'
  6769   00FE76  54                 	db	84	;'T'
  6770   00FE77  5F                 	db	95	;'_'
  6771   00FE78  46                 	db	70	;'F'
  6772   00FE79  41                 	db	65	;'A'
  6773   00FE7A  49                 	db	73	;'I'
  6774   00FE7B  4C                 	db	76	;'L'
  6775   00FE7C  55                 	db	85	;'U'
  6776   00FE7D  52                 	db	82	;'R'
  6777   00FE7E  45                 	db	69	;'E'
  6778   00FE7F  00                 	db	0
  6779   00FE80  38                 	db	56	;'8'
  6780   00FE81  30                 	db	48	;'0'
  6781   00FE82  32                 	db	50	;'2'
  6782   00FE83  2E                 	db	46
  6783   00FE84  33                 	db	51	;'3'
  6784   00FE85  20                 	db	32
  6785   00FE86  6C                 	db	108	;'l'
  6786   00FE87  65                 	db	101	;'e'
  6787   00FE88  6E                 	db	110	;'n'
  6788   00FE89  67                 	db	103	;'g'
  6789   00FE8A  74                 	db	116	;'t'
  6790   00FE8B  68                 	db	104	;'h'
  6791   00FE8C  20                 	db	32
  6792   00FE8D  30                 	db	48	;'0'
  6793   00FE8E  78                 	db	120	;'x'
  6794   00FE8F  25                 	db	37
  6795   00FE90  30                 	db	48	;'0'
  6796   00FE91  34                 	db	52	;'4'
  6797   00FE92  6C                 	db	108	;'l'
  6798   00FE93  58                 	db	88	;'X'
  6799   00FE94  00                 	db	0
  6800   00FE95  69                 	db	105	;'i'
  6801   00FE96  63                 	db	99	;'c'
  6802   00FE97  6D                 	db	109	;'m'
  6803   00FE98  70                 	db	112	;'p'
  6804   00FE99  20                 	db	32
  6805   00FE9A  77                 	db	119	;'w'
  6806   00FE9B  72                 	db	114	;'r'
  6807   00FE9C  6F                 	db	111	;'o'
  6808   00FE9D  6E                 	db	110	;'n'
  6809   00FE9E  67                 	db	103	;'g'
  6810   00FE9F  20                 	db	32
  6811   00FEA0  63                 	db	99	;'c'
  6812   00FEA1  6B                 	db	107	;'k'
  6813   00FEA2  73                 	db	115	;'s'
  6814   00FEA3  6D                 	db	109	;'m'
  6815   00FEA4  20                 	db	32
  6816   00FEA5  3A                 	db	58	;':'
  6817   00FEA6  20                 	db	32
  6818   00FEA7  25                 	db	37
  6819   00FEA8  78                 	db	120	;'x'
  6820   00FEA9  00                 	db	0
  6821   00FEAA                     STR_30:
  6822   00FEAA  44                 	db	68	;'D'
  6823   00FEAB  45                 	db	69	;'E'
  6824   00FEAC  53                 	db	83	;'S'
  6825   00FEAD  54                 	db	84	;'T'
  6826   00FEAE  5F                 	db	95	;'_'
  6827   00FEAF  49                 	db	73	;'I'
  6828   00FEB0  50                 	db	80	;'P'
  6829   00FEB1  5F                 	db	95	;'_'
  6830   00FEB2  4E                 	db	78	;'N'
  6831   00FEB3  4F                 	db	79	;'O'
  6832   00FEB4  54                 	db	84	;'T'
  6833   00FEB5  5F                 	db	95	;'_'
  6834   00FEB6  4D                 	db	77	;'M'
  6835   00FEB7  41                 	db	65	;'A'
  6836   00FEB8  54                 	db	84	;'T'
  6837   00FEB9  43                 	db	67	;'C'
  6838   00FEBA  48                 	db	72	;'H'
  6839   00FEBB  45                 	db	69	;'E'
  6840   00FEBC  44                 	db	68	;'D'
  6841   00FEBD  00                 	db	0
  6842   00FEBE                     STR_29:
  6843   00FEBE  49                 	db	73	;'I'
  6844   00FEBF  50                 	db	80	;'P'
  6845   00FEC0  56                 	db	86	;'V'
  6846   00FEC1  34                 	db	52	;'4'
  6847   00FEC2  5F                 	db	95	;'_'
  6848   00FEC3  43                 	db	67	;'C'
  6849   00FEC4  48                 	db	72	;'H'
  6850   00FEC5  45                 	db	69	;'E'
  6851   00FEC6  43                 	db	67	;'C'
  6852   00FEC7  4B                 	db	75	;'K'
  6853   00FEC8  53                 	db	83	;'S'
  6854   00FEC9  55                 	db	85	;'U'
  6855   00FECA  4D                 	db	77	;'M'
  6856   00FECB  5F                 	db	95	;'_'
  6857   00FECC  46                 	db	70	;'F'
  6858   00FECD  41                 	db	65	;'A'
  6859   00FECE  49                 	db	73	;'I'
  6860   00FECF  4C                 	db	76	;'L'
  6861   00FED0  53                 	db	83	;'S'
  6862   00FED1  00                 	db	0
  6863   00FED2                     STR_31:
  6864   00FED2  49                 	db	73	;'I'
  6865   00FED3  43                 	db	67	;'C'
  6866   00FED4  4D                 	db	77	;'M'
  6867   00FED5  50                 	db	80	;'P'
  6868   00FED6  5F                 	db	95	;'_'
  6869   00FED7  43                 	db	67	;'C'
  6870   00FED8  48                 	db	72	;'H'
  6871   00FED9  45                 	db	69	;'E'
  6872   00FEDA  43                 	db	67	;'C'
  6873   00FEDB  4B                 	db	75	;'K'
  6874   00FEDC  53                 	db	83	;'S'
  6875   00FEDD  55                 	db	85	;'U'
  6876   00FEDE  4D                 	db	77	;'M'
  6877   00FEDF  5F                 	db	95	;'_'
  6878   00FEE0  46                 	db	70	;'F'
  6879   00FEE1  41                 	db	65	;'A'
  6880   00FEE2  49                 	db	73	;'I'
  6881   00FEE3  4C                 	db	76	;'L'
  6882   00FEE4  53                 	db	83	;'S'
  6883   00FEE5  00                 	db	0
  6884   00FEE6                     STR_36:
  6885   00FEE6  41                 	db	65	;'A'
  6886   00FEE7  52                 	db	82	;'R'
  6887   00FEE8  50                 	db	80	;'P'
  6888   00FEE9  5F                 	db	95	;'_'
  6889   00FEEA  49                 	db	73	;'I'
  6890   00FEEB  50                 	db	80	;'P'
  6891   00FEEC  5F                 	db	95	;'_'
  6892   00FEED  4E                 	db	78	;'N'
  6893   00FEEE  4F                 	db	79	;'O'
  6894   00FEEF  54                 	db	84	;'T'
  6895   00FEF0  5F                 	db	95	;'_'
  6896   00FEF1  4D                 	db	77	;'M'
  6897   00FEF2  41                 	db	65	;'A'
  6898   00FEF3  54                 	db	84	;'T'
  6899   00FEF4  43                 	db	67	;'C'
  6900   00FEF5  48                 	db	72	;'H'
  6901   00FEF6  45                 	db	69	;'E'
  6902   00FEF7  44                 	db	68	;'D'
  6903   00FEF8  00                 	db	0
  6904   00FEF9                     STR_35:
  6905   00FEF9  50                 	db	80	;'P'
  6906   00FEFA  4F                 	db	79	;'O'
  6907   00FEFB  52                 	db	82	;'R'
  6908   00FEFC  54                 	db	84	;'T'
  6909   00FEFD  5F                 	db	95	;'_'
  6910   00FEFE  4E                 	db	78	;'N'
  6911   00FEFF  4F                 	db	79	;'O'
  6912   00FF00  54                 	db	84	;'T'
  6913   00FF01  5F                 	db	95	;'_'
  6914   00FF02  41                 	db	65	;'A'
  6915   00FF03  56                 	db	86	;'V'
  6916   00FF04  41                 	db	65	;'A'
  6917   00FF05  49                 	db	73	;'I'
  6918   00FF06  4C                 	db	76	;'L'
  6919   00FF07  41                 	db	65	;'A'
  6920   00FF08  42                 	db	66	;'B'
  6921   00FF09  4C                 	db	76	;'L'
  6922   00FF0A  45                 	db	69	;'E'
  6923   00FF0B  00                 	db	0
  6924   00FF0C                     STR_33:
  6925   00FF0C  54                 	db	84	;'T'
  6926   00FF0D  43                 	db	67	;'C'
  6927   00FF0E  50                 	db	80	;'P'
  6928   00FF0F  5F                 	db	95	;'_'
  6929   00FF10  43                 	db	67	;'C'
  6930   00FF11  48                 	db	72	;'H'
  6931   00FF12  45                 	db	69	;'E'
  6932   00FF13  43                 	db	67	;'C'
  6933   00FF14  4B                 	db	75	;'K'
  6934   00FF15  53                 	db	83	;'S'
  6935   00FF16  55                 	db	85	;'U'
  6936   00FF17  4D                 	db	77	;'M'
  6937   00FF18  5F                 	db	95	;'_'
  6938   00FF19  46                 	db	70	;'F'
  6939   00FF1A  41                 	db	65	;'A'
  6940   00FF1B  49                 	db	73	;'I'
  6941   00FF1C  4C                 	db	76	;'L'
  6942   00FF1D  53                 	db	83	;'S'
  6943   00FF1E  00                 	db	0
  6944   00FF1F                     STR_32:
  6945   00FF1F  55                 	db	85	;'U'
  6946   00FF20  44                 	db	68	;'D'
  6947   00FF21  50                 	db	80	;'P'
  6948   00FF22  5F                 	db	95	;'_'
  6949   00FF23  43                 	db	67	;'C'
  6950   00FF24  48                 	db	72	;'H'
  6951   00FF25  45                 	db	69	;'E'
  6952   00FF26  43                 	db	67	;'C'
  6953   00FF27  4B                 	db	75	;'K'
  6954   00FF28  53                 	db	83	;'S'
  6955   00FF29  55                 	db	85	;'U'
  6956   00FF2A  4D                 	db	77	;'M'
  6957   00FF2B  5F                 	db	95	;'_'
  6958   00FF2C  46                 	db	70	;'F'
  6959   00FF2D  41                 	db	65	;'A'
  6960   00FF2E  49                 	db	73	;'I'
  6961   00FF2F  4C                 	db	76	;'L'
  6962   00FF30  53                 	db	83	;'S'
  6963   00FF31  00                 	db	0
  6964   00FF32  38                 	db	56	;'8'
  6965   00FF33  30                 	db	48	;'0'
  6966   00FF34  32                 	db	50	;'2'
  6967   00FF35  2E                 	db	46
  6968   00FF36  33                 	db	51	;'3'
  6969   00FF37  20                 	db	32
  6970   00FF38  74                 	db	116	;'t'
  6971   00FF39  79                 	db	121	;'y'
  6972   00FF3A  70                 	db	112	;'p'
  6973   00FF3B  65                 	db	101	;'e'
  6974   00FF3C  20                 	db	32
  6975   00FF3D  30                 	db	48	;'0'
  6976   00FF3E  78                 	db	120	;'x'
  6977   00FF3F  25                 	db	37
  6978   00FF40  30                 	db	48	;'0'
  6979   00FF41  34                 	db	52	;'4'
  6980   00FF42  6C                 	db	108	;'l'
  6981   00FF43  58                 	db	88	;'X'
  6982   00FF44  00                 	db	0
  6983   00FF45                     STR_26:
  6984   00FF45  54                 	db	84	;'T'
  6985   00FF46  58                 	db	88	;'X'
  6986   00FF47  5F                 	db	95	;'_'
  6987   00FF48  4C                 	db	76	;'L'
  6988   00FF49  4F                 	db	79	;'O'
  6989   00FF4A  47                 	db	71	;'G'
  6990   00FF4B  49                 	db	73	;'I'
  6991   00FF4C  43                 	db	67	;'C'
  6992   00FF4D  5F                 	db	95	;'_'
  6993   00FF4E  4E                 	db	78	;'N'
  6994   00FF4F  4F                 	db	79	;'O'
  6995   00FF50  54                 	db	84	;'T'
  6996   00FF51  5F                 	db	95	;'_'
  6997   00FF52  49                 	db	73	;'I'
  6998   00FF53  44                 	db	68	;'D'
  6999   00FF54  4C                 	db	76	;'L'
  7000   00FF55  45                 	db	69	;'E'
  7001   00FF56  00                 	db	0
  7002   00FF57                     STR_28:
  7003   00FF57  49                 	db	73	;'I'
  7004   00FF58  50                 	db	80	;'P'
  7005   00FF59  5F                 	db	95	;'_'
  7006   00FF5A  57                 	db	87	;'W'
  7007   00FF5B  52                 	db	82	;'R'
  7008   00FF5C  4F                 	db	79	;'O'
  7009   00FF5D  4E                 	db	78	;'N'
  7010   00FF5E  47                 	db	71	;'G'
  7011   00FF5F  5F                 	db	95	;'_'
  7012   00FF60  56                 	db	86	;'V'
  7013   00FF61  45                 	db	69	;'E'
  7014   00FF62  52                 	db	82	;'R'
  7015   00FF63  53                 	db	83	;'S'
  7016   00FF64  49                 	db	73	;'I'
  7017   00FF65  4F                 	db	79	;'O'
  7018   00FF66  4E                 	db	78	;'N'
  7019   00FF67  00                 	db	0
  7020   00FF68  54                 	db	84	;'T'
  7021   00FF69  25                 	db	37
  7022   00FF6A  2E                 	db	46
  7023   00FF6B  32                 	db	50	;'2'
  7024   00FF6C  64                 	db	100	;'d'
  7025   00FF6D  3A                 	db	58	;':'
  7026   00FF6E  25                 	db	37
  7027   00FF6F  2E                 	db	46
  7028   00FF70  32                 	db	50	;'2'
  7029   00FF71  64                 	db	100	;'d'
  7030   00FF72  3A                 	db	58	;':'
  7031   00FF73  25                 	db	37
  7032   00FF74  2E                 	db	46
  7033   00FF75  32                 	db	50	;'2'
  7034   00FF76  64                 	db	100	;'d'
  7035   00FF77  5A                 	db	90	;'Z'
  7036   00FF78  00                 	db	0
  7037   00FF79                     STR_24:
  7038   00FF79  4C                 	db	76	;'L'
  7039   00FF7A  49                 	db	73	;'I'
  7040   00FF7B  4E                 	db	78	;'N'
  7041   00FF7C  4B                 	db	75	;'K'
  7042   00FF7D  5F                 	db	95	;'_'
  7043   00FF7E  4E                 	db	78	;'N'
  7044   00FF7F  4F                 	db	79	;'O'
  7045   00FF80  54                 	db	84	;'T'
  7046   00FF81  5F                 	db	95	;'_'
  7047   00FF82  46                 	db	70	;'F'
  7048   00FF83  4F                 	db	79	;'O'
  7049   00FF84  55                 	db	85	;'U'
  7050   00FF85  4E                 	db	78	;'N'
  7051   00FF86  44                 	db	68	;'D'
  7052   00FF87  00                 	db	0
  7053   00FF88                     STR_27:
  7054   00FF88  4D                 	db	77	;'M'
  7055   00FF89  41                 	db	65	;'A'
  7056   00FF8A  43                 	db	67	;'C'
  7057   00FF8B  5F                 	db	95	;'_'
  7058   00FF8C  4E                 	db	78	;'N'
  7059   00FF8D  4F                 	db	79	;'O'
  7060   00FF8E  54                 	db	84	;'T'
  7061   00FF8F  5F                 	db	95	;'_'
  7062   00FF90  46                 	db	70	;'F'
  7063   00FF91  4F                 	db	79	;'O'
  7064   00FF92  55                 	db	85	;'U'
  7065   00FF93  4E                 	db	78	;'N'
  7066   00FF94  44                 	db	68	;'D'
  7067   00FF95  00                 	db	0
  7068   00FF96                     STR_4:
  7069   00FF96  20                 	db	32
  7070   00FF97  25                 	db	37
  7071   00FF98  64                 	db	100	;'d'
  7072   00FF99  2E                 	db	46
  7073   00FF9A  25                 	db	37
  7074   00FF9B  64                 	db	100	;'d'
  7075   00FF9C  2E                 	db	46
  7076   00FF9D  25                 	db	37
  7077   00FF9E  64                 	db	100	;'d'
  7078   00FF9F  2E                 	db	46
  7079   00FFA0  25                 	db	37
  7080   00FFA1  64                 	db	100	;'d'
  7081   00FFA2  00                 	db	0
  7082   00FFA3  25                 	db	37
  7083   00FFA4  64                 	db	100	;'d'
  7084   00FFA5  2D                 	db	45
  7085   00FFA6  25                 	db	37
  7086   00FFA7  2E                 	db	46
  7087   00FFA8  32                 	db	50	;'2'
  7088   00FFA9  64                 	db	100	;'d'
  7089   00FFAA  2D                 	db	45
  7090   00FFAB  25                 	db	37
  7091   00FFAC  2E                 	db	46
  7092   00FFAD  32                 	db	50	;'2'
  7093   00FFAE  64                 	db	100	;'d'
  7094   00FFAF  00                 	db	0
  7095   00FFB0                     STR_34:
  7096   00FFB0  44                 	db	68	;'D'
  7097   00FFB1  4D                 	db	77	;'M'
  7098   00FFB2  41                 	db	65	;'A'
  7099   00FFB3  5F                 	db	95	;'_'
  7100   00FFB4  54                 	db	84	;'T'
  7101   00FFB5  49                 	db	73	;'I'
  7102   00FFB6  4D                 	db	77	;'M'
  7103   00FFB7  45                 	db	69	;'E'
  7104   00FFB8  4F                 	db	79	;'O'
  7105   00FFB9  55                 	db	85	;'U'
  7106   00FFBA  54                 	db	84	;'T'
  7107   00FFBB  00                 	db	0
  7108   00FFBC                     STR_25:
  7109   00FFBC  42                 	db	66	;'B'
  7110   00FFBD  55                 	db	85	;'U'
  7111   00FFBE  46                 	db	70	;'F'
  7112   00FFBF  46                 	db	70	;'F'
  7113   00FFC0  45                 	db	69	;'E'
  7114   00FFC1  52                 	db	82	;'R'
  7115   00FFC2  5F                 	db	95	;'_'
  7116   00FFC3  42                 	db	66	;'B'
  7117   00FFC4  55                 	db	85	;'U'
  7118   00FFC5  53                 	db	83	;'S'
  7119   00FFC6  59                 	db	89	;'Y'
  7120   00FFC7  00                 	db	0
  7121   00FFC8                     STR_23:
  7122   00FFC8  53                 	db	83	;'S'
  7123   00FFC9  55                 	db	85	;'U'
  7124   00FFCA  43                 	db	67	;'C'
  7125   00FFCB  43                 	db	67	;'C'
  7126   00FFCC  45                 	db	69	;'E'
  7127   00FFCD  53                 	db	83	;'S'
  7128   00FFCE  53                 	db	83	;'S'
  7129   00FFCF  00                 	db	0
  7130   00FFD0  3C                 	db	60	;'<'
  7131   00FFD1  25                 	db	37
  7132   00FFD2  64                 	db	100	;'d'
  7133   00FFD3  3E                 	db	62	;'>'
  7134   00FFD4  25                 	db	37
  7135   00FFD5  64                 	db	100	;'d'
  7136   00FFD6  20                 	db	32
  7137   00FFD7  00                 	db	0
  7138   00FFD8                     STR_46:
  7139   00FFD8  28                 	db	40
  7140   00FFD9  6E                 	db	110	;'n'
  7141   00FFDA  75                 	db	117	;'u'
  7142   00FFDB  6C                 	db	108	;'l'
  7143   00FFDC  6C                 	db	108	;'l'
  7144   00FFDD  29                 	db	41
  7145   00FFDE  00                 	db	0
  7146   00FFDF                     STR_22:
  7147   00FFDF  45                 	db	69	;'E'
  7148   00FFE0  52                 	db	82	;'R'
  7149   00FFE1  52                 	db	82	;'R'
  7150   00FFE2  4F                 	db	79	;'O'
  7151   00FFE3  52                 	db	82	;'R'
  7152   00FFE4  00                 	db	0
  7153   00FFE5                     STR_16:
  7154   00FFE5  6F                 	db	111	;'o'
  7155   00FFE6  6C                 	db	108	;'l'
  7156   00FFE7  61                 	db	97	;'a'
  7157   00FFE8  0A                 	db	10
  7158   00FFE9  0D                 	db	13
  7159   00FFEA  00                 	db	0
  7160   00FFEB  20                 	db	32
  7161   00FFEC  25                 	db	37
  7162   00FFED  73                 	db	115	;'s'
  7163   00FFEE  5B                 	db	91	;'['
  7164   00FFEF  00                 	db	0
  7165   00FFF0  47                 	db	71	;'G'
  7166   00FFF1  4D                 	db	77	;'M'
  7167   00FFF2  54                 	db	84	;'T'
  7168   00FFF3  00                 	db	0
  7169   00FFF4                     STR_5:
  7170   00FFF4  20                 	db	32
  7171   00FFF5  25                 	db	37
  7172   00FFF6  73                 	db	115	;'s'
  7173   00FFF7  00                 	db	0
  7174   00FFF8                     STR_17:
  7175   00FFF8  2E                 	db	46
  7176   00FFF9  00                 	db	0
  7177   00FFFA                     STR_6:
  7178   00FFFA  2D                 	db	45
  7179   00FFFB  00                 	db	0
  7180   00FFFC  5D                 	db	93	;']'
  7181   00FFFD  00                 	db	0
  7182   00FFF4                     STR_7           equ	STR_5
  7183   00FFF4                     STR_9           equ	STR_5
  7184   00FF97                     STR_19          equ	STR_4+1
  7185   00FFF8                     STR_18          equ	STR_17
  7186   00FFFA                     STR_8           equ	STR_6
  7187   00FFFA                     STR_10          equ	STR_6
  7188   00FFFA                     STR_12          equ	STR_6
  7189   00FFFA                     STR_41          equ	STR_6
  7190   00FFFA                     STR_42          equ	STR_6
  7191   00FFFA                     STR_43          equ	STR_6
  7192   00FFFA                     STR_44          equ	STR_6
  7193   00FFFE  00                 	db	0	; dummy byte at the end
  7194   00FD4E                     __smallconst    set	__pmediumconst
  7195   00FD4E                     __mediumconst   set	__pmediumconst
  7196   000003                     __activetblptr  equ	3
  7197                           
  7198                           	psect	nvBANK1
  7199   0001ED                     __pnvBANK1:
  7200                           	callstack 0
  7201   0001ED                     _TMR0_InterruptHandler:
  7202                           	callstack 0
  7203   0001ED                     	ds	2
  7204   0001EF                     _EUSART1_ErrorHandler:
  7205                           	callstack 0
  7206   0001EF                     	ds	2
  7207   0001F1                     _EUSART1_OverrunErrorHandler:
  7208                           	callstack 0
  7209   0001F1                     	ds	2
  7210   0001F3                     _EUSART1_FramingErrorHandler:
  7211                           	callstack 0
  7212   0001F3                     	ds	2
  7213   0001F5                     _TMR1_InterruptHandler:
  7214                           	callstack 0
  7215   0001F5                     	ds	2
  7216   000ECA                     _PIR0bits       set	3786
  7217   000EC2                     _PIE0bits       set	3778
  7218   000EA4                     _T0CKIPPS       set	3748
  7219   000EFD                     _RC6PPS         set	3837
  7220   000EB5                     _RX1PPS         set	3765
  7221   000EC6                     _PIE4bits       set	3782
  7222   000ECE                     _PIR4bits       set	3790
  7223   000ECD                     _PIR3bits       set	3789
  7224   000EFA                     _RC3PPS         set	3834
  7225   000EB8                     _SSP1DATPPS     set	3768
  7226   000EB7                     _SSP1CLKPPS     set	3767
  7227   000EE6                     _PMD5           set	3814
  7228   000EE5                     _PMD4           set	3813
  7229   000EE4                     _PMD3           set	3812
  7230   000EE3                     _PMD2           set	3811
  7231   000EE2                     _PMD1           set	3810
  7232   000EE1                     _PMD0           set	3809
  7233   000EDD                     _OSCTUNE        set	3805
  7234   000EDE                     _OSCFRQ         set	3806
  7235   000EDC                     _OSCEN          set	3804
  7236   000EDA                     _OSCCON3        set	3802
  7237   000ED8                     _OSCCON1        set	3800
  7238   000F59                     _ADCON1bits     set	3929
  7239   000F5A                     _ADCON2bits     set	3930
  7240   000F5B                     _ADCON3bits     set	3931
  7241   000F5C                     _ADACQ          set	3932
  7242   000F57                     _ADCLK          set	3927
  7243   000F56                     _ADACT          set	3926
  7244   000F58                     _ADREF          set	3928
  7245   000F5B                     _ADCON3         set	3931
  7246   000F5A                     _ADCON2         set	3930
  7247   000F59                     _ADCON1         set	3929
  7248   000F5E                     _ADPRE          set	3934
  7249   000F5D                     _ADCAP          set	3933
  7250   000F5F                     _ADPCH          set	3935
  7251   000F2A                     _INLVLE         set	3882
  7252   000F1D                     _INLVLC         set	3869
  7253   000F15                     _INLVLB         set	3861
  7254   000F0D                     _INLVLA         set	3853
  7255   000F1E                     _SLRCONC        set	3870
  7256   000F16                     _SLRCONB        set	3862
  7257   000F0E                     _SLRCONA        set	3854
  7258   000F1F                     _ODCONC         set	3871
  7259   000F17                     _ODCONB         set	3863
  7260   000F0F                     _ODCONA         set	3855
  7261   000F20                     _WPUC           set	3872
  7262   000F10                     _WPUA           set	3856
  7263   000F18                     _WPUB           set	3864
  7264   000F2D                     _WPUE           set	3885
  7265   000F11                     _ANSELA         set	3857
  7266   000F19                     _ANSELB         set	3865
  7267   000F21                     _ANSELC         set	3873
  7268   000FD5                     _T0CON0bits     set	4053
  7269   000FD5                     _T0CON0         set	4053
  7270   000FD3                     _TMR0L          set	4051
  7271   000FD4                     _TMR0H          set	4052
  7272   000FD6                     _T0CON1         set	4054
  7273   000F6E                     _ADERRL         set	3950
  7274   000F6F                     _ADERRH         set	3951
  7275   000F61                     _ADPREVL        set	3937
  7276   000F62                     _ADPREVH        set	3938
  7277   000F72                     _ADFLTRL        set	3954
  7278   000F73                     _ADFLTRH        set	3955
  7279   000F65                     _ADSTATbits     set	3941
  7280   000F70                     _ADACCL         set	3952
  7281   000F71                     _ADACCH         set	3953
  7282   000F67                     _ADCNT          set	3943
  7283   000F63                     _ADRESL         set	3939
  7284   000F64                     _ADRESH         set	3940
  7285   000F60                     _ADCON0bits     set	3936
  7286   000F60                     _ADCON0         set	3936
  7287   000F65                     _ADSTAT         set	3941
  7288   000F66                     _ADRPT          set	3942
  7289   000F69                     _ADSTPTH        set	3945
  7290   000F68                     _ADSTPTL        set	3944
  7291   000F6D                     _ADUTHH         set	3949
  7292   000F6C                     _ADUTHL         set	3948
  7293   000F6B                     _ADLTHH         set	3947
  7294   000F6A                     _ADLTHL         set	3946
  7295   000F8A                     _TRISC          set	3978
  7296   000F89                     _TRISB          set	3977
  7297   000F88                     _TRISA          set	3976
  7298   000F85                     _LATC           set	3973
  7299   000F84                     _LATB           set	3972
  7300   000F83                     _LATA           set	3971
  7301   000F9A                     _TX1REG         set	3994
  7302   000F99                     _RC1REG         set	3993
  7303   000F9D                     _RC1STAbits     set	3997
  7304   000F9E                     _TX1STAbits     set	3998
  7305   000F9C                     _SP1BRGH        set	3996
  7306   000F9B                     _SP1BRGL        set	3995
  7307   000F9E                     _TX1STA         set	3998
  7308   000F9D                     _RC1STA         set	3997
  7309   000F9F                     _BAUD1CON       set	3999
  7310   000FD0                     _T1GCONbits     set	4048
  7311   000FCF                     _T1CONbits      set	4047
  7312   000FCF                     _T1CON          set	4047
  7313   000FCD                     _TMR1L          set	4045
  7314   000FCE                     _TMR1H          set	4046
  7315   000FD2                     _T1CLK          set	4050
  7316   000FD1                     _T1GATE         set	4049
  7317   000FD0                     _T1GCON         set	4048
  7318   000F92                     _SSP1BUF        set	3986
  7319   000F97                     _SSP1CON2       set	3991
  7320   000F96                     _SSP1CON1bits   set	3990
  7321   000F8A                     _TRISCbits      set	3978
  7322   000F93                     _SSP1ADD        set	3987
  7323   000F96                     _SSP1CON1       set	3990
  7324   000F95                     _SSP1STAT       set	3989
  7325   000FF2                     _INTCONbits     set	4082
  7326   007C29                     _LATC1          set	31785
  7327   007F97                     _GIE            set	32663
  7328                           
  7329                           ; #config settings
  7330                           
  7331                           	psect	cinit
  7332   0019CA                     __pcinit:
  7333                           	callstack 0
  7334   0019CA                     start_initialization:
  7335                           	callstack 0
  7336   0019CA                     __initialization:
  7337                           	callstack 0
  7338                           
  7339                           ; Initialize objects allocated to BANK2 (80 bytes)
  7340                           ; load TBLPTR registers with __pidataBANK2
  7341   0019CA  0E68               	movlw	low __pidataBANK2
  7342   0019CC  6EF6               	movwf	tblptrl,c
  7343   0019CE  0E21               	movlw	high __pidataBANK2
  7344   0019D0  6EF7               	movwf	tblptrh,c
  7345   0019D2  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  7346   0019D4  6EF8               	movwf	tblptru,c
  7347   0019D6  EE02  F097         	lfsr	0,__pdataBANK2
  7348   0019DA  EE10 F050          	lfsr	1,80
  7349   0019DE                     copy_data0:
  7350   0019DE  0009               	tblrd		*+
  7351   0019E0  CFF5 FFEE          	movff	tablat,postinc0
  7352   0019E4  50E5               	movf	postdec1,w,c
  7353   0019E6  50E1               	movf	fsr1l,w,c
  7354   0019E8  E1FA               	bnz	copy_data0
  7355                           
  7356                           ; Initialize objects allocated to BANK1 (54 bytes)
  7357                           ; load TBLPTR registers with __pidataBANK1
  7358   0019EA  0E2C               	movlw	low __pidataBANK1
  7359   0019EC  6EF6               	movwf	tblptrl,c
  7360   0019EE  0E25               	movlw	high __pidataBANK1
  7361   0019F0  6EF7               	movwf	tblptrh,c
  7362   0019F2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  7363   0019F4  6EF8               	movwf	tblptru,c
  7364   0019F6  EE01  F0B7         	lfsr	0,__pdataBANK1
  7365   0019FA  EE10 F036          	lfsr	1,54
  7366   0019FE                     copy_data1:
  7367   0019FE  0009               	tblrd		*+
  7368   001A00  CFF5 FFEE          	movff	tablat,postinc0
  7369   001A04  50E5               	movf	postdec1,w,c
  7370   001A06  50E1               	movf	fsr1l,w,c
  7371   001A08  E1FA               	bnz	copy_data1
  7372                           
  7373                           ; Initialize objects allocated to COMRAM (4 bytes)
  7374                           ; load TBLPTR registers with __pidataCOMRAM
  7375   001A0A  0E5A               	movlw	low __pidataCOMRAM
  7376   001A0C  6EF6               	movwf	tblptrl,c
  7377   001A0E  0E2A               	movlw	high __pidataCOMRAM
  7378   001A10  6EF7               	movwf	tblptrh,c
  7379   001A12  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  7380   001A14  6EF8               	movwf	tblptru,c
  7381   001A16  EE00  F050         	lfsr	0,__pdataCOMRAM
  7382   001A1A  EE10 F004          	lfsr	1,4
  7383   001A1E                     copy_data2:
  7384   001A1E  0009               	tblrd		*+
  7385   001A20  CFF5 FFEE          	movff	tablat,postinc0
  7386   001A24  50E5               	movf	postdec1,w,c
  7387   001A26  50E1               	movf	fsr1l,w,c
  7388   001A28  E1FA               	bnz	copy_data2
  7389                           
  7390                           ; Clear objects allocated to BANK3 (200 bytes)
  7391   001A2A  EE03  F000         	lfsr	0,__pbssBANK3
  7392   001A2E  0EC8               	movlw	200
  7393   001A30                     clear_0:
  7394   001A30  6AEE               	clrf	postinc0,c
  7395   001A32  06E8               	decf	wreg,f,c
  7396   001A34  E1FD               	bnz	clear_0
  7397                           
  7398                           ; Clear objects allocated to BANK2 (151 bytes)
  7399   001A36  EE02  F000         	lfsr	0,__pbssBANK2
  7400   001A3A  0E97               	movlw	151
  7401   001A3C                     clear_1:
  7402   001A3C  6AEE               	clrf	postinc0,c
  7403   001A3E  06E8               	decf	wreg,f,c
  7404   001A40  E1FD               	bnz	clear_1
  7405                           
  7406                           ; Clear objects allocated to BANK1 (183 bytes)
  7407   001A42  EE01  F000         	lfsr	0,__pbssBANK1
  7408   001A46  0EB7               	movlw	183
  7409   001A48                     clear_2:
  7410   001A48  6AEE               	clrf	postinc0,c
  7411   001A4A  06E8               	decf	wreg,f,c
  7412   001A4C  E1FD               	bnz	clear_2
  7413                           
  7414                           ; Clear objects allocated to BANK0 (60 bytes)
  7415   001A4E  EE00  F0B1         	lfsr	0,__pbssBANK0
  7416   001A52  0E3C               	movlw	60
  7417   001A54                     clear_3:
  7418   001A54  6AEE               	clrf	postinc0,c
  7419   001A56  06E8               	decf	wreg,f,c
  7420   001A58  E1FD               	bnz	clear_3
  7421                           
  7422                           ; Clear objects allocated to COMRAM (19 bytes)
  7423   001A5A  EE00  F03D         	lfsr	0,__pbssCOMRAM
  7424   001A5E  0E13               	movlw	19
  7425   001A60                     clear_4:
  7426   001A60  6AEE               	clrf	postinc0,c
  7427   001A62  06E8               	decf	wreg,f,c
  7428   001A64  E1FD               	bnz	clear_4
  7429   001A66                     end_of_initialization:
  7430                           	callstack 0
  7431   001A66                     __end_of__initialization:
  7432                           	callstack 0
  7433   001A66  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7434   001A68  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7435   001A6A  0100               	movlb	0
  7436   001A6C  EF02  F011         	goto	_main	;jump to C main() function
  7437                           
  7438                           	psect	bssCOMRAM
  7439   00003D                     __pbssCOMRAM:
  7440                           	callstack 0
  7441   00003D                     _prec:
  7442                           	callstack 0
  7443   00003D                     	ds	2
  7444   00003F                     _tcpDataLength:
  7445                           	callstack 0
  7446   00003F                     	ds	2
  7447   000041                     _currentTCB:
  7448                           	callstack 0
  7449   000041                     	ds	2
  7450   000043                     _tcbList:
  7451                           	callstack 0
  7452   000043                     	ds	2
  7453   000045                     _pTail:
  7454                           	callstack 0
  7455   000045                     	ds	2
  7456   000047                     _pHead:
  7457                           	callstack 0
  7458   000047                     	ds	2
  7459   000049                     _nextPacketPointer:
  7460                           	callstack 0
  7461   000049                     	ds	2
  7462   00004B                     _eth_MAC:
  7463                           	callstack 0
  7464   00004B                     	ds	2
  7465   00004D                     _tcbListSize:
  7466                           	callstack 0
  7467   00004D                     	ds	1
  7468   00004E                     _ethListSize:
  7469                           	callstack 0
  7470   00004E                     	ds	1
  7471   00004F                     _adc_flag:
  7472                           	callstack 0
  7473   00004F                     	ds	1
  7474                           
  7475                           	psect	dataCOMRAM
  7476   000050                     __pdataCOMRAM:
  7477                           	callstack 0
  7478   000050                     _tcpMss:
  7479                           	callstack 0
  7480   000050                     	ds	2
  7481   000052                     _lfsr_value:
  7482                           	callstack 0
  7483   000052                     	ds	1
  7484   000053                     _xor_mask:
  7485                           	callstack 0
  7486   000053                     	ds	1
  7487                           
  7488                           	psect	bssBANK0
  7489   0000B1                     __pbssBANK0:
  7490                           	callstack 0
  7491   0000B1                     _ethData:
  7492                           	callstack 0
  7493   0000B1                     	ds	6
  7494   0000B7                     _receivedRemoteAddress:
  7495                           	callstack 0
  7496   0000B7                     	ds	4
  7497   0000BB                     _width:
  7498                           	callstack 0
  7499   0000BB                     	ds	2
  7500   0000BD                     TMR0_ISR@CountCallBack:
  7501                           	callstack 0
  7502   0000BD                     	ds	2
  7503   0000BF                     _dhcpState:
  7504                           	callstack 0
  7505   0000BF                     	ds	2
  7506   0000C1                     _bytesToSendForRetransmit:
  7507                           	callstack 0
  7508   0000C1                     	ds	2
  7509   0000C3                     _rcvPayloadLen:
  7510                           	callstack 0
  7511   0000C3                     	ds	2
  7512   0000C5                     _nextAvailablePort:
  7513                           	callstack 0
  7514   0000C5                     	ds	2
  7515   0000C7                     TMR1_ISR@CountCallBack:
  7516                           	callstack 0
  7517   0000C7                     	ds	2
  7518   0000C9                     _timer1ReloadVal:
  7519                           	callstack 0
  7520   0000C9                     	ds	2
  7521   0000CB                     _flags:
  7522                           	callstack 0
  7523   0000CB                     	ds	1
  7524   0000CC                     _eusart1RxLastError:
  7525                           	callstack 0
  7526   0000CC                     	ds	1
  7527   0000CD                     _lastBank:
  7528                           	callstack 0
  7529   0000CD                     	ds	1
  7530   0000CE                     _Control_Byte:
  7531                           	callstack 0
  7532   0000CE                     	ds	1
  7533   0000CF                     _dirtyTime:
  7534                           	callstack 0
  7535   0000CF                     	ds	1
  7536   0000D0                     	ds	1
  7537   0000D1                     _tcpHeader:
  7538                           	callstack 0
  7539   0000D1                     	ds	20
  7540   0000E5                     _udpHeader:
  7541                           	callstack 0
  7542   0000E5                     	ds	8
  7543                           
  7544                           	psect	bssBANK1
  7545   000100                     __pbssBANK1:
  7546                           	callstack 0
  7547   000100                     _ip_database_info:
  7548                           	callstack 0
  7549   000100                     	ds	36
  7550   000124                     DHCP_Manage@managementTimer:
  7551                           	callstack 0
  7552   000124                     	ds	4
  7553   000128                     _lastAckNumber:
  7554                           	callstack 0
  7555   000128                     	ds	4
  7556   00012C                     _localSeqnoForRetransmit:
  7557                           	callstack 0
  7558   00012C                     	ds	4
  7559   000130                     _nextSequenceNumber:
  7560                           	callstack 0
  7561   000130                     	ds	4
  7562   000134                     _rxPacketStatusVector:
  7563                           	callstack 0
  7564   000134                     	ds	4
  7565   000138                     _deviceTime:
  7566                           	callstack 0
  7567   000138                     	ds	4
  7568   00013C                     Network_Manage@nowPv:
  7569                           	callstack 0
  7570   00013C                     	ds	4
  7571   000140                     _remoteIpv4Address:
  7572                           	callstack 0
  7573   000140                     	ds	4
  7574   000144                     _old_ip:
  7575                           	callstack 0
  7576   000144                     	ds	4
  7577   000148                     _ip:
  7578                           	callstack 0
  7579   000148                     	ds	4
  7580   00014C                     strtok@p:
  7581                           	callstack 0
  7582   00014C                     	ds	2
  7583   00014E                     _errno:
  7584                           	callstack 0
  7585   00014E                     	ds	2
  7586   000150                     _destPort:
  7587                           	callstack 0
  7588   000150                     	ds	2
  7589   000152                     _txBufferPtrForRetransmit:
  7590                           	callstack 0
  7591   000152                     	ds	2
  7592   000154                     _TXPacketSize:
  7593                           	callstack 0
  7594   000154                     	ds	2
  7595   000156                     _seconds_counter:
  7596                           	callstack 0
  7597   000156                     	ds	2
  7598   000158                     _networkStartPosition:
  7599                           	callstack 0
  7600   000158                     	ds	2
  7601   00015A                     _portUnreachable:
  7602                           	callstack 0
  7603   00015A                     	ds	2
  7604   00015C                     _adc_value2:
  7605                           	callstack 0
  7606   00015C                     	ds	2
  7607   00015E                     _adc_value1:
  7608                           	callstack 0
  7609   00015E                     	ds	2
  7610   000160                     _adc_value0:
  7611                           	callstack 0
  7612   000160                     	ds	2
  7613   000162                     _ip_str:
  7614                           	callstack 0
  7615   000162                     	ds	2
  7616   000164                     _dbuf:
  7617                           	callstack 0
  7618   000164                     	ds	32
  7619   000184                     _ipv4Header:
  7620                           	callstack 0
  7621   000184                     	ds	20
  7622   000198                     makeIpv4AddresstoStr@ip_str:
  7623                           	callstack 0
  7624   000198                     	ds	15
  7625   0001A7                     _ethMAC:
  7626                           	callstack 0
  7627   0001A7                     	ds	6
  7628   0001AD                     _hostMacAddress:
  7629                           	callstack 0
  7630   0001AD                     	ds	6
  7631   0001B3                     _arpTimer:
  7632                           	callstack 0
  7633   0001B3                     	ds	4
  7634                           
  7635                           	psect	dataBANK1
  7636   0001B7                     __pdataBANK1:
  7637                           	callstack 0
  7638   0001B7                     _dhcpData:
  7639                           	callstack 0
  7640   0001B7                     	ds	48
  7641   0001E7                     _macAddress:
  7642                           	callstack 0
  7643   0001E7                     	ds	6
  7644                           
  7645                           	psect	bssBANK2
  7646   000200                     __pbssBANK2:
  7647                           	callstack 0
  7648   000200                     _limit:
  7649                           	callstack 0
  7650   000200                     	ds	23
  7651   000217                     _arpMap:
  7652                           	callstack 0
  7653   000217                     	ds	104
  7654   00027F                     gmtime@tm:
  7655                           	callstack 0
  7656   00027F                     	ds	24
  7657                           
  7658                           	psect	dataBANK2
  7659   000297                     __pdataBANK2:
  7660                           	callstack 0
  7661   000297                     DHCP_Handler@F1305:
  7662                           	callstack 0
  7663   000297                     	ds	48
  7664   0002C7                     _network_errors:
  7665                           	callstack 0
  7666   0002C7                     	ds	32
  7667                           
  7668                           	psect	bssBANK3
  7669   000300                     __pbssBANK3:
  7670                           	callstack 0
  7671   000300                     _txData:
  7672                           	callstack 0
  7673   000300                     	ds	200
  7674                           
  7675                           	psect	cstackBANK3
  7676   0003C8                     __pcstackBANK3:
  7677                           	callstack 0
  7678   0003C8                     ?_printf:
  7679                           	callstack 0
  7680   0003C8                     printf@fmt:
  7681                           	callstack 0
  7682                           
  7683                           ; 2 bytes @ 0x0
  7684   0003C8                     	ds	36
  7685                           
  7686                           	psect	cstackBANK0
  7687   000060                     __pcstackBANK0:
  7688                           	callstack 0
  7689   000060                     ??_INTERRUPT_InterruptManager:
  7690                           
  7691                           ; 1 bytes @ 0x0
  7692   000060                     	ds	14
  7693   00006E                     ?_MAC_getAddress:
  7694                           	callstack 0
  7695   00006E                     ?_ADCC_GetConversionResult:
  7696                           	callstack 0
  7697   00006E                     ?_read_prec_or_width:
  7698                           	callstack 0
  7699   00006E                     ?_time:
  7700                           	callstack 0
  7701   00006E                     ?___lldiv:
  7702                           	callstack 0
  7703   00006E                     ?___aldiv:
  7704                           	callstack 0
  7705   00006E                     ?___almod:
  7706                           	callstack 0
  7707   00006E                     ?___llmod:
  7708                           	callstack 0
  7709   00006E                     SPI1_ExchangeByte@data:
  7710                           	callstack 0
  7711   00006E                     ipdb_init@x:
  7712                           	callstack 0
  7713   00006E                     EUSART1_Write@txData:
  7714                           	callstack 0
  7715   00006E                     ADCC_StartConversion@channel:
  7716                           	callstack 0
  7717   00006E                     read_prec_or_width@fmt:
  7718                           	callstack 0
  7719   00006E                     TMR1_SetInterruptHandler@InterruptHandler:
  7720                           	callstack 0
  7721   00006E                     time@t:
  7722                           	callstack 0
  7723   00006E                     ETH_PacketListReset@ptr:
  7724                           	callstack 0
  7725   00006E                     EUSART1_SetFramingErrorHandler@interruptHandler:
  7726                           	callstack 0
  7727   00006E                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  7728                           	callstack 0
  7729   00006E                     EUSART1_SetErrorHandler@interruptHandler:
  7730                           	callstack 0
  7731   00006E                     TMR0_SetInterruptHandler@InterruptHandler:
  7732                           	callstack 0
  7733   00006E                     ___lldiv@dividend:
  7734                           	callstack 0
  7735   00006E                     ___aldiv@dividend:
  7736                           	callstack 0
  7737   00006E                     ___almod@dividend:
  7738                           	callstack 0
  7739   00006E                     ___llmod@dividend:
  7740                           	callstack 0
  7741   00006E                     ??_SPI1_Open:
  7742   00006E                     
  7743                           ; 1 bytes @ 0xE
  7744   00006E                     	ds	1
  7745   00006F                     SPI1_Open@spi1UniqueConfiguration:
  7746                           	callstack 0
  7747   00006F                     ipdb_init@x_1258:
  7748                           	callstack 0
  7749   00006F                     ENC28_BankSel@r:
  7750                           	callstack 0
  7751   00006F                     putch@txData:
  7752                           	callstack 0
  7753   00006F                     read_prec_or_width@ap:
  7754                           	callstack 0
  7755   00006F                     
  7756                           ; 1 bytes @ 0xF
  7757   00006F                     	ds	1
  7758   000070                     ENC28_BankSel@a:
  7759                           	callstack 0
  7760   000070                     ETH_PacketListReset@index:
  7761                           	callstack 0
  7762   000070                     fputc@c:
  7763                           	callstack 0
  7764   000070                     ??_TMR1_Initialize:
  7765   000070                     ??_ADCC_GetConversionResult:
  7766   000070                     ??_spi_master_open:
  7767   000070                     ??_read_prec_or_width:
  7768                           
  7769                           ; 1 bytes @ 0x10
  7770   000070                     	ds	1
  7771   000071                     ?_ENC28_Rcr16:
  7772                           	callstack 0
  7773   000071                     ENC28_Rcr8@v:
  7774                           	callstack 0
  7775   000071                     ENC28_Wcr8@v:
  7776                           	callstack 0
  7777   000071                     ENC28_Bfs@bits:
  7778                           	callstack 0
  7779   000071                     ENC28_Bfc@bits:
  7780                           	callstack 0
  7781   000071                     ENC28_Wcr16@v:
  7782                           	callstack 0
  7783   000071                     
  7784                           ; 1 bytes @ 0x11
  7785   000071                     	ds	1
  7786   000072                     spi_master_open@config:
  7787                           	callstack 0
  7788   000072                     time@gie_val:
  7789                           	callstack 0
  7790   000072                     ENC28_Rcr8@a:
  7791                           	callstack 0
  7792   000072                     ENC28_Wcr8@a:
  7793                           	callstack 0
  7794   000072                     ENC28_Bfs@a:
  7795                           	callstack 0
  7796   000072                     ENC28_Bfc@a:
  7797                           	callstack 0
  7798   000072                     read_prec_or_width@c:
  7799                           	callstack 0
  7800   000072                     fputc@fp:
  7801                           	callstack 0
  7802   000072                     ___lldiv@divisor:
  7803                           	callstack 0
  7804   000072                     ___aldiv@divisor:
  7805                           	callstack 0
  7806   000072                     ___almod@divisor:
  7807                           	callstack 0
  7808   000072                     ___llmod@divisor:
  7809                           	callstack 0
  7810   000072                     
  7811                           ; 1 bytes @ 0x12
  7812   000072                     	ds	1
  7813   000073                     ENC28_Wcr16@a:
  7814                           	callstack 0
  7815   000073                     ENC28_Rcr16@v:
  7816                           	callstack 0
  7817   000073                     ETH_GetMAC@macAddr:
  7818                           	callstack 0
  7819   000073                     read_prec_or_width@n:
  7820                           	callstack 0
  7821   000073                     time@the_time:
  7822                           	callstack 0
  7823   000073                     ??_fputc:
  7824   000073                     
  7825                           ; 1 bytes @ 0x13
  7826   000073                     	ds	1
  7827   000074                     ENC28_PhyWrite@d:
  7828                           	callstack 0
  7829                           
  7830                           ; 2 bytes @ 0x14
  7831   000074                     	ds	1
  7832   000075                     ENC28_Rcr16@a:
  7833                           	callstack 0
  7834   000075                     ARPV4_Init@x:
  7835                           	callstack 0
  7836   000075                     
  7837                           ; 1 bytes @ 0x15
  7838   000075                     	ds	1
  7839   000076                     ?_ENC28_PhyRead:
  7840                           	callstack 0
  7841   000076                     ENC28_PhyWrite@a:
  7842                           	callstack 0
  7843   000076                     ___aldiv@counter:
  7844                           	callstack 0
  7845   000076                     ___almod@counter:
  7846                           	callstack 0
  7847   000076                     ___llmod@counter:
  7848                           	callstack 0
  7849   000076                     ___lldiv@quotient:
  7850                           	callstack 0
  7851   000076                     
  7852                           ; 1 bytes @ 0x16
  7853   000076                     	ds	1
  7854   000077                     ENC28_PhyWrite@v:
  7855                           	callstack 0
  7856   000077                     ___aldiv@sign:
  7857                           	callstack 0
  7858   000077                     ___almod@sign:
  7859                           	callstack 0
  7860   000077                     
  7861                           ; 1 bytes @ 0x17
  7862   000077                     	ds	1
  7863   000078                     ?_abs:
  7864                           	callstack 0
  7865   000078                     stoa@fp:
  7866                           	callstack 0
  7867   000078                     abs@a:
  7868                           	callstack 0
  7869   000078                     fputs@s:
  7870                           	callstack 0
  7871   000078                     ___aldiv@quotient:
  7872                           	callstack 0
  7873   000078                     ??_ENC28_PhyRead:
  7874                           
  7875                           ; 1 bytes @ 0x18
  7876   000078                     	ds	1
  7877   000079                     ENC28_PhyRead@a:
  7878                           	callstack 0
  7879   000079                     stoa@s:
  7880                           	callstack 0
  7881                           
  7882                           ; 2 bytes @ 0x19
  7883   000079                     	ds	1
  7884   00007A                     ___lldiv@counter:
  7885                           	callstack 0
  7886   00007A                     fputs@fp:
  7887                           	callstack 0
  7888   00007A                     ETH_CheckLinkUp@phstat2:
  7889                           	callstack 0
  7890   00007A                     ??_abs:
  7891                           
  7892                           ; 1 bytes @ 0x1A
  7893   00007A                     	ds	1
  7894   00007B                     fputs@c:
  7895                           	callstack 0
  7896   00007B                     ??_stoa:
  7897                           
  7898                           ; 1 bytes @ 0x1B
  7899   00007B                     	ds	1
  7900   00007C                     fputs@i:
  7901                           	callstack 0
  7902   00007C                     ??_ETH_Init:
  7903   00007C                     
  7904                           ; 1 bytes @ 0x1C
  7905   00007C                     	ds	1
  7906   00007D                     stoa@p:
  7907                           	callstack 0
  7908                           
  7909                           ; 2 bytes @ 0x1D
  7910   00007D                     	ds	1
  7911   00007E                     pad@fp:
  7912                           	callstack 0
  7913                           
  7914                           ; 1 bytes @ 0x1E
  7915   00007E                     	ds	1
  7916   00007F                     pad@buf:
  7917                           	callstack 0
  7918   00007F                     stoa@cp:
  7919                           	callstack 0
  7920                           
  7921                           ; 2 bytes @ 0x1F
  7922   00007F                     	ds	2
  7923   000081                     pad@p:
  7924                           	callstack 0
  7925   000081                     stoa@l:
  7926                           	callstack 0
  7927                           
  7928                           ; 2 bytes @ 0x21
  7929   000081                     	ds	2
  7930   000083                     ??_pad:
  7931                           
  7932                           ; 1 bytes @ 0x23
  7933   000083                     	ds	1
  7934   000084                     pad@i:
  7935                           	callstack 0
  7936                           
  7937                           ; 2 bytes @ 0x24
  7938   000084                     	ds	2
  7939   000086                     dtoa@fp:
  7940                           	callstack 0
  7941   000086                     utoa@fp:
  7942                           	callstack 0
  7943                           
  7944                           ; 1 bytes @ 0x26
  7945   000086                     	ds	1
  7946   000087                     dtoa@d:
  7947                           	callstack 0
  7948   000087                     utoa@d:
  7949                           	callstack 0
  7950                           
  7951                           ; 4 bytes @ 0x27
  7952   000087                     	ds	4
  7953   00008B                     _dtoa$5818:
  7954                           	callstack 0
  7955   00008B                     utoa@w:
  7956                           	callstack 0
  7957   00008B                     
  7958                           ; 1 bytes @ 0x2B
  7959   00008B                     	ds	2
  7960   00008D                     dtoa@w:
  7961                           	callstack 0
  7962   00008D                     utoa@p:
  7963                           	callstack 0
  7964                           
  7965                           ; 2 bytes @ 0x2D
  7966   00008D                     	ds	2
  7967   00008F                     dtoa@p:
  7968                           	callstack 0
  7969   00008F                     utoa@i:
  7970                           	callstack 0
  7971                           
  7972                           ; 2 bytes @ 0x2F
  7973   00008F                     	ds	2
  7974   000091                     dtoa@s:
  7975                           	callstack 0
  7976                           
  7977                           ; 1 bytes @ 0x31
  7978   000091                     	ds	1
  7979   000092                     dtoa@i:
  7980                           	callstack 0
  7981                           
  7982                           ; 2 bytes @ 0x32
  7983   000092                     	ds	2
  7984   000094                     vfpfcnvrt@fp:
  7985                           	callstack 0
  7986                           
  7987                           ; 1 bytes @ 0x34
  7988   000094                     	ds	1
  7989   000095                     vfpfcnvrt@fmt:
  7990                           	callstack 0
  7991                           
  7992                           ; 1 bytes @ 0x35
  7993   000095                     	ds	1
  7994   000096                     vfpfcnvrt@ap:
  7995                           	callstack 0
  7996                           
  7997                           ; 2 bytes @ 0x36
  7998   000096                     	ds	2
  7999   000098                     ??_vfpfcnvrt:
  8000                           
  8001                           ; 1 bytes @ 0x38
  8002   000098                     	ds	2
  8003   00009A                     vfpfcnvrt@done:
  8004                           	callstack 0
  8005                           
  8006                           ; 1 bytes @ 0x3A
  8007   00009A                     	ds	1
  8008   00009B                     vfpfcnvrt@convarg:
  8009                           	callstack 0
  8010                           
  8011                           ; 4 bytes @ 0x3B
  8012   00009B                     	ds	4
  8013   00009F                     vfpfcnvrt@c:
  8014                           	callstack 0
  8015                           
  8016                           ; 1 bytes @ 0x3F
  8017   00009F                     	ds	1
  8018   0000A0                     vfpfcnvrt@cp:
  8019                           	callstack 0
  8020                           
  8021                           ; 2 bytes @ 0x40
  8022   0000A0                     	ds	2
  8023   0000A2                     ?_vfprintf:
  8024                           	callstack 0
  8025   0000A2                     vfprintf@fp:
  8026                           	callstack 0
  8027                           
  8028                           ; 1 bytes @ 0x42
  8029   0000A2                     	ds	1
  8030   0000A3                     vfprintf@fmt:
  8031                           	callstack 0
  8032                           
  8033                           ; 2 bytes @ 0x43
  8034   0000A3                     	ds	2
  8035   0000A5                     vfprintf@ap:
  8036                           	callstack 0
  8037                           
  8038                           ; 1 bytes @ 0x45
  8039   0000A5                     	ds	1
  8040   0000A6                     vfprintf@cfmt:
  8041                           	callstack 0
  8042   0000A6                     
  8043                           ; 1 bytes @ 0x46
  8044   0000A6                     	ds	2
  8045   0000A8                     printf@ap:
  8046                           	callstack 0
  8047   0000A8                     
  8048                           ; 1 bytes @ 0x48
  8049   0000A8                     	ds	2
  8050   0000AA                     ??_LOG_Init:
  8051                           
  8052                           ; 1 bytes @ 0x4A
  8053   0000AA                     	ds	2
  8054   0000AC                     LOG_Init@t:
  8055                           	callstack 0
  8056                           
  8057                           ; 4 bytes @ 0x4C
  8058   0000AC                     	ds	4
  8059   0000B0                     LOG_Init@x:
  8060                           	callstack 0
  8061                           
  8062                           ; 1 bytes @ 0x50
  8063   0000B0                     	ds	1
  8064   0000B1                     
  8065                           ; 1 bytes @ 0x51
  8066                           
  8067                           	psect	cstackCOMRAM
  8068   000001                     __pcstackCOMRAM:
  8069                           	callstack 0
  8070   000001                     ?i2_read_prec_or_width:
  8071                           	callstack 0
  8072   000001                     ?i2___lldiv:
  8073                           	callstack 0
  8074   000001                     ?i2___aldiv:
  8075                           	callstack 0
  8076   000001                     ?i2___almod:
  8077                           	callstack 0
  8078   000001                     ?i2___llmod:
  8079                           	callstack 0
  8080   000001                     i2EUSART1_Write@txData:
  8081                           	callstack 0
  8082   000001                     i2read_prec_or_width@fmt:
  8083                           	callstack 0
  8084   000001                     TMR1_WriteTimer@timerVal:
  8085                           	callstack 0
  8086   000001                     i2___lldiv@dividend:
  8087                           	callstack 0
  8088   000001                     i2___aldiv@dividend:
  8089                           	callstack 0
  8090   000001                     i2___almod@dividend:
  8091                           	callstack 0
  8092   000001                     i2___llmod@dividend:
  8093                           	callstack 0
  8094   000001                     
  8095                           ; 1 bytes @ 0x0
  8096   000001                     	ds	1
  8097   000002                     i2putch@txData:
  8098                           	callstack 0
  8099   000002                     i2read_prec_or_width@ap:
  8100                           	callstack 0
  8101   000002                     
  8102                           ; 1 bytes @ 0x1
  8103   000002                     	ds	1
  8104   000003                     i2fputc@c:
  8105                           	callstack 0
  8106   000003                     ??i2_read_prec_or_width:
  8107                           
  8108                           ; 1 bytes @ 0x2
  8109   000003                     	ds	2
  8110   000005                     i2read_prec_or_width@c:
  8111                           	callstack 0
  8112   000005                     i2fputc@fp:
  8113                           	callstack 0
  8114   000005                     i2___lldiv@divisor:
  8115                           	callstack 0
  8116   000005                     i2___aldiv@divisor:
  8117                           	callstack 0
  8118   000005                     i2___almod@divisor:
  8119                           	callstack 0
  8120   000005                     i2___llmod@divisor:
  8121                           	callstack 0
  8122                           
  8123                           ; 4 bytes @ 0x4
  8124   000005                     	ds	1
  8125   000006                     i2read_prec_or_width@n:
  8126                           	callstack 0
  8127   000006                     ??i2_fputc:
  8128                           
  8129                           ; 1 bytes @ 0x5
  8130   000006                     	ds	3
  8131   000009                     i2___aldiv@counter:
  8132                           	callstack 0
  8133   000009                     i2___almod@counter:
  8134                           	callstack 0
  8135   000009                     i2___llmod@counter:
  8136                           	callstack 0
  8137   000009                     i2___lldiv@quotient:
  8138                           	callstack 0
  8139   000009                     
  8140                           ; 1 bytes @ 0x8
  8141   000009                     	ds	1
  8142   00000A                     i2___aldiv@sign:
  8143                           	callstack 0
  8144   00000A                     i2___almod@sign:
  8145                           	callstack 0
  8146                           
  8147                           ; 1 bytes @ 0x9
  8148   00000A                     	ds	1
  8149   00000B                     ?i2_abs:
  8150                           	callstack 0
  8151   00000B                     i2stoa@fp:
  8152                           	callstack 0
  8153   00000B                     i2abs@a:
  8154                           	callstack 0
  8155   00000B                     i2fputs@s:
  8156                           	callstack 0
  8157   00000B                     i2___aldiv@quotient:
  8158                           	callstack 0
  8159                           
  8160                           ; 4 bytes @ 0xA
  8161   00000B                     	ds	1
  8162   00000C                     i2stoa@s:
  8163                           	callstack 0
  8164                           
  8165                           ; 2 bytes @ 0xB
  8166   00000C                     	ds	1
  8167   00000D                     i2___lldiv@counter:
  8168                           	callstack 0
  8169   00000D                     i2fputs@fp:
  8170                           	callstack 0
  8171   00000D                     ??i2_abs:
  8172                           
  8173                           ; 1 bytes @ 0xC
  8174   00000D                     	ds	1
  8175   00000E                     i2fputs@c:
  8176                           	callstack 0
  8177   00000E                     ??i2_stoa:
  8178   00000E                     
  8179                           ; 1 bytes @ 0xD
  8180   00000E                     	ds	1
  8181   00000F                     i2fputs@i:
  8182                           	callstack 0
  8183                           
  8184                           ; 2 bytes @ 0xE
  8185   00000F                     	ds	1
  8186   000010                     i2stoa@p:
  8187                           	callstack 0
  8188                           
  8189                           ; 2 bytes @ 0xF
  8190   000010                     	ds	1
  8191   000011                     i2pad@fp:
  8192                           	callstack 0
  8193                           
  8194                           ; 1 bytes @ 0x10
  8195   000011                     	ds	1
  8196   000012                     i2pad@buf:
  8197                           	callstack 0
  8198   000012                     i2stoa@cp:
  8199                           	callstack 0
  8200                           
  8201                           ; 2 bytes @ 0x11
  8202   000012                     	ds	2
  8203   000014                     i2pad@p:
  8204                           	callstack 0
  8205   000014                     i2stoa@l:
  8206                           	callstack 0
  8207                           
  8208                           ; 2 bytes @ 0x13
  8209   000014                     	ds	2
  8210   000016                     ??i2_pad:
  8211                           
  8212                           ; 1 bytes @ 0x15
  8213   000016                     	ds	1
  8214   000017                     i2pad@i:
  8215                           	callstack 0
  8216                           
  8217                           ; 2 bytes @ 0x16
  8218   000017                     	ds	2
  8219   000019                     i2dtoa@fp:
  8220                           	callstack 0
  8221   000019                     i2utoa@fp:
  8222                           	callstack 0
  8223                           
  8224                           ; 1 bytes @ 0x18
  8225   000019                     	ds	1
  8226   00001A                     i2dtoa@d:
  8227                           	callstack 0
  8228   00001A                     i2utoa@d:
  8229                           	callstack 0
  8230                           
  8231                           ; 4 bytes @ 0x19
  8232   00001A                     	ds	4
  8233   00001E                     i2_dtoa$5818:
  8234                           	callstack 0
  8235   00001E                     i2utoa@w:
  8236                           	callstack 0
  8237   00001E                     
  8238                           ; 1 bytes @ 0x1D
  8239   00001E                     	ds	2
  8240   000020                     i2dtoa@w:
  8241                           	callstack 0
  8242   000020                     i2utoa@p:
  8243                           	callstack 0
  8244                           
  8245                           ; 2 bytes @ 0x1F
  8246   000020                     	ds	2
  8247   000022                     i2dtoa@p:
  8248                           	callstack 0
  8249   000022                     i2utoa@i:
  8250                           	callstack 0
  8251                           
  8252                           ; 2 bytes @ 0x21
  8253   000022                     	ds	2
  8254   000024                     i2dtoa@s:
  8255                           	callstack 0
  8256                           
  8257                           ; 1 bytes @ 0x23
  8258   000024                     	ds	1
  8259   000025                     i2dtoa@i:
  8260                           	callstack 0
  8261                           
  8262                           ; 2 bytes @ 0x24
  8263   000025                     	ds	2
  8264   000027                     i2vfpfcnvrt@fp:
  8265                           	callstack 0
  8266                           
  8267                           ; 1 bytes @ 0x26
  8268   000027                     	ds	1
  8269   000028                     i2vfpfcnvrt@fmt:
  8270                           	callstack 0
  8271                           
  8272                           ; 1 bytes @ 0x27
  8273   000028                     	ds	1
  8274   000029                     i2vfpfcnvrt@ap:
  8275                           	callstack 0
  8276                           
  8277                           ; 1 bytes @ 0x28
  8278   000029                     	ds	1
  8279   00002A                     ??i2_vfpfcnvrt:
  8280                           
  8281                           ; 1 bytes @ 0x29
  8282   00002A                     	ds	2
  8283   00002C                     i2vfpfcnvrt@done:
  8284                           	callstack 0
  8285                           
  8286                           ; 1 bytes @ 0x2B
  8287   00002C                     	ds	1
  8288   00002D                     i2vfpfcnvrt@convarg:
  8289                           	callstack 0
  8290                           
  8291                           ; 4 bytes @ 0x2C
  8292   00002D                     	ds	4
  8293   000031                     i2vfpfcnvrt@c:
  8294                           	callstack 0
  8295                           
  8296                           ; 1 bytes @ 0x30
  8297   000031                     	ds	1
  8298   000032                     i2vfpfcnvrt@cp:
  8299                           	callstack 0
  8300                           
  8301                           ; 2 bytes @ 0x31
  8302   000032                     	ds	2
  8303   000034                     ?i2_vfprintf:
  8304                           	callstack 0
  8305   000034                     i2vfprintf@fp:
  8306                           	callstack 0
  8307                           
  8308                           ; 1 bytes @ 0x33
  8309   000034                     	ds	1
  8310   000035                     i2vfprintf@fmt:
  8311                           	callstack 0
  8312                           
  8313                           ; 2 bytes @ 0x34
  8314   000035                     	ds	2
  8315   000037                     i2vfprintf@ap:
  8316                           	callstack 0
  8317                           
  8318                           ; 1 bytes @ 0x36
  8319   000037                     	ds	1
  8320   000038                     i2vfprintf@cfmt:
  8321                           	callstack 0
  8322   000038                     
  8323                           ; 1 bytes @ 0x37
  8324   000038                     	ds	2
  8325   00003A                     ?i2_printf:
  8326                           	callstack 0
  8327   00003A                     i2printf@fmt:
  8328                           	callstack 0
  8329                           
  8330                           ; 2 bytes @ 0x39
  8331   00003A                     	ds	2
  8332   00003C                     i2printf@ap:
  8333                           	callstack 0
  8334   00003C                     
  8335                           ; 1 bytes @ 0x3B
  8336   00003C                     	ds	1
  8337   00003D                     
  8338                           ; 1 bytes @ 0x3C
  8339 ;;
  8340 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  8341 ;;
  8342 ;; *************** function _main *****************
  8343 ;; Defined at:
  8344 ;;		line 92 in file "main.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;		None
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;		None
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  1    wreg      void 
  8351 ;; Registers used:
  8352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8362 ;;Total ram usage:        0 bytes
  8363 ;; Hardware stack levels required when called: 25
  8364 ;; This function calls:
  8365 ;;		_ReadADCChannels
  8366 ;;		_SYSTEM_Initialize
  8367 ;;		_TMR0_SetInterruptHandler
  8368 ;;		_TMR0_StartTimer
  8369 ;;		_printf
  8370 ;; This function is called by:
  8371 ;;		Startup code after reset
  8372 ;; This function uses a non-reentrant model
  8373 ;;
  8374                           
  8375                           	psect	text0
  8376   002204                     __ptext0:
  8377                           	callstack 0
  8378   002204                     _main:
  8379                           	callstack 6
  8380   002204                     
  8381                           ;main.c: 94:     SYSTEM_Initialize();
  8382   002204  EC5C  F013         	call	_SYSTEM_Initialize	;wreg free
  8383   002208                     
  8384                           ;main.c: 101:     (INTCONbits.GIE = 1);
  8385   002208  8EF2               	bsf	242,7,c	;volatile
  8386   00220A                     
  8387                           ;main.c: 107:     (INTCONbits.PEIE = 1);
  8388   00220A  8CF2               	bsf	242,6,c	;volatile
  8389   00220C                     
  8390                           ;main.c: 112:     TMR0_SetInterruptHandler(my_tmr0_callback);
  8391   00220C  0E9A               	movlw	low _my_tmr0_callback
  8392   00220E  0100               	movlb	0	; () banked
  8393   002210  6F6E               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  8394   002212  0E29               	movlw	high _my_tmr0_callback
  8395   002214  6F6F               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8396   002216  EC08  F015         	call	_TMR0_SetInterruptHandler	;wreg free
  8397   00221A                     
  8398                           ;main.c: 113:     TMR0_StartTimer();
  8399   00221A  EC2F  F015         	call	_TMR0_StartTimer	;wreg free
  8400   00221E                     
  8401                           ;main.c: 115:     ReadADCChannels();
  8402   00221E  EC7E  F00E         	call	_ReadADCChannels	;wreg free
  8403   002222                     
  8404                           ;main.c: 116:     printf("ola\n\r");
  8405   002222  0EE5               	movlw	low STR_16
  8406   002224  0103               	movlb	3	; () banked
  8407   002226  6FC8               	movwf	printf@fmt& (0+255),b
  8408   002228  0EFF               	movlw	high STR_16
  8409   00222A  6FC9               	movwf	(printf@fmt+1)& (0+255),b
  8410   00222C  EC31  F014         	call	_printf	;wreg free
  8411   002230                     l12124:
  8412                           
  8413                           ;main.c: 135:         if (adc_flag) {
  8414   002230  504F               	movf	_adc_flag^0,w,c
  8415   002232  B4D8               	btfsc	status,2,c
  8416   002234  EF1E  F011         	goto	u10271
  8417   002238  EF20  F011         	goto	u10270
  8418   00223C                     u10271:
  8419   00223C  EF18  F011         	goto	l12124
  8420   002240                     u10270:
  8421   002240                     
  8422                           ;main.c: 136:             adc_flag = 0;
  8423   002240  6A4F               	clrf	_adc_flag^0,c
  8424   002242                     
  8425                           ;main.c: 137:             ReadADCChannels();
  8426   002242  EC7E  F00E         	call	_ReadADCChannels	;wreg free
  8427   002246  EF18  F011         	goto	l12124
  8428   00224A  EF6B  F000         	goto	start
  8429   00224E                     __end_of_main:
  8430                           	callstack 0
  8431                           
  8432 ;; *************** function _TMR0_StartTimer *****************
  8433 ;; Defined at:
  8434 ;;		line 87 in file "mcc_generated_files/tmr0.c"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;		None
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;		None
  8439 ;; Return value:  Size  Location     Type
  8440 ;;                  1    wreg      void 
  8441 ;; Registers used:
  8442 ;;		None
  8443 ;; Tracked objects:
  8444 ;;		On entry : 0/0
  8445 ;;		On exit  : 0/0
  8446 ;;		Unchanged: 0/0
  8447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8452 ;;Total ram usage:        0 bytes
  8453 ;; Hardware stack levels used: 1
  8454 ;; Hardware stack levels required when called: 13
  8455 ;; This function calls:
  8456 ;;		Nothing
  8457 ;; This function is called by:
  8458 ;;		_main
  8459 ;; This function uses a non-reentrant model
  8460 ;;
  8461                           
  8462                           	psect	text1
  8463   002A5E                     __ptext1:
  8464                           	callstack 0
  8465   002A5E                     _TMR0_StartTimer:
  8466                           	callstack 17
  8467   002A5E                     
  8468                           ;mcc_generated_files/tmr0.c: 90:     T0CON0bits.T0EN = 1;
  8469   002A5E  8ED5               	bsf	213,7,c	;volatile
  8470   002A60  0012               	return		;funcret
  8471   002A62                     __end_of_TMR0_StartTimer:
  8472                           	callstack 0
  8473                           
  8474 ;; *************** function _SYSTEM_Initialize *****************
  8475 ;; Defined at:
  8476 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8477 ;; Parameters:    Size  Location     Type
  8478 ;;		None
  8479 ;; Auto vars:     Size  Location     Type
  8480 ;;		None
  8481 ;; Return value:  Size  Location     Type
  8482 ;;                  1    wreg      void 
  8483 ;; Registers used:
  8484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8485 ;; Tracked objects:
  8486 ;;		On entry : 0/0
  8487 ;;		On exit  : 0/0
  8488 ;;		Unchanged: 0/0
  8489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8494 ;;Total ram usage:        0 bytes
  8495 ;; Hardware stack levels used: 1
  8496 ;; Hardware stack levels required when called: 24
  8497 ;; This function calls:
  8498 ;;		_ADCC_Initialize
  8499 ;;		_EUSART1_Initialize
  8500 ;;		_INTERRUPT_Initialize
  8501 ;;		_Network_Init
  8502 ;;		_OSCILLATOR_Initialize
  8503 ;;		_PIN_MANAGER_Initialize
  8504 ;;		_PMD_Initialize
  8505 ;;		_SPI1_Initialize
  8506 ;;		_TMR0_Initialize
  8507 ;;		_TMR1_Initialize
  8508 ;; This function is called by:
  8509 ;;		_main
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           	psect	text2
  8514   0026B8                     __ptext2:
  8515                           	callstack 0
  8516   0026B8                     _SYSTEM_Initialize:
  8517                           	callstack 6
  8518   0026B8                     
  8519                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  8520   0026B8  EC31  F015         	call	_INTERRUPT_Initialize	;wreg free
  8521                           
  8522                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  8523   0026BC  ECD6  F014         	call	_PMD_Initialize	;wreg free
  8524   0026C0                     
  8525                           ;mcc_generated_files/mcc.c: 54:     SPI1_Initialize();
  8526   0026C0  EC41  F014         	call	_SPI1_Initialize	;wreg free
  8527   0026C4                     
  8528                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  8529   0026C4  EC61  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  8530   0026C8                     
  8531                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  8532   0026C8  ECC4  F014         	call	_OSCILLATOR_Initialize	;wreg free
  8533   0026CC                     
  8534                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  8535   0026CC  EC17  F013         	call	_ADCC_Initialize	;wreg free
  8536   0026D0                     
  8537                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  8538   0026D0  EC71  F011         	call	_TMR1_Initialize	;wreg free
  8539   0026D4                     
  8540                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  8541   0026D4  EC0E  F014         	call	_TMR0_Initialize	;wreg free
  8542   0026D8                     
  8543                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
  8544   0026D8  EC19  F012         	call	_EUSART1_Initialize	;wreg free
  8545   0026DC                     
  8546                           ;mcc_generated_files/mcc.c: 61:     Network_Init();
  8547   0026DC  ECC2  F013         	call	_Network_Init	;wreg free
  8548   0026E0  0012               	return		;funcret
  8549   0026E2                     __end_of_SYSTEM_Initialize:
  8550                           	callstack 0
  8551                           
  8552 ;; *************** function _TMR1_Initialize *****************
  8553 ;; Defined at:
  8554 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;		None
  8557 ;; Auto vars:     Size  Location     Type
  8558 ;;		None
  8559 ;; Return value:  Size  Location     Type
  8560 ;;                  1    wreg      void 
  8561 ;; Registers used:
  8562 ;;		wreg, status,2, status,0, cstack
  8563 ;; Tracked objects:
  8564 ;;		On entry : 0/0
  8565 ;;		On exit  : 0/0
  8566 ;;		Unchanged: 0/0
  8567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8570 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8571 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8572 ;;Total ram usage:        2 bytes
  8573 ;; Hardware stack levels used: 1
  8574 ;; Hardware stack levels required when called: 14
  8575 ;; This function calls:
  8576 ;;		_TMR1_SetInterruptHandler
  8577 ;; This function is called by:
  8578 ;;		_SYSTEM_Initialize
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582                           	psect	text3
  8583   0022E2                     __ptext3:
  8584                           	callstack 0
  8585   0022E2                     _TMR1_Initialize:
  8586                           	callstack 15
  8587   0022E2                     
  8588                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  8589   0022E2  6AD0               	clrf	208,c	;volatile
  8590                           
  8591                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  8592   0022E4  6AD1               	clrf	209,c	;volatile
  8593   0022E6                     
  8594                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x03;
  8595   0022E6  0E03               	movlw	3
  8596   0022E8  6ED2               	movwf	210,c	;volatile
  8597                           
  8598                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x15;
  8599   0022EA  0E15               	movlw	21
  8600   0022EC  6ECE               	movwf	206,c	;volatile
  8601                           
  8602                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xA0;
  8603   0022EE  0EA0               	movlw	160
  8604   0022F0  6ECD               	movwf	205,c	;volatile
  8605   0022F2                     
  8606                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
  8607   0022F2  010E               	movlb	14	; () banked
  8608   0022F4  91CE               	bcf	206,0,b	;volatile
  8609   0022F6                     
  8610                           ; BSR set to: 14
  8611                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8612   0022F6  50CD               	movf	205,w,c	;volatile
  8613   0022F8  CFCE F070          	movff	4046,??_TMR1_Initialize	;volatile
  8614   0022FC  0100               	movlb	0	; () banked
  8615   0022FE  6B71               	clrf	(??_TMR1_Initialize+1)& (0+255),b
  8616   002300  C070  F071         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  8617   002304  6B70               	clrf	??_TMR1_Initialize& (0+255),b
  8618   002306  1170               	iorwf	??_TMR1_Initialize& (0+255),w,b
  8619   002308  6FC9               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  8620   00230A  5171               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
  8621   00230C  6FCA               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  8622   00230E                     
  8623                           ; BSR set to: 0
  8624                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  8625   00230E  010E               	movlb	14	; () banked
  8626   002310  81C6               	bsf	198,0,b	;volatile
  8627   002312                     
  8628                           ; BSR set to: 14
  8629                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  8630   002312  0E66               	movlw	low _TMR1_DefaultInterruptHandler
  8631   002314  0100               	movlb	0	; () banked
  8632   002316  6F6E               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  8633   002318  0E2A               	movlw	high _TMR1_DefaultInterruptHandler
  8634   00231A  6F6F               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8635   00231C  EC0D  F015         	call	_TMR1_SetInterruptHandler	;wreg free
  8636   002320                     
  8637                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x31;
  8638   002320  0E31               	movlw	49
  8639   002322  6ECF               	movwf	207,c	;volatile
  8640   002324  0012               	return		;funcret
  8641   002326                     __end_of_TMR1_Initialize:
  8642                           	callstack 0
  8643                           
  8644 ;; *************** function _TMR0_Initialize *****************
  8645 ;; Defined at:
  8646 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  8647 ;; Parameters:    Size  Location     Type
  8648 ;;		None
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;		None
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  1    wreg      void 
  8653 ;; Registers used:
  8654 ;;		wreg, status,2, status,0, cstack
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8664 ;;Total ram usage:        0 bytes
  8665 ;; Hardware stack levels used: 1
  8666 ;; Hardware stack levels required when called: 14
  8667 ;; This function calls:
  8668 ;;		_TMR0_SetInterruptHandler
  8669 ;; This function is called by:
  8670 ;;		_SYSTEM_Initialize
  8671 ;; This function uses a non-reentrant model
  8672 ;;
  8673                           
  8674                           	psect	text4
  8675   00281C                     __ptext4:
  8676                           	callstack 0
  8677   00281C                     _TMR0_Initialize:
  8678                           	callstack 15
  8679   00281C                     
  8680                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x07;
  8681   00281C  0E07               	movlw	7
  8682   00281E  6ED6               	movwf	214,c	;volatile
  8683                           
  8684                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x4D;
  8685   002820  0E4D               	movlw	77
  8686   002822  6ED4               	movwf	212,c	;volatile
  8687   002824                     
  8688                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  8689   002824  6AD3               	clrf	211,c	;volatile
  8690   002826                     
  8691                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  8692   002826  010E               	movlb	14	; () banked
  8693   002828  9BCA               	bcf	202,5,b	;volatile
  8694   00282A                     
  8695                           ; BSR set to: 14
  8696                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  8697   00282A  8BC2               	bsf	194,5,b	;volatile
  8698   00282C                     
  8699                           ; BSR set to: 14
  8700                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8701   00282C  0E68               	movlw	low _TMR0_DefaultInterruptHandler
  8702   00282E  0100               	movlb	0	; () banked
  8703   002830  6F6E               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  8704   002832  0E2A               	movlw	high _TMR0_DefaultInterruptHandler
  8705   002834  6F6F               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8706   002836  EC08  F015         	call	_TMR0_SetInterruptHandler	;wreg free
  8707   00283A                     
  8708                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  8709   00283A  0E80               	movlw	128
  8710   00283C  6ED5               	movwf	213,c	;volatile
  8711   00283E  0012               	return		;funcret
  8712   002840                     __end_of_TMR0_Initialize:
  8713                           	callstack 0
  8714                           
  8715 ;; *************** function _TMR0_SetInterruptHandler *****************
  8716 ;; Defined at:
  8717 ;;		line 150 in file "mcc_generated_files/tmr0.c"
  8718 ;; Parameters:    Size  Location     Type
  8719 ;;  InterruptHan    2   14[BANK0 ] PTR FTN()void 
  8720 ;;		 -> TMR0_DefaultInterruptHandler(1), my_tmr0_callback(1), 
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;		None
  8723 ;; Return value:  Size  Location     Type
  8724 ;;                  1    wreg      void 
  8725 ;; Registers used:
  8726 ;;		wreg, status,2, status,0
  8727 ;; Tracked objects:
  8728 ;;		On entry : 0/0
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8732 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8735 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8736 ;;Total ram usage:        2 bytes
  8737 ;; Hardware stack levels used: 1
  8738 ;; Hardware stack levels required when called: 13
  8739 ;; This function calls:
  8740 ;;		Nothing
  8741 ;; This function is called by:
  8742 ;;		_main
  8743 ;;		_TMR0_Initialize
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           	psect	text5
  8748   002A10                     __ptext5:
  8749                           	callstack 0
  8750   002A10                     _TMR0_SetInterruptHandler:
  8751                           	callstack 17
  8752   002A10                     
  8753                           ;mcc_generated_files/tmr0.c: 151:     TMR0_InterruptHandler = InterruptHandler;
  8754   002A10  C06E  F1ED         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  8755   002A14  C06F  F1EE         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  8756   002A18  0012               	return		;funcret
  8757   002A1A                     __end_of_TMR0_SetInterruptHandler:
  8758                           	callstack 0
  8759                           
  8760 ;; *************** function _SPI1_Initialize *****************
  8761 ;; Defined at:
  8762 ;;		line 63 in file "mcc_generated_files/spi1.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;		None
  8765 ;; Auto vars:     Size  Location     Type
  8766 ;;		None
  8767 ;; Return value:  Size  Location     Type
  8768 ;;                  1    wreg      void 
  8769 ;; Registers used:
  8770 ;;		wreg, status,2
  8771 ;; Tracked objects:
  8772 ;;		On entry : 0/0
  8773 ;;		On exit  : 0/0
  8774 ;;		Unchanged: 0/0
  8775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8780 ;;Total ram usage:        0 bytes
  8781 ;; Hardware stack levels used: 1
  8782 ;; Hardware stack levels required when called: 13
  8783 ;; This function calls:
  8784 ;;		Nothing
  8785 ;; This function is called by:
  8786 ;;		_SYSTEM_Initialize
  8787 ;; This function uses a non-reentrant model
  8788 ;;
  8789                           
  8790                           	psect	text6
  8791   002882                     __ptext6:
  8792                           	callstack 0
  8793   002882                     _SPI1_Initialize:
  8794                           	callstack 16
  8795   002882                     
  8796                           ;mcc_generated_files/spi1.c: 66:     SSP1CLKPPS = 19;
  8797   002882  0E13               	movlw	19
  8798   002884  010E               	movlb	14	; () banked
  8799   002886  6FB7               	movwf	183,b	;volatile
  8800                           
  8801                           ;mcc_generated_files/spi1.c: 67:     SSP1DATPPS = 20;
  8802   002888  0E14               	movlw	20
  8803   00288A  6FB8               	movwf	184,b	;volatile
  8804                           
  8805                           ;mcc_generated_files/spi1.c: 68:     RC3PPS = 15;
  8806   00288C  0E0F               	movlw	15
  8807   00288E  6FFA               	movwf	250,b	;volatile
  8808                           
  8809                           ;mcc_generated_files/spi1.c: 70:     SSP1STAT = 0xC0;
  8810   002890  0EC0               	movlw	192
  8811   002892  6E95               	movwf	149,c	;volatile
  8812   002894                     
  8813                           ; BSR set to: 14
  8814                           ;mcc_generated_files/spi1.c: 71:     SSP1CON1 = 0x00;
  8815   002894  6A96               	clrf	150,c	;volatile
  8816                           
  8817                           ;mcc_generated_files/spi1.c: 72:     SSP1ADD = 0x01;
  8818   002896  0E01               	movlw	1
  8819   002898  6E93               	movwf	147,c	;volatile
  8820   00289A                     
  8821                           ; BSR set to: 14
  8822                           ;mcc_generated_files/spi1.c: 73:     TRISCbits.TRISC3 = 0;
  8823   00289A  968A               	bcf	138,3,c	;volatile
  8824   00289C                     
  8825                           ; BSR set to: 14
  8826                           ;mcc_generated_files/spi1.c: 74:     SSP1CON1bits.SSPEN = 0;
  8827   00289C  9A96               	bcf	150,5,c	;volatile
  8828   00289E                     
  8829                           ; BSR set to: 14
  8830   00289E  0012               	return		;funcret
  8831   0028A0                     __end_of_SPI1_Initialize:
  8832                           	callstack 0
  8833                           
  8834 ;; *************** function _PMD_Initialize *****************
  8835 ;; Defined at:
  8836 ;;		line 78 in file "mcc_generated_files/mcc.c"
  8837 ;; Parameters:    Size  Location     Type
  8838 ;;		None
  8839 ;; Auto vars:     Size  Location     Type
  8840 ;;		None
  8841 ;; Return value:  Size  Location     Type
  8842 ;;                  1    wreg      void 
  8843 ;; Registers used:
  8844 ;;		None
  8845 ;; Tracked objects:
  8846 ;;		On entry : 0/0
  8847 ;;		On exit  : 0/0
  8848 ;;		Unchanged: 0/0
  8849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8854 ;;Total ram usage:        0 bytes
  8855 ;; Hardware stack levels used: 1
  8856 ;; Hardware stack levels required when called: 13
  8857 ;; This function calls:
  8858 ;;		Nothing
  8859 ;; This function is called by:
  8860 ;;		_SYSTEM_Initialize
  8861 ;; This function uses a non-reentrant model
  8862 ;;
  8863                           
  8864                           	psect	text7
  8865   0029AC                     __ptext7:
  8866                           	callstack 0
  8867   0029AC                     _PMD_Initialize:
  8868                           	callstack 16
  8869   0029AC                     
  8870                           ;mcc_generated_files/mcc.c: 81:     PMD0 = 0x00;
  8871   0029AC  010E               	movlb	14	; () banked
  8872   0029AE  6BE1               	clrf	225,b	;volatile
  8873                           
  8874                           ;mcc_generated_files/mcc.c: 83:     PMD1 = 0x00;
  8875   0029B0  6BE2               	clrf	226,b	;volatile
  8876                           
  8877                           ;mcc_generated_files/mcc.c: 85:     PMD2 = 0x00;
  8878   0029B2  6BE3               	clrf	227,b	;volatile
  8879                           
  8880                           ;mcc_generated_files/mcc.c: 87:     PMD3 = 0x00;
  8881   0029B4  6BE4               	clrf	228,b	;volatile
  8882                           
  8883                           ;mcc_generated_files/mcc.c: 89:     PMD4 = 0x00;
  8884   0029B6  6BE5               	clrf	229,b	;volatile
  8885                           
  8886                           ;mcc_generated_files/mcc.c: 91:     PMD5 = 0x00;
  8887   0029B8  6BE6               	clrf	230,b	;volatile
  8888   0029BA                     
  8889                           ; BSR set to: 14
  8890   0029BA  0012               	return		;funcret
  8891   0029BC                     __end_of_PMD_Initialize:
  8892                           	callstack 0
  8893                           
  8894 ;; *************** function _PIN_MANAGER_Initialize *****************
  8895 ;; Defined at:
  8896 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;		None
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;		None
  8901 ;; Return value:  Size  Location     Type
  8902 ;;                  1    wreg      void 
  8903 ;; Registers used:
  8904 ;;		wreg, status,2
  8905 ;; Tracked objects:
  8906 ;;		On entry : 0/0
  8907 ;;		On exit  : 0/0
  8908 ;;		Unchanged: 0/0
  8909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8914 ;;Total ram usage:        0 bytes
  8915 ;; Hardware stack levels used: 1
  8916 ;; Hardware stack levels required when called: 13
  8917 ;; This function calls:
  8918 ;;		Nothing
  8919 ;; This function is called by:
  8920 ;;		_SYSTEM_Initialize
  8921 ;; This function uses a non-reentrant model
  8922 ;;
  8923                           
  8924                           	psect	text8
  8925   0020C2                     __ptext8:
  8926                           	callstack 0
  8927   0020C2                     _PIN_MANAGER_Initialize:
  8928                           	callstack 16
  8929   0020C2                     
  8930                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8931   0020C2  6A83               	clrf	131,c	;volatile
  8932                           
  8933                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8934   0020C4  6A84               	clrf	132,c	;volatile
  8935                           
  8936                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8937   0020C6  6A85               	clrf	133,c	;volatile
  8938                           
  8939                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  8940   0020C8  6888               	setf	136,c	;volatile
  8941                           
  8942                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  8943   0020CA  6889               	setf	137,c	;volatile
  8944   0020CC                     
  8945                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xB5;
  8946   0020CC  0EB5               	movlw	181
  8947   0020CE  6E8A               	movwf	138,c	;volatile
  8948                           
  8949                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x61;
  8950   0020D0  0E61               	movlw	97
  8951   0020D2  010F               	movlb	15	; () banked
  8952   0020D4  6F21               	movwf	33,b	;volatile
  8953   0020D6                     
  8954                           ; BSR set to: 15
  8955                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
  8956   0020D6  6919               	setf	25,b	;volatile
  8957                           
  8958                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xEF;
  8959   0020D8  0EEF               	movlw	239
  8960   0020DA  6F11               	movwf	17,b	;volatile
  8961   0020DC                     
  8962                           ; BSR set to: 15
  8963                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  8964   0020DC  6B2D               	clrf	45,b	;volatile
  8965   0020DE                     
  8966                           ; BSR set to: 15
  8967                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  8968   0020DE  6B18               	clrf	24,b	;volatile
  8969   0020E0                     
  8970                           ; BSR set to: 15
  8971                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  8972   0020E0  6B10               	clrf	16,b	;volatile
  8973   0020E2                     
  8974                           ; BSR set to: 15
  8975                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  8976   0020E2  6B20               	clrf	32,b	;volatile
  8977   0020E4                     
  8978                           ; BSR set to: 15
  8979                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  8980   0020E4  6B0F               	clrf	15,b	;volatile
  8981   0020E6                     
  8982                           ; BSR set to: 15
  8983                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  8984   0020E6  6B17               	clrf	23,b	;volatile
  8985   0020E8                     
  8986                           ; BSR set to: 15
  8987                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  8988   0020E8  6B1F               	clrf	31,b	;volatile
  8989   0020EA                     
  8990                           ; BSR set to: 15
  8991                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  8992   0020EA  690E               	setf	14,b	;volatile
  8993   0020EC                     
  8994                           ; BSR set to: 15
  8995                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  8996   0020EC  6916               	setf	22,b	;volatile
  8997   0020EE                     
  8998                           ; BSR set to: 15
  8999                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  9000   0020EE  691E               	setf	30,b	;volatile
  9001   0020F0                     
  9002                           ; BSR set to: 15
  9003                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  9004   0020F0  690D               	setf	13,b	;volatile
  9005   0020F2                     
  9006                           ; BSR set to: 15
  9007                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  9008   0020F2  6915               	setf	21,b	;volatile
  9009   0020F4                     
  9010                           ; BSR set to: 15
  9011                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  9012   0020F4  691D               	setf	29,b	;volatile
  9013                           
  9014                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
  9015   0020F6  0E08               	movlw	8
  9016   0020F8  6F2A               	movwf	42,b	;volatile
  9017                           
  9018                           ;mcc_generated_files/pin_manager.c: 115:     SSP1CLKPPS = 0x13;
  9019   0020FA  0E13               	movlw	19
  9020   0020FC  010E               	movlb	14	; () banked
  9021   0020FE  6FB7               	movwf	183,b	;volatile
  9022                           
  9023                           ;mcc_generated_files/pin_manager.c: 116:     RX1PPS = 0x17;
  9024   002100  0E17               	movlw	23
  9025   002102  6FB5               	movwf	181,b	;volatile
  9026                           
  9027                           ;mcc_generated_files/pin_manager.c: 117:     RC3PPS = 0x0F;
  9028   002104  0E0F               	movlw	15
  9029   002106  6FFA               	movwf	250,b	;volatile
  9030                           
  9031                           ;mcc_generated_files/pin_manager.c: 118:     RC6PPS = 0x09;
  9032   002108  0E09               	movlw	9
  9033   00210A  6FFD               	movwf	253,b	;volatile
  9034                           
  9035                           ;mcc_generated_files/pin_manager.c: 119:     T0CKIPPS = 0x04;
  9036   00210C  0E04               	movlw	4
  9037   00210E  6FA4               	movwf	164,b	;volatile
  9038                           
  9039                           ;mcc_generated_files/pin_manager.c: 120:     SSP1DATPPS = 0x14;
  9040   002110  0E14               	movlw	20
  9041   002112  6FB8               	movwf	184,b	;volatile
  9042   002114                     
  9043                           ; BSR set to: 14
  9044   002114  0012               	return		;funcret
  9045   002116                     __end_of_PIN_MANAGER_Initialize:
  9046                           	callstack 0
  9047                           
  9048 ;; *************** function _OSCILLATOR_Initialize *****************
  9049 ;; Defined at:
  9050 ;;		line 64 in file "mcc_generated_files/mcc.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;		None
  9053 ;; Auto vars:     Size  Location     Type
  9054 ;;		None
  9055 ;; Return value:  Size  Location     Type
  9056 ;;                  1    wreg      void 
  9057 ;; Registers used:
  9058 ;;		wreg, status,2
  9059 ;; Tracked objects:
  9060 ;;		On entry : 0/0
  9061 ;;		On exit  : 0/0
  9062 ;;		Unchanged: 0/0
  9063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9068 ;;Total ram usage:        0 bytes
  9069 ;; Hardware stack levels used: 1
  9070 ;; Hardware stack levels required when called: 13
  9071 ;; This function calls:
  9072 ;;		Nothing
  9073 ;; This function is called by:
  9074 ;;		_SYSTEM_Initialize
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           	psect	text9
  9079   002988                     __ptext9:
  9080                           	callstack 0
  9081   002988                     _OSCILLATOR_Initialize:
  9082                           	callstack 16
  9083   002988                     
  9084                           ;mcc_generated_files/mcc.c: 67:     OSCCON1 = 0x61;
  9085   002988  0E61               	movlw	97
  9086   00298A  010E               	movlb	14	; () banked
  9087   00298C  6FD8               	movwf	216,b	;volatile
  9088   00298E                     
  9089                           ; BSR set to: 14
  9090                           ;mcc_generated_files/mcc.c: 69:     OSCCON3 = 0x00;
  9091   00298E  6BDA               	clrf	218,b	;volatile
  9092   002990                     
  9093                           ; BSR set to: 14
  9094                           ;mcc_generated_files/mcc.c: 71:     OSCEN = 0x00;
  9095   002990  6BDC               	clrf	220,b	;volatile
  9096                           
  9097                           ;mcc_generated_files/mcc.c: 73:     OSCFRQ = 0x04;
  9098   002992  0E04               	movlw	4
  9099   002994  6FDE               	movwf	222,b	;volatile
  9100   002996                     
  9101                           ; BSR set to: 14
  9102                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
  9103   002996  6BDD               	clrf	221,b	;volatile
  9104   002998                     
  9105                           ; BSR set to: 14
  9106   002998  0012               	return		;funcret
  9107   00299A                     __end_of_OSCILLATOR_Initialize:
  9108                           	callstack 0
  9109                           
  9110 ;; *************** function _Network_Init *****************
  9111 ;; Defined at:
  9112 ;;		line 76 in file "mcc_generated_files/TCPIPLibrary/network.c"
  9113 ;; Parameters:    Size  Location     Type
  9114 ;;		None
  9115 ;; Auto vars:     Size  Location     Type
  9116 ;;		None
  9117 ;; Return value:  Size  Location     Type
  9118 ;;                  1    wreg      void 
  9119 ;; Registers used:
  9120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9121 ;; Tracked objects:
  9122 ;;		On entry : 0/0
  9123 ;;		On exit  : 0/0
  9124 ;;		Unchanged: 0/0
  9125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9130 ;;Total ram usage:        0 bytes
  9131 ;; Hardware stack levels used: 1
  9132 ;; Hardware stack levels required when called: 23
  9133 ;; This function calls:
  9134 ;;		_ARPV4_Init
  9135 ;;		_DHCP_init
  9136 ;;		_ETH_Init
  9137 ;;		_IPV4_Init
  9138 ;;		_LOG_Init
  9139 ;;		_Network_WaitForLink
  9140 ;;		_TCP_Init
  9141 ;;		_rtcc_init
  9142 ;;		_timersInit
  9143 ;; This function is called by:
  9144 ;;		_SYSTEM_Initialize
  9145 ;; This function uses a non-reentrant model
  9146 ;;
  9147                           
  9148                           	psect	text10
  9149   002784                     __ptext10:
  9150                           	callstack 0
  9151   002784                     _Network_Init:
  9152                           	callstack 6
  9153   002784                     
  9154                           ;mcc_generated_files/TCPIPLibrary/network.c: 78:     ETH_Init();
  9155   002784  EC48  F004         	call	_ETH_Init	;wreg free
  9156   002788                     
  9157                           ;mcc_generated_files/TCPIPLibrary/network.c: 79:     ARPV4_Init();
  9158   002788  ECE6  F012         	call	_ARPV4_Init	;wreg free
  9159   00278C                     
  9160                           ;mcc_generated_files/TCPIPLibrary/network.c: 80:     IPV4_Init();
  9161   00278C  EC2A  F015         	call	_IPV4_Init	;wreg free
  9162   002790                     
  9163                           ;mcc_generated_files/TCPIPLibrary/network.c: 81:     DHCP_init();
  9164   002790  ECDE  F014         	call	_DHCP_init	;wreg free
  9165   002794                     
  9166                           ;mcc_generated_files/TCPIPLibrary/network.c: 82:     TCP_Init();
  9167   002794  EC86  F013         	call	_TCP_Init	;wreg free
  9168   002798                     
  9169                           ;mcc_generated_files/TCPIPLibrary/network.c: 83:     rtcc_init();
  9170   002798  EC20  F014         	call	_rtcc_init	;wreg free
  9171   00279C                     
  9172                           ;mcc_generated_files/TCPIPLibrary/network.c: 84:     Network_WaitForLink();
  9173   00279C  EC6E  F014         	call	_Network_WaitForLink	;wreg free
  9174   0027A0                     
  9175                           ;mcc_generated_files/TCPIPLibrary/network.c: 85:     timersInit();
  9176   0027A0  EC50  F014         	call	_timersInit	;wreg free
  9177   0027A4                     
  9178                           ;mcc_generated_files/TCPIPLibrary/network.c: 86:     LOG_Init();
  9179   0027A4  ECDD  F00D         	call	_LOG_Init	;wreg free
  9180   0027A8  0012               	return		;funcret
  9181   0027AA                     __end_of_Network_Init:
  9182                           	callstack 0
  9183                           
  9184 ;; *************** function _timersInit *****************
  9185 ;; Defined at:
  9186 ;;		line 89 in file "mcc_generated_files/TCPIPLibrary/network.c"
  9187 ;; Parameters:    Size  Location     Type
  9188 ;;		None
  9189 ;; Auto vars:     Size  Location     Type
  9190 ;;		None
  9191 ;; Return value:  Size  Location     Type
  9192 ;;                  1    wreg      void 
  9193 ;; Registers used:
  9194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9195 ;; Tracked objects:
  9196 ;;		On entry : 0/0
  9197 ;;		On exit  : 0/0
  9198 ;;		Unchanged: 0/0
  9199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9204 ;;Total ram usage:        0 bytes
  9205 ;; Hardware stack levels used: 1
  9206 ;; Hardware stack levels required when called: 14
  9207 ;; This function calls:
  9208 ;;		_time
  9209 ;; This function is called by:
  9210 ;;		_Network_Init
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           	psect	text11
  9215   0028A0                     __ptext11:
  9216                           	callstack 0
  9217   0028A0                     _timersInit:
  9218                           	callstack 14
  9219   0028A0                     
  9220                           ;mcc_generated_files/TCPIPLibrary/network.c: 91:     time(&arpTimer);
  9221   0028A0  0EB3               	movlw	low _arpTimer
  9222   0028A2  0100               	movlb	0	; () banked
  9223   0028A4  6F6E               	movwf	time@t& (0+255),b
  9224   0028A6  0E01               	movlw	high _arpTimer
  9225   0028A8  6F6F               	movwf	(time@t+1)& (0+255),b
  9226   0028AA  ECFF  F00F         	call	_time	;wreg free
  9227   0028AE                     
  9228                           ;mcc_generated_files/TCPIPLibrary/network.c: 92:     arpTimer += 10;
  9229   0028AE  0E0A               	movlw	10
  9230   0028B0  0101               	movlb	1	; () banked
  9231   0028B2  27B3               	addwf	_arpTimer& (0+255),f,b
  9232   0028B4  0E00               	movlw	0
  9233   0028B6  23B4               	addwfc	(_arpTimer+1)& (0+255),f,b
  9234   0028B8  23B5               	addwfc	(_arpTimer+2)& (0+255),f,b
  9235   0028BA  23B6               	addwfc	(_arpTimer+3)& (0+255),f,b
  9236   0028BC                     
  9237                           ; BSR set to: 1
  9238   0028BC  0012               	return		;funcret
  9239   0028BE                     __end_of_timersInit:
  9240                           	callstack 0
  9241                           
  9242 ;; *************** function _rtcc_init *****************
  9243 ;; Defined at:
  9244 ;;		line 60 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
  9245 ;; Parameters:    Size  Location     Type
  9246 ;;		None
  9247 ;; Auto vars:     Size  Location     Type
  9248 ;;		None
  9249 ;; Return value:  Size  Location     Type
  9250 ;;                  1    wreg      void 
  9251 ;; Registers used:
  9252 ;;		wreg, status,2, status,0, cstack
  9253 ;; Tracked objects:
  9254 ;;		On entry : 0/0
  9255 ;;		On exit  : 0/0
  9256 ;;		Unchanged: 0/0
  9257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9262 ;;Total ram usage:        0 bytes
  9263 ;; Hardware stack levels used: 1
  9264 ;; Hardware stack levels required when called: 14
  9265 ;; This function calls:
  9266 ;;		_TMR1_SetInterruptHandler
  9267 ;; This function is called by:
  9268 ;;		_Network_Init
  9269 ;; This function uses a non-reentrant model
  9270 ;;
  9271                           
  9272                           	psect	text12
  9273   002840                     __ptext12:
  9274                           	callstack 0
  9275   002840                     _rtcc_init:
  9276                           	callstack 14
  9277   002840                     
  9278                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 62:     deviceTime = 1293861600;
  9279   002840  0EE0               	movlw	224
  9280   002842  0101               	movlb	1	; () banked
  9281   002844  6F38               	movwf	_deviceTime& (0+255),b	;volatile
  9282   002846  0EC2               	movlw	194
  9283   002848  6F39               	movwf	(_deviceTime+1)& (0+255),b	;volatile
  9284   00284A  0E1E               	movlw	30
  9285   00284C  6F3A               	movwf	(_deviceTime+2)& (0+255),b	;volatile
  9286   00284E  0E4D               	movlw	77
  9287   002850  6F3B               	movwf	(_deviceTime+3)& (0+255),b	;volatile
  9288   002852                     
  9289                           ; BSR set to: 1
  9290                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 63:     TMR1_SetInterruptHandler(rtcc_handler)
      +                          ;
  9291   002852  0ECC               	movlw	low _rtcc_handler
  9292   002854  0100               	movlb	0	; () banked
  9293   002856  6F6E               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  9294   002858  0E29               	movlw	high _rtcc_handler
  9295   00285A  6F6F               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9296   00285C  EC0D  F015         	call	_TMR1_SetInterruptHandler	;wreg free
  9297   002860  0012               	return		;funcret
  9298   002862                     __end_of_rtcc_init:
  9299                           	callstack 0
  9300                           
  9301 ;; *************** function _TMR1_SetInterruptHandler *****************
  9302 ;; Defined at:
  9303 ;;		line 192 in file "mcc_generated_files/tmr1.c"
  9304 ;; Parameters:    Size  Location     Type
  9305 ;;  InterruptHan    2   14[BANK0 ] PTR FTN()void 
  9306 ;;		 -> rtcc_handler(1), TMR1_DefaultInterruptHandler(1), 
  9307 ;; Auto vars:     Size  Location     Type
  9308 ;;		None
  9309 ;; Return value:  Size  Location     Type
  9310 ;;                  1    wreg      void 
  9311 ;; Registers used:
  9312 ;;		wreg, status,2, status,0
  9313 ;; Tracked objects:
  9314 ;;		On entry : 0/0
  9315 ;;		On exit  : 0/0
  9316 ;;		Unchanged: 0/0
  9317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9318 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9321 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9322 ;;Total ram usage:        2 bytes
  9323 ;; Hardware stack levels used: 1
  9324 ;; Hardware stack levels required when called: 13
  9325 ;; This function calls:
  9326 ;;		Nothing
  9327 ;; This function is called by:
  9328 ;;		_TMR1_Initialize
  9329 ;;		_rtcc_init
  9330 ;; This function uses a non-reentrant model
  9331 ;;
  9332                           
  9333                           	psect	text13
  9334   002A1A                     __ptext13:
  9335                           	callstack 0
  9336   002A1A                     _TMR1_SetInterruptHandler:
  9337                           	callstack 15
  9338   002A1A                     
  9339                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
  9340   002A1A  C06E  F1F5         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  9341   002A1E  C06F  F1F6         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  9342   002A22  0012               	return		;funcret
  9343   002A24                     __end_of_TMR1_SetInterruptHandler:
  9344                           	callstack 0
  9345                           
  9346 ;; *************** function _TCP_Init *****************
  9347 ;; Defined at:
  9348 ;;		line 1266 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;		None
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;		None
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1    wreg      void 
  9355 ;; Registers used:
  9356 ;;		wreg, status,2, status,0
  9357 ;; Tracked objects:
  9358 ;;		On entry : 0/0
  9359 ;;		On exit  : 0/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9366 ;;Total ram usage:        0 bytes
  9367 ;; Hardware stack levels used: 1
  9368 ;; Hardware stack levels required when called: 13
  9369 ;; This function calls:
  9370 ;;		Nothing
  9371 ;; This function is called by:
  9372 ;;		_Network_Init
  9373 ;; This function uses a non-reentrant model
  9374 ;;
  9375                           
  9376                           	psect	text14
  9377   00270C                     __ptext14:
  9378                           	callstack 0
  9379   00270C                     _TCP_Init:
  9380                           	callstack 15
  9381   00270C                     
  9382                           ;mcc_generated_files/TCPIPLibrary/tcpv4.c: 1268:     tcbList = ((void*)0);
  9383   00270C  0E00               	movlw	0
  9384   00270E  6E43               	movwf	_tcbList^0,c
  9385   002710  0E00               	movlw	0
  9386   002712  6E44               	movwf	(_tcbList+1)^0,c
  9387   002714                     
  9388                           ;mcc_generated_files/TCPIPLibrary/tcpv4.c: 1269:     tcbListSize = 0;
  9389   002714  6A4D               	clrf	_tcbListSize^0,c
  9390   002716                     
  9391                           ;mcc_generated_files/TCPIPLibrary/tcpv4.c: 1270:     nextAvailablePort = (1024u);
  9392   002716  0E04               	movlw	4
  9393   002718  0100               	movlb	0	; () banked
  9394   00271A  6FC6               	movwf	(_nextAvailablePort+1)& (0+255),b
  9395   00271C  0E00               	movlw	0
  9396   00271E  6FC5               	movwf	_nextAvailablePort& (0+255),b
  9397   002720                     
  9398                           ; BSR set to: 0
  9399                           ;mcc_generated_files/TCPIPLibrary/tcpv4.c: 1271:     nextSequenceNumber = 0;
  9400   002720  0E00               	movlw	0
  9401   002722  0101               	movlb	1	; () banked
  9402   002724  6F30               	movwf	_nextSequenceNumber& (0+255),b
  9403   002726  0E00               	movlw	0
  9404   002728  6F31               	movwf	(_nextSequenceNumber+1)& (0+255),b
  9405   00272A  0E00               	movlw	0
  9406   00272C  6F32               	movwf	(_nextSequenceNumber+2)& (0+255),b
  9407   00272E  0E00               	movlw	0
  9408   002730  6F33               	movwf	(_nextSequenceNumber+3)& (0+255),b
  9409   002732                     
  9410                           ; BSR set to: 1
  9411   002732  0012               	return		;funcret
  9412   002734                     __end_of_TCP_Init:
  9413                           	callstack 0
  9414                           
  9415 ;; *************** function _Network_WaitForLink *****************
  9416 ;; Defined at:
  9417 ;;		line 95 in file "mcc_generated_files/TCPIPLibrary/network.c"
  9418 ;; Parameters:    Size  Location     Type
  9419 ;;		None
  9420 ;; Auto vars:     Size  Location     Type
  9421 ;;		None
  9422 ;; Return value:  Size  Location     Type
  9423 ;;                  1    wreg      void 
  9424 ;; Registers used:
  9425 ;;		wreg, status,2, status,0, cstack
  9426 ;; Tracked objects:
  9427 ;;		On entry : 0/0
  9428 ;;		On exit  : 0/0
  9429 ;;		Unchanged: 0/0
  9430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9435 ;;Total ram usage:        0 bytes
  9436 ;; Hardware stack levels used: 1
  9437 ;; Hardware stack levels required when called: 18
  9438 ;; This function calls:
  9439 ;;		_ETH_CheckLinkUp
  9440 ;; This function is called by:
  9441 ;;		_Network_Init
  9442 ;; This function uses a non-reentrant model
  9443 ;;
  9444                           
  9445                           	psect	text15
  9446   0028DC                     __ptext15:
  9447                           	callstack 0
  9448   0028DC                     _Network_WaitForLink:
  9449                           	callstack 10
  9450   0028DC                     
  9451                           ;mcc_generated_files/TCPIPLibrary/network.c: 97:     while(!ETH_CheckLinkUp()) __asm("no
      +                          p");
  9452   0028DC  EF71  F014         	goto	l9302
  9453   0028E0                     l621:
  9454   0028E0  0000               	nop		;# 
  9455   0028E2                     l9302:
  9456   0028E2  EC71  F013         	call	_ETH_CheckLinkUp	;wreg free
  9457   0028E6  0900               	iorlw	0
  9458   0028E8  B4D8               	btfsc	status,2,c
  9459   0028EA  EF79  F014         	goto	u6991
  9460   0028EE  EF7B  F014         	goto	u6990
  9461   0028F2                     u6991:
  9462   0028F2  EF70  F014         	goto	l621
  9463   0028F6                     u6990:
  9464   0028F6  0012               	return		;funcret
  9465   0028F8                     __end_of_Network_WaitForLink:
  9466                           	callstack 0
  9467                           
  9468 ;; *************** function _LOG_Init *****************
  9469 ;; Defined at:
  9470 ;;		line 97 in file "mcc_generated_files/TCPIPLibrary/log.c"
  9471 ;; Parameters:    Size  Location     Type
  9472 ;;		None
  9473 ;; Auto vars:     Size  Location     Type
  9474 ;;  x               1   80[BANK0 ] unsigned char 
  9475 ;;  t               4   76[BANK0 ] unsigned long 
  9476 ;; Return value:  Size  Location     Type
  9477 ;;                  1    wreg      void 
  9478 ;; Registers used:
  9479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9480 ;; Tracked objects:
  9481 ;;		On entry : 0/0
  9482 ;;		On exit  : 0/0
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9486 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9487 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9488 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9489 ;;Total ram usage:        7 bytes
  9490 ;; Hardware stack levels used: 1
  9491 ;; Hardware stack levels required when called: 22
  9492 ;; This function calls:
  9493 ;;		_printf
  9494 ;;		_time
  9495 ;; This function is called by:
  9496 ;;		_Network_Init
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           	psect	text16
  9501   001BBA                     __ptext16:
  9502                           	callstack 0
  9503   001BBA                     _LOG_Init:
  9504                           	callstack 6
  9505   001BBA                     
  9506                           ;mcc_generated_files/TCPIPLibrary/log.c: 99:     unsigned long t = (unsigned long)time(0
      +                          );
  9507   001BBA  0E00               	movlw	0
  9508   001BBC  0100               	movlb	0	; () banked
  9509   001BBE  6F6E               	movwf	time@t& (0+255),b
  9510   001BC0  0E00               	movlw	0
  9511   001BC2  6F6F               	movwf	(time@t+1)& (0+255),b
  9512   001BC4  ECFF  F00F         	call	_time	;wreg free
  9513   001BC8  C06E  F0AC         	movff	?_time,LOG_Init@t
  9514   001BCC  C06F  F0AD         	movff	?_time+1,LOG_Init@t+1
  9515   001BD0  C070  F0AE         	movff	?_time+2,LOG_Init@t+2
  9516   001BD4  C071  F0AF         	movff	?_time+3,LOG_Init@t+3
  9517   001BD8                     
  9518                           ;mcc_generated_files/TCPIPLibrary/log.c: 100:     printf("\n\nStarting Syslog at %lu\n",
      +                          t);
  9519   001BD8  0E51               	movlw	low STR_21
  9520   001BDA  0103               	movlb	3	; () banked
  9521   001BDC  6FC8               	movwf	printf@fmt& (0+255),b
  9522   001BDE  0EFE               	movlw	high STR_21
  9523   001BE0  6FC9               	movwf	(printf@fmt+1)& (0+255),b
  9524   001BE2  C0AC  F3CA         	movff	LOG_Init@t,?_printf+2
  9525   001BE6  C0AD  F3CB         	movff	LOG_Init@t+1,?_printf+3
  9526   001BEA  C0AE  F3CC         	movff	LOG_Init@t+2,?_printf+4
  9527   001BEE  C0AF  F3CD         	movff	LOG_Init@t+3,?_printf+5
  9528   001BF2  EC31  F014         	call	_printf	;wreg free
  9529   001BF6                     
  9530                           ;mcc_generated_files/TCPIPLibrary/log.c: 101:     for(uint8_t x=0;x<LOG_LAST;x++)
  9531   001BF6  0100               	movlb	0	; () banked
  9532   001BF8  6BB0               	clrf	LOG_Init@x& (0+255),b
  9533   001BFA                     l12048:
  9534                           
  9535                           ; BSR set to: 0
  9536                           ;mcc_generated_files/TCPIPLibrary/log.c: 102:     {;mcc_generated_files/TCPIPLibrary/log
      +                          .c: 103:         limit[(uint8_t)severityThresholdTable[x].logFacility] = severityThresho
      +                          ldTable[x].severityThreshold;
  9537   001BFA  51B0               	movf	LOG_Init@x& (0+255),w,b
  9538   001BFC  0D02               	mullw	2
  9539   001BFE  0E4F               	movlw	low _severityThresholdTable
  9540   001C00  24F3               	addwf	243,w,c
  9541   001C02  6EF6               	movwf	tblptrl,c
  9542   001C04  0EFD               	movlw	high _severityThresholdTable
  9543   001C06  20F4               	addwfc	244,w,c
  9544   001C08  6EF7               	movwf	tblptrh,c
  9545   001C0A                     	if	1	;There are 3 active tblptr bytes
  9546   001C0A  6AF8               	clrf	tblptru,c
  9547   001C0C  0E00               	movlw	low (__mediumconst shr (0+16))
  9548   001C0E  22F8               	addwfc	tblptru,f,c
  9549   001C10                     	endif
  9550   001C10  0008               	tblrd		*
  9551   001C12  50F5               	movf	tablat,w,c
  9552   001C14  6FAA               	movwf	??_LOG_Init& (0+255),b
  9553   001C16  6BAB               	clrf	(??_LOG_Init+1)& (0+255),b
  9554   001C18  0E00               	movlw	low _limit
  9555   001C1A  25AA               	addwf	??_LOG_Init& (0+255),w,b
  9556   001C1C  6ED9               	movwf	fsr2l,c
  9557   001C1E  0E02               	movlw	high _limit
  9558   001C20  21AB               	addwfc	(??_LOG_Init+1)& (0+255),w,b
  9559   001C22  6EDA               	movwf	fsr2h,c
  9560   001C24  51B0               	movf	LOG_Init@x& (0+255),w,b
  9561   001C26  0D02               	mullw	2
  9562   001C28  0E01               	movlw	1
  9563   001C2A  26F3               	addwf	243,f,c
  9564   001C2C  0E00               	movlw	0
  9565   001C2E  22F4               	addwfc	244,f,c
  9566   001C30  0E4F               	movlw	low _severityThresholdTable
  9567   001C32  24F3               	addwf	243,w,c
  9568   001C34  6EF6               	movwf	tblptrl,c
  9569   001C36  0EFD               	movlw	high _severityThresholdTable
  9570   001C38  20F4               	addwfc	244,w,c
  9571   001C3A  6EF7               	movwf	tblptrh,c
  9572   001C3C                     	if	1	;There are 3 active tblptr bytes
  9573   001C3C  6AF8               	clrf	tblptru,c
  9574   001C3E  0E00               	movlw	low (__mediumconst shr (0+16))
  9575   001C40  22F8               	addwfc	tblptru,f,c
  9576   001C42                     	endif
  9577   001C42  0008               	tblrd		*
  9578   001C44  CFF5 FFDF          	movff	tablat,indf2
  9579   001C48                     
  9580                           ; BSR set to: 0
  9581                           ;mcc_generated_files/TCPIPLibrary/log.c: 104:     }
  9582   001C48  2BB0               	incf	LOG_Init@x& (0+255),f,b
  9583   001C4A                     
  9584                           ; BSR set to: 0
  9585   001C4A  0E16               	movlw	22
  9586   001C4C  65B0               	cpfsgt	LOG_Init@x& (0+255),b
  9587   001C4E  EF2B  F00E         	goto	u10231
  9588   001C52  EF2D  F00E         	goto	u10230
  9589   001C56                     u10231:
  9590   001C56  EFFD  F00D         	goto	l12048
  9591   001C5A                     u10230:
  9592   001C5A                     
  9593                           ; BSR set to: 0
  9594   001C5A  0012               	return		;funcret
  9595   001C5C                     __end_of_LOG_Init:
  9596                           	callstack 0
  9597                           
  9598 ;; *************** function _time *****************
  9599 ;; Defined at:
  9600 ;;		line 160 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
  9601 ;; Parameters:    Size  Location     Type
  9602 ;;  t               2   14[BANK0 ] PTR unsigned long 
  9603 ;;		 -> Network_Manage@now(4), arpTimer(4), NULL(0), 
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;  the_time        4   19[BANK0 ] unsigned long 
  9606 ;;  gie_val         1   18[BANK0 ] _Bool 
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  4   14[BANK0 ] unsigned long 
  9609 ;; Registers used:
  9610 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9611 ;; Tracked objects:
  9612 ;;		On entry : 0/0
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9616 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9617 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9619 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9620 ;;Total ram usage:        9 bytes
  9621 ;; Hardware stack levels used: 1
  9622 ;; Hardware stack levels required when called: 13
  9623 ;; This function calls:
  9624 ;;		Nothing
  9625 ;; This function is called by:
  9626 ;;		_LOG_Init
  9627 ;;		_timersInit
  9628 ;;		_logSyslog
  9629 ;;		_Network_Manage
  9630 ;;		_DHCP_Manage
  9631 ;;		_logConsole
  9632 ;; This function uses a non-reentrant model
  9633 ;;
  9634                           
  9635                           	psect	text17
  9636   001FFE                     __ptext17:
  9637                           	callstack 0
  9638   001FFE                     _time:
  9639                           	callstack 14
  9640   001FFE                     
  9641                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 160: time_t time(time_t *t);mcc_generated_file
      +                          s/TCPIPLibrary/rtcc.c: 161: {;mcc_generated_files/TCPIPLibrary/rtcc.c: 162:     _Bool gi
      +                          e_val;;mcc_generated_files/TCPIPLibrary/rtcc.c: 163:     time_t the_time;;mcc_generated_
      +                          files/TCPIPLibrary/rtcc.c: 165:     gie_val = (_Bool)GIE;
  9642   001FFE  0E00               	movlw	0
  9643   002000  BEF2               	btfsc	4082,7,c	;volatile
  9644   002002  0E01               	movlw	1
  9645   002004  0100               	movlb	0	; () banked
  9646   002006  6F72               	movwf	time@gie_val& (0+255),b
  9647   002008                     
  9648                           ; BSR set to: 0
  9649                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 166:     (INTCONbits.GIE = 0);
  9650   002008  9EF2               	bcf	242,7,c	;volatile
  9651   00200A                     
  9652                           ; BSR set to: 0
  9653                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 167:     the_time = deviceTime;
  9654   00200A  C138  F073         	movff	_deviceTime,time@the_time	;volatile
  9655   00200E  C139  F074         	movff	_deviceTime+1,time@the_time+1	;volatile
  9656   002012  C13A  F075         	movff	_deviceTime+2,time@the_time+2	;volatile
  9657   002016  C13B  F076         	movff	_deviceTime+3,time@the_time+3	;volatile
  9658   00201A                     
  9659                           ; BSR set to: 0
  9660                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 168:     GIE = gie_val;
  9661   00201A  B172               	btfsc	time@gie_val& (0+255),0,b
  9662   00201C  D002               	bra	u6805
  9663   00201E  9EF2               	bcf	4082,7,c	;volatile
  9664   002020  D001               	bra	u6806
  9665   002022                     u6805:
  9666   002022  8EF2               	bsf	4082,7,c	;volatile
  9667   002024                     u6806:
  9668   002024                     
  9669                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 170:     if(t)
  9670   002024  0100               	movlb	0	; () banked
  9671   002026  516E               	movf	time@t& (0+255),w,b
  9672   002028  116F               	iorwf	(time@t+1)& (0+255),w,b
  9673   00202A  B4D8               	btfsc	status,2,c
  9674   00202C  EF1A  F010         	goto	u6811
  9675   002030  EF1C  F010         	goto	u6810
  9676   002034                     u6811:
  9677   002034  EF28  F010         	goto	l8954
  9678   002038                     u6810:
  9679   002038                     
  9680                           ; BSR set to: 0
  9681                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 171:     {;mcc_generated_files/TCPIPLibrary/rt
      +                          cc.c: 172:         *t = the_time;
  9682   002038  C06E  FFD9         	movff	time@t,fsr2l
  9683   00203C  C06F  FFDA         	movff	time@t+1,fsr2h
  9684   002040  C073  FFDE         	movff	time@the_time,postinc2
  9685   002044  C074  FFDE         	movff	time@the_time+1,postinc2
  9686   002048  C075  FFDE         	movff	time@the_time+2,postinc2
  9687   00204C  C076  FFDE         	movff	time@the_time+3,postinc2
  9688   002050                     l8954:
  9689                           
  9690                           ; BSR set to: 0
  9691                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 175:     return (the_time);
  9692   002050  C073  F06E         	movff	time@the_time,?_time
  9693   002054  C074  F06F         	movff	time@the_time+1,?_time+1
  9694   002058  C075  F070         	movff	time@the_time+2,?_time+2
  9695   00205C  C076  F071         	movff	time@the_time+3,?_time+3
  9696   002060                     
  9697                           ; BSR set to: 0
  9698   002060  0012               	return		;funcret
  9699   002062                     __end_of_time:
  9700                           	callstack 0
  9701                           
  9702 ;; *************** function _IPV4_Init *****************
  9703 ;; Defined at:
  9704 ;;		line 71 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;		None
  9707 ;; Auto vars:     Size  Location     Type
  9708 ;;		None
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  1    wreg      void 
  9711 ;; Registers used:
  9712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9722 ;;Total ram usage:        0 bytes
  9723 ;; Hardware stack levels used: 1
  9724 ;; Hardware stack levels required when called: 14
  9725 ;; This function calls:
  9726 ;;		_ipdb_init
  9727 ;; This function is called by:
  9728 ;;		_Network_Init
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           	psect	text18
  9733   002A54                     __ptext18:
  9734                           	callstack 0
  9735   002A54                     _IPV4_Init:
  9736                           	callstack 14
  9737   002A54                     
  9738                           ;mcc_generated_files/TCPIPLibrary/ipv4.c: 73:     ipdb_init();
  9739   002A54  EC2E  F00E         	call	_ipdb_init	;wreg free
  9740   002A58  0012               	return		;funcret
  9741   002A5A                     __end_of_IPV4_Init:
  9742                           	callstack 0
  9743                           
  9744 ;; *************** function _ipdb_init *****************
  9745 ;; Defined at:
  9746 ;;		line 31 in file "mcc_generated_files/TCPIPLibrary/ip_database.c"
  9747 ;; Parameters:    Size  Location     Type
  9748 ;;		None
  9749 ;; Auto vars:     Size  Location     Type
  9750 ;;  x               1   15[BANK0 ] unsigned char 
  9751 ;;  x               1   14[BANK0 ] unsigned char 
  9752 ;; Return value:  Size  Location     Type
  9753 ;;                  1    wreg      void 
  9754 ;; Registers used:
  9755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9756 ;; Tracked objects:
  9757 ;;		On entry : 0/0
  9758 ;;		On exit  : 0/0
  9759 ;;		Unchanged: 0/0
  9760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9762 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9764 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9765 ;;Total ram usage:        2 bytes
  9766 ;; Hardware stack levels used: 1
  9767 ;; Hardware stack levels required when called: 13
  9768 ;; This function calls:
  9769 ;;		Nothing
  9770 ;; This function is called by:
  9771 ;;		_IPV4_Init
  9772 ;; This function uses a non-reentrant model
  9773 ;;
  9774                           
  9775                           	psect	text19
  9776   001C5C                     __ptext19:
  9777                           	callstack 0
  9778   001C5C                     _ipdb_init:
  9779                           	callstack 14
  9780   001C5C                     
  9781                           ;mcc_generated_files/TCPIPLibrary/ip_database.c: 33:     ip_database_info.ipv4_myAddress
      +                           = 0;
  9782   001C5C  0E00               	movlw	0
  9783   001C5E  0101               	movlb	1	; () banked
  9784   001C60  6F00               	movwf	_ip_database_info& (0+255),b
  9785   001C62  0E00               	movlw	0
  9786   001C64  6F01               	movwf	(_ip_database_info+1)& (0+255),b
  9787   001C66  0E00               	movlw	0
  9788   001C68  6F02               	movwf	(_ip_database_info+2)& (0+255),b
  9789   001C6A  0E00               	movlw	0
  9790   001C6C  6F03               	movwf	(_ip_database_info+3)& (0+255),b
  9791                           
  9792                           ;mcc_generated_files/TCPIPLibrary/ip_database.c: 34:     ip_database_info.ipv4_subnetMas
      +                          k = 0;
  9793   001C6E  0E00               	movlw	0
  9794   001C70  6F0C               	movwf	(_ip_database_info+12)& (0+255),b
  9795   001C72  0E00               	movlw	0
  9796   001C74  6F0D               	movwf	(_ip_database_info+13)& (0+255),b
  9797   001C76  0E00               	movlw	0
  9798   001C78  6F0E               	movwf	(_ip_database_info+14)& (0+255),b
  9799   001C7A  0E00               	movlw	0
  9800   001C7C  6F0F               	movwf	(_ip_database_info+15)& (0+255),b
  9801                           
  9802                           ;mcc_generated_files/TCPIPLibrary/ip_database.c: 35:     ip_database_info.ipv4_router = 
      +                          0;
  9803   001C7E  0E00               	movlw	0
  9804   001C80  6F10               	movwf	(_ip_database_info+16)& (0+255),b
  9805   001C82  0E00               	movlw	0
  9806   001C84  6F11               	movwf	(_ip_database_info+17)& (0+255),b
  9807   001C86  0E00               	movlw	0
  9808   001C88  6F12               	movwf	(_ip_database_info+18)& (0+255),b
  9809   001C8A  0E00               	movlw	0
  9810   001C8C  6F13               	movwf	(_ip_database_info+19)& (0+255),b
  9811   001C8E                     
  9812                           ; BSR set to: 1
  9813                           ;mcc_generated_files/TCPIPLibrary/ip_database.c: 36:     for(uint8_t x=0; x < 2; x ++)
  9814   001C8E  0100               	movlb	0	; () banked
  9815   001C90  6B6E               	clrf	ipdb_init@x& (0+255),b
  9816   001C92                     l9026:
  9817                           
  9818                           ; BSR set to: 0
  9819                           ;mcc_generated_files/TCPIPLibrary/ip_database.c: 37:         ip_database_info.ipv4_dns[x
      +                          ] = 0;
  9820   001C92  516E               	movf	ipdb_init@x& (0+255),w,b
  9821   001C94  0D04               	mullw	4
  9822   001C96  0E04               	movlw	low (_ip_database_info+4)
  9823   001C98  24F3               	addwf	243,w,c
  9824   001C9A  6ED9               	movwf	fsr2l,c
  9825   001C9C  0E01               	movlw	high (_ip_database_info+4)
  9826   001C9E  20F4               	addwfc	prodh,w,c
  9827   001CA0  6EDA               	movwf	fsr2h,c
  9828   001CA2  6ADE               	clrf	postinc2,c
  9829   001CA4  6ADE               	clrf	postinc2,c
  9830   001CA6  6ADE               	clrf	postinc2,c
  9831   001CA8  6ADD               	clrf	postdec2,c
  9832   001CAA                     
  9833                           ; BSR set to: 0
  9834   001CAA  2B6E               	incf	ipdb_init@x& (0+255),f,b
  9835   001CAC                     
  9836                           ; BSR set to: 0
  9837   001CAC  0E01               	movlw	1
  9838   001CAE  656E               	cpfsgt	ipdb_init@x& (0+255),b
  9839   001CB0  EF5C  F00E         	goto	u6871
  9840   001CB4  EF5E  F00E         	goto	u6870
  9841   001CB8                     u6871:
  9842   001CB8  EF49  F00E         	goto	l9026
  9843   001CBC                     u6870:
  9844   001CBC                     
  9845                           ; BSR set to: 0
  9846                           ;mcc_generated_files/TCPIPLibrary/ip_database.c: 38:     for(uint8_t x=0; x < 2; x++)
  9847   001CBC  6B6F               	clrf	ipdb_init@x_1258& (0+255),b
  9848   001CBE                     l9036:
  9849                           
  9850                           ; BSR set to: 0
  9851                           ;mcc_generated_files/TCPIPLibrary/ip_database.c: 39:         ip_database_info.ipv4_ntpAd
      +                          dress[x] = 0;
  9852   001CBE  516F               	movf	ipdb_init@x_1258& (0+255),w,b
  9853   001CC0  0D04               	mullw	4
  9854   001CC2  0E18               	movlw	low (_ip_database_info+24)
  9855   001CC4  24F3               	addwf	243,w,c
  9856   001CC6  6ED9               	movwf	fsr2l,c
  9857   001CC8  0E01               	movlw	high (_ip_database_info+24)
  9858   001CCA  20F4               	addwfc	prodh,w,c
  9859   001CCC  6EDA               	movwf	fsr2h,c
  9860   001CCE  6ADE               	clrf	postinc2,c
  9861   001CD0  6ADE               	clrf	postinc2,c
  9862   001CD2  6ADE               	clrf	postinc2,c
  9863   001CD4  6ADD               	clrf	postdec2,c
  9864   001CD6                     
  9865                           ; BSR set to: 0
  9866   001CD6  2B6F               	incf	ipdb_init@x_1258& (0+255),f,b
  9867   001CD8                     
  9868                           ; BSR set to: 0
  9869   001CD8  0E01               	movlw	1
  9870   001CDA  656F               	cpfsgt	ipdb_init@x_1258& (0+255),b
  9871   001CDC  EF72  F00E         	goto	u6881
  9872   001CE0  EF74  F00E         	goto	u6880
  9873   001CE4                     u6881:
  9874   001CE4  EF5F  F00E         	goto	l9036
  9875   001CE8                     u6880:
  9876   001CE8                     
  9877                           ; BSR set to: 0
  9878                           ;mcc_generated_files/TCPIPLibrary/ip_database.c: 40:     ip_database_info.ipv4_tftpAddre
      +                          ss = 0;
  9879   001CE8  0E00               	movlw	0
  9880   001CEA  0101               	movlb	1	; () banked
  9881   001CEC  6F20               	movwf	(_ip_database_info+32)& (0+255),b
  9882   001CEE  0E00               	movlw	0
  9883   001CF0  6F21               	movwf	(_ip_database_info+33)& (0+255),b
  9884   001CF2  0E00               	movlw	0
  9885   001CF4  6F22               	movwf	(_ip_database_info+34)& (0+255),b
  9886   001CF6  0E00               	movlw	0
  9887   001CF8  6F23               	movwf	(_ip_database_info+35)& (0+255),b
  9888   001CFA                     
  9889                           ; BSR set to: 1
  9890   001CFA  0012               	return		;funcret
  9891   001CFC                     __end_of_ipdb_init:
  9892                           	callstack 0
  9893                           
  9894 ;; *************** function _ETH_Init *****************
  9895 ;; Defined at:
  9896 ;;		line 335 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
  9897 ;; Parameters:    Size  Location     Type
  9898 ;;		None
  9899 ;; Auto vars:     Size  Location     Type
  9900 ;;		None
  9901 ;; Return value:  Size  Location     Type
  9902 ;;                  1    wreg      void 
  9903 ;; Registers used:
  9904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9905 ;; Tracked objects:
  9906 ;;		On entry : 0/0
  9907 ;;		On exit  : 0/0
  9908 ;;		Unchanged: 0/0
  9909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9912 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9913 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9914 ;;Total ram usage:        1 bytes
  9915 ;; Hardware stack levels used: 1
  9916 ;; Hardware stack levels required when called: 18
  9917 ;; This function calls:
  9918 ;;		_ENC28_Bfs
  9919 ;;		_ENC28_PhyWrite
  9920 ;;		_ENC28_Rcr8
  9921 ;;		_ENC28_Wcr16
  9922 ;;		_ENC28_Wcr8
  9923 ;;		_ETH_CheckLinkUp
  9924 ;;		_ETH_OpenSPI
  9925 ;;		_ETH_PacketListReset
  9926 ;;		_ETH_SendSystemReset
  9927 ;;		_MAC_getAddress
  9928 ;; This function is called by:
  9929 ;;		_Network_Init
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           	psect	text20
  9934   000890                     __ptext20:
  9935                           	callstack 0
  9936   000890                     _ETH_Init:
  9937                           	callstack 10
  9938   000890                     
  9939                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 337:     ETH_OpenSPI();
  9940   000890  EC97  F014         	call	_ETH_OpenSPI	;wreg free
  9941   000894                     
  9942                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 339:     Control_Byte = 0x00;
  9943   000894  0100               	movlb	0	; () banked
  9944   000896  6BCE               	clrf	_Control_Byte& (0+255),b
  9945   000898                     
  9946                           ; BSR set to: 0
  9947                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 341:     ethData.error = 0;
  9948   000898  91B1               	bcf	_ethData& (0+255),0,b	;volatile
  9949   00089A                     
  9950                           ; BSR set to: 0
  9951                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 342:     ethData.up = 0;
  9952   00089A  95B1               	bcf	_ethData& (0+255),2,b	;volatile
  9953   00089C                     
  9954                           ; BSR set to: 0
  9955                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 343:     ethData.linkChange = 0;
  9956   00089C  99B1               	bcf	_ethData& (0+255),4,b	;volatile
  9957   00089E                     
  9958                           ; BSR set to: 0
  9959                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 345:     ETH_PacketListReset();
  9960   00089E  EC8B  F010         	call	_ETH_PacketListReset	;wreg free
  9961   0008A2                     
  9962                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 347:     ethData.saveRDPT = 0;
  9963   0008A2  0E00               	movlw	0
  9964   0008A4  0100               	movlb	0	; () banked
  9965   0008A6  6FB4               	movwf	(_ethData+3)& (0+255),b	;volatile
  9966   0008A8  0E00               	movlw	0
  9967   0008AA  6FB3               	movwf	(_ethData+2)& (0+255),b	;volatile
  9968   0008AC                     
  9969                           ; BSR set to: 0
  9970                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 349:     lastBank = sfr_bank0;
  9971   0008AC  6BCD               	clrf	_lastBank& (0+255),b
  9972   0008AE                     
  9973                           ; BSR set to: 0
  9974                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 351:     _delay((unsigned long)((100)*(600
      +                          0000/4000000.0)));
  9975   0008AE  0E32               	movlw	50
  9976   0008B0                     u10377:
  9977   0008B0  2EE8               	decfsz	wreg,f,c
  9978   0008B2  D7FE               	bra	u10377
  9979   0008B4                     
  9980                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 353:     ETH_SendSystemReset();
  9981   0008B4  EC02  F015         	call	_ETH_SendSystemReset	;wreg free
  9982   0008B8                     
  9983                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 354:     _delay((unsigned long)((10)*(6000
      +                          000/4000.0)));
  9984   0008B8  0E14               	movlw	20
  9985   0008BA  0100               	movlb	0	; () banked
  9986   0008BC  6F7C               	movwf	??_ETH_Init& (0+255),b
  9987   0008BE  0E79               	movlw	121
  9988   0008C0                     u10387:
  9989   0008C0  2EE8               	decfsz	wreg,f,c
  9990   0008C2  D7FE               	bra	u10387
  9991   0008C4  2F7C               	decfsz	??_ETH_Init& (0+255),f,b
  9992   0008C6  D7FC               	bra	u10387
  9993   0008C8  D000               	nop2	
  9994   0008CA                     l9210:
  9995   0008CA  0EFD               	movlw	253
  9996   0008CC  EC9A  F013         	call	_ENC28_Rcr8
  9997   0008D0  0100               	movlb	0	; () banked
  9998   0008D2  6F7C               	movwf	??_ETH_Init& (0+255),b
  9999   0008D4  A17C               	btfss	??_ETH_Init& (0+255),0,b
 10000   0008D6  EF6F  F004         	goto	u6971
 10001   0008DA  EF71  F004         	goto	u6970
 10002   0008DE                     u6971:
 10003   0008DE  EF65  F004         	goto	l9210
 10004   0008E2                     u6970:
 10005   0008E2                     
 10006                           ; BSR set to: 0
 10007                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 360:     nextPacketPointer = (0);
 10008   0008E2  0E00               	movlw	0
 10009   0008E4  6E4A               	movwf	(_nextPacketPointer+1)^0,c
 10010   0008E6  0E00               	movlw	0
 10011   0008E8  6E49               	movwf	_nextPacketPointer^0,c
 10012   0008EA                     
 10013                           ; BSR set to: 0
 10014                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 362:     ENC28_Bfs (J60_ECON2, 0x80);
 10015   0008EA  0E80               	movlw	128
 10016   0008EC  6F71               	movwf	ENC28_Bfs@bits& (0+255),b
 10017   0008EE  0EFE               	movlw	254
 10018   0008F0  ECD5  F013         	call	_ENC28_Bfs
 10019   0008F4                     
 10020                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 365:     ENC28_Wcr16(J60_ETXSTL, ((0x1FFF)
      +                           - (((1518) + (7)) << 1)));
 10021   0008F4  0E14               	movlw	20
 10022   0008F6  0100               	movlb	0	; () banked
 10023   0008F8  6F72               	movwf	(ENC28_Wcr16@v+1)& (0+255),b
 10024   0008FA  0E15               	movlw	21
 10025   0008FC  6F71               	movwf	ENC28_Wcr16@v& (0+255),b
 10026   0008FE  0E04               	movlw	4
 10027   000900  ECF8  F011         	call	_ENC28_Wcr16
 10028   000904                     
 10029                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 366:     ENC28_Wcr16(J60_ETXNDL, ((0x1FFF)
      +                          ));
 10030   000904  0E1F               	movlw	31
 10031   000906  0100               	movlb	0	; () banked
 10032   000908  6F72               	movwf	(ENC28_Wcr16@v+1)& (0+255),b
 10033   00090A  6971               	setf	ENC28_Wcr16@v& (0+255),b
 10034   00090C  0E06               	movlw	6
 10035   00090E  ECF8  F011         	call	_ENC28_Wcr16
 10036   000912                     
 10037                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 367:     ENC28_Wcr16(J60_ERXSTL, (0));
 10038   000912  0E00               	movlw	0
 10039   000914  0100               	movlb	0	; () banked
 10040   000916  6F72               	movwf	(ENC28_Wcr16@v+1)& (0+255),b
 10041   000918  0E00               	movlw	0
 10042   00091A  6F71               	movwf	ENC28_Wcr16@v& (0+255),b
 10043   00091C  0E08               	movlw	8
 10044   00091E  ECF8  F011         	call	_ENC28_Wcr16
 10045   000922                     
 10046                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 368:     ENC28_Wcr16(J60_ERXNDL, (((0x1FFF
      +                          ) - (((1518) + (7)) << 1)) - 2));
 10047   000922  0E14               	movlw	20
 10048   000924  0100               	movlb	0	; () banked
 10049   000926  6F72               	movwf	(ENC28_Wcr16@v+1)& (0+255),b
 10050   000928  0E13               	movlw	19
 10051   00092A  6F71               	movwf	ENC28_Wcr16@v& (0+255),b
 10052   00092C  0E0A               	movlw	10
 10053   00092E  ECF8  F011         	call	_ENC28_Wcr16
 10054   000932                     
 10055                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 369:     ENC28_Wcr16(J60_ERDPTL,nextPacket
      +                          Pointer);
 10056   000932  C049  F071         	movff	_nextPacketPointer,ENC28_Wcr16@v
 10057   000936  C04A  F072         	movff	_nextPacketPointer+1,ENC28_Wcr16@v+1
 10058   00093A  0E00               	movlw	0
 10059   00093C  ECF8  F011         	call	_ENC28_Wcr16
 10060   000940                     
 10061                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 371:     ENC28_Wcr16(J60_ERDPTL, (0));
 10062   000940  0E00               	movlw	0
 10063   000942  0100               	movlb	0	; () banked
 10064   000944  6F72               	movwf	(ENC28_Wcr16@v+1)& (0+255),b
 10065   000946  0E00               	movlw	0
 10066   000948  6F71               	movwf	ENC28_Wcr16@v& (0+255),b
 10067   00094A  0E00               	movlw	0
 10068   00094C  ECF8  F011         	call	_ENC28_Wcr16
 10069   000950                     
 10070                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 372:     ENC28_Wcr16(J60_EWRPTL, ((0x1FFF)
      +                           - (((1518) + (7)) << 1)));
 10071   000950  0E14               	movlw	20
 10072   000952  0100               	movlb	0	; () banked
 10073   000954  6F72               	movwf	(ENC28_Wcr16@v+1)& (0+255),b
 10074   000956  0E15               	movlw	21
 10075   000958  6F71               	movwf	ENC28_Wcr16@v& (0+255),b
 10076   00095A  0E02               	movlw	2
 10077   00095C  ECF8  F011         	call	_ENC28_Wcr16
 10078   000960                     
 10079                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 375:     ENC28_Wcr8(J60_ERXFCON, 0b1010100
      +                          1);
 10080   000960  0EA9               	movlw	169
 10081   000962  0100               	movlb	0	; () banked
 10082   000964  6F71               	movwf	ENC28_Wcr8@v& (0+255),b
 10083   000966  0E58               	movlw	88
 10084   000968  ECFB  F013         	call	_ENC28_Wcr8
 10085   00096C                     
 10086                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 378:     eth_MAC = MAC_getAddress();
 10087   00096C  ECFC  F014         	call	_MAC_getAddress	;wreg free
 10088   000970  C06E  F04B         	movff	?_MAC_getAddress,_eth_MAC
 10089   000974  C06F  F04C         	movff	?_MAC_getAddress+1,_eth_MAC+1
 10090   000978                     
 10091                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 381:     ENC28_Wcr8(J60_MACON1, 0x0D);
 10092   000978  0E0D               	movlw	13
 10093   00097A  0100               	movlb	0	; () banked
 10094   00097C  6F71               	movwf	ENC28_Wcr8@v& (0+255),b
 10095   00097E  0E80               	movlw	128
 10096   000980  ECFB  F013         	call	_ENC28_Wcr8
 10097   000984                     
 10098                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 382:     ENC28_Wcr8(J60_MACON3, 0x23);
 10099   000984  0E23               	movlw	35
 10100   000986  0100               	movlb	0	; () banked
 10101   000988  6F71               	movwf	ENC28_Wcr8@v& (0+255),b
 10102   00098A  0E82               	movlw	130
 10103   00098C  ECFB  F013         	call	_ENC28_Wcr8
 10104   000990                     
 10105                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 383:     ENC28_Wcr8(J60_MACON4, 0x40);
 10106   000990  0E40               	movlw	64
 10107   000992  0100               	movlb	0	; () banked
 10108   000994  6F71               	movwf	ENC28_Wcr8@v& (0+255),b
 10109   000996  0E83               	movlw	131
 10110   000998  ECFB  F013         	call	_ENC28_Wcr8
 10111   00099C                     
 10112                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 384:     ENC28_Wcr16(J60_MAIPGL, 0x0c12);
 10113   00099C  0E0C               	movlw	12
 10114   00099E  0100               	movlb	0	; () banked
 10115   0009A0  6F72               	movwf	(ENC28_Wcr16@v+1)& (0+255),b
 10116   0009A2  0E12               	movlw	18
 10117   0009A4  6F71               	movwf	ENC28_Wcr16@v& (0+255),b
 10118   0009A6  0E86               	movlw	134
 10119   0009A8  ECF8  F011         	call	_ENC28_Wcr16
 10120   0009AC                     
 10121                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 385:     ENC28_Wcr8(J60_MABBIPG, 0x12);
 10122   0009AC  0E12               	movlw	18
 10123   0009AE  0100               	movlb	0	; () banked
 10124   0009B0  6F71               	movwf	ENC28_Wcr8@v& (0+255),b
 10125   0009B2  0E84               	movlw	132
 10126   0009B4  ECFB  F013         	call	_ENC28_Wcr8
 10127   0009B8                     
 10128                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 386:     ENC28_Wcr16(J60_MAMXFLL, (1518));
 10129   0009B8  0E05               	movlw	5
 10130   0009BA  0100               	movlb	0	; () banked
 10131   0009BC  6F72               	movwf	(ENC28_Wcr16@v+1)& (0+255),b
 10132   0009BE  0EEE               	movlw	238
 10133   0009C0  6F71               	movwf	ENC28_Wcr16@v& (0+255),b
 10134   0009C2  0E8A               	movlw	138
 10135   0009C4  ECF8  F011         	call	_ENC28_Wcr16
 10136   0009C8                     
 10137                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 387:     ENC28_Wcr8(J60_MAADR1, eth_MAC->m
      +                          ac_array[0]); __asm("nop");
 10138   0009C8  C04B  FFD9         	movff	_eth_MAC,fsr2l
 10139   0009CC  C04C  FFDA         	movff	_eth_MAC+1,fsr2h
 10140   0009D0  50DF               	movf	indf2,w,c
 10141   0009D2  0100               	movlb	0	; () banked
 10142   0009D4  6F71               	movwf	ENC28_Wcr8@v& (0+255),b
 10143   0009D6  0EC4               	movlw	196
 10144   0009D8  ECFB  F013         	call	_ENC28_Wcr8
 10145   0009DC  0000               	nop		;# 
 10146   0009DE                     
 10147                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 388:     ENC28_Wcr8(J60_MAADR2, eth_MAC->m
      +                          ac_array[1]); __asm("nop");
 10148   0009DE  EE20 F001          	lfsr	2,1
 10149   0009E2  504B               	movf	_eth_MAC^0,w,c
 10150   0009E4  26D9               	addwf	fsr2l,f,c
 10151   0009E6  504C               	movf	(_eth_MAC+1)^0,w,c
 10152   0009E8  22DA               	addwfc	fsr2h,f,c
 10153   0009EA  50DF               	movf	indf2,w,c
 10154   0009EC  0100               	movlb	0	; () banked
 10155   0009EE  6F71               	movwf	ENC28_Wcr8@v& (0+255),b
 10156   0009F0  0EC5               	movlw	197
 10157   0009F2  ECFB  F013         	call	_ENC28_Wcr8
 10158   0009F6  0000               	nop		;# 
 10159   0009F8                     
 10160                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 389:     ENC28_Wcr8(J60_MAADR3, eth_MAC->m
      +                          ac_array[2]); __asm("nop");
 10161   0009F8  EE20 F002          	lfsr	2,2
 10162   0009FC  504B               	movf	_eth_MAC^0,w,c
 10163   0009FE  26D9               	addwf	fsr2l,f,c
 10164   000A00  504C               	movf	(_eth_MAC+1)^0,w,c
 10165   000A02  22DA               	addwfc	fsr2h,f,c
 10166   000A04  50DF               	movf	indf2,w,c
 10167   000A06  0100               	movlb	0	; () banked
 10168   000A08  6F71               	movwf	ENC28_Wcr8@v& (0+255),b
 10169   000A0A  0EC2               	movlw	194
 10170   000A0C  ECFB  F013         	call	_ENC28_Wcr8
 10171   000A10  0000               	nop		;# 
 10172   000A12                     
 10173                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 390:     ENC28_Wcr8(J60_MAADR4, eth_MAC->m
      +                          ac_array[3]); __asm("nop");
 10174   000A12  EE20 F003          	lfsr	2,3
 10175   000A16  504B               	movf	_eth_MAC^0,w,c
 10176   000A18  26D9               	addwf	fsr2l,f,c
 10177   000A1A  504C               	movf	(_eth_MAC+1)^0,w,c
 10178   000A1C  22DA               	addwfc	fsr2h,f,c
 10179   000A1E  50DF               	movf	indf2,w,c
 10180   000A20  0100               	movlb	0	; () banked
 10181   000A22  6F71               	movwf	ENC28_Wcr8@v& (0+255),b
 10182   000A24  0EC3               	movlw	195
 10183   000A26  ECFB  F013         	call	_ENC28_Wcr8
 10184   000A2A  0000               	nop		;# 
 10185   000A2C                     
 10186                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 391:     ENC28_Wcr8(J60_MAADR5, eth_MAC->m
      +                          ac_array[4]); __asm("nop");
 10187   000A2C  EE20 F004          	lfsr	2,4
 10188   000A30  504B               	movf	_eth_MAC^0,w,c
 10189   000A32  26D9               	addwf	fsr2l,f,c
 10190   000A34  504C               	movf	(_eth_MAC+1)^0,w,c
 10191   000A36  22DA               	addwfc	fsr2h,f,c
 10192   000A38  50DF               	movf	indf2,w,c
 10193   000A3A  0100               	movlb	0	; () banked
 10194   000A3C  6F71               	movwf	ENC28_Wcr8@v& (0+255),b
 10195   000A3E  0EC0               	movlw	192
 10196   000A40  ECFB  F013         	call	_ENC28_Wcr8
 10197   000A44  0000               	nop		;# 
 10198   000A46                     
 10199                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 392:     ENC28_Wcr8(J60_MAADR6, eth_MAC->m
      +                          ac_array[5]); __asm("nop");
 10200   000A46  EE20 F005          	lfsr	2,5
 10201   000A4A  504B               	movf	_eth_MAC^0,w,c
 10202   000A4C  26D9               	addwf	fsr2l,f,c
 10203   000A4E  504C               	movf	(_eth_MAC+1)^0,w,c
 10204   000A50  22DA               	addwfc	fsr2h,f,c
 10205   000A52  50DF               	movf	indf2,w,c
 10206   000A54  0100               	movlb	0	; () banked
 10207   000A56  6F71               	movwf	ENC28_Wcr8@v& (0+255),b
 10208   000A58  0EC1               	movlw	193
 10209   000A5A  ECFB  F013         	call	_ENC28_Wcr8
 10210   000A5E  0000               	nop		;# 
 10211   000A60                     
 10212                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 394:     ENC28_Wcr8(J60_ECON1, 0x04);
 10213   000A60  0E04               	movlw	4
 10214   000A62  0100               	movlb	0	; () banked
 10215   000A64  6F71               	movwf	ENC28_Wcr8@v& (0+255),b
 10216   000A66  0EFF               	movlw	255
 10217   000A68  ECFB  F013         	call	_ENC28_Wcr8
 10218   000A6C                     
 10219                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 397:     ENC28_PhyWrite(J60_PHCON1, 0x0100
      +                          );
 10220   000A6C  0E01               	movlw	1
 10221   000A6E  0100               	movlb	0	; () banked
 10222   000A70  6F75               	movwf	(ENC28_PhyWrite@d+1)& (0+255),b
 10223   000A72  0E00               	movlw	0
 10224   000A74  6F74               	movwf	ENC28_PhyWrite@d& (0+255),b
 10225   000A76  0E00               	movlw	0
 10226   000A78  ECD7  F011         	call	_ENC28_PhyWrite
 10227   000A7C                     
 10228                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 398:     ENC28_PhyWrite(J60_PHCON2, 0x0100
      +                          );
 10229   000A7C  0E01               	movlw	1
 10230   000A7E  0100               	movlb	0	; () banked
 10231   000A80  6F75               	movwf	(ENC28_PhyWrite@d+1)& (0+255),b
 10232   000A82  0E00               	movlw	0
 10233   000A84  6F74               	movwf	ENC28_PhyWrite@d& (0+255),b
 10234   000A86  0E10               	movlw	16
 10235   000A88  ECD7  F011         	call	_ENC28_PhyWrite
 10236   000A8C                     
 10237                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 399:     ENC28_PhyWrite(J60_PHLCON, 0x0472
      +                          );
 10238   000A8C  0E04               	movlw	4
 10239   000A8E  0100               	movlb	0	; () banked
 10240   000A90  6F75               	movwf	(ENC28_PhyWrite@d+1)& (0+255),b
 10241   000A92  0E72               	movlw	114
 10242   000A94  6F74               	movwf	ENC28_PhyWrite@d& (0+255),b
 10243   000A96  0E14               	movlw	20
 10244   000A98  ECD7  F011         	call	_ENC28_PhyWrite
 10245   000A9C                     
 10246                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 403:     ENC28_Wcr8(J60_EIE, 0xDB);
 10247   000A9C  0EDB               	movlw	219
 10248   000A9E  0100               	movlb	0	; () banked
 10249   000AA0  6F71               	movwf	ENC28_Wcr8@v& (0+255),b
 10250   000AA2  0EFB               	movlw	251
 10251   000AA4  ECFB  F013         	call	_ENC28_Wcr8
 10252   000AA8                     
 10253                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 404:     ENC28_Wcr16(((enc28j60_registers_
      +                          t)J60_PHIE), 0x12);
 10254   000AA8  0E00               	movlw	0
 10255   000AAA  0100               	movlb	0	; () banked
 10256   000AAC  6F72               	movwf	(ENC28_Wcr16@v+1)& (0+255),b
 10257   000AAE  0E12               	movlw	18
 10258   000AB0  6F71               	movwf	ENC28_Wcr16@v& (0+255),b
 10259   000AB2  0E12               	movlw	18
 10260   000AB4  ECF8  F011         	call	_ENC28_Wcr16
 10261   000AB8                     
 10262                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 407:     ETH_CheckLinkUp();
 10263   000AB8  EC71  F013         	call	_ETH_CheckLinkUp	;wreg free
 10264   000ABC  0012               	return		;funcret
 10265   000ABE                     __end_of_ETH_Init:
 10266                           	callstack 0
 10267                           
 10268 ;; *************** function _MAC_getAddress *****************
 10269 ;; Defined at:
 10270 ;;		line 48 in file "mcc_generated_files/TCPIPLibrary/mac_address.c"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;		None
 10273 ;; Auto vars:     Size  Location     Type
 10274 ;;		None
 10275 ;; Return value:  Size  Location     Type
 10276 ;;                  2   14[BANK0 ] PTR const struct .
 10277 ;; Registers used:
 10278 ;;		wreg, status,2, status,0
 10279 ;; Tracked objects:
 10280 ;;		On entry : 0/0
 10281 ;;		On exit  : 0/0
 10282 ;;		Unchanged: 0/0
 10283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10284 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10287 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10288 ;;Total ram usage:        2 bytes
 10289 ;; Hardware stack levels used: 1
 10290 ;; Hardware stack levels required when called: 13
 10291 ;; This function calls:
 10292 ;;		Nothing
 10293 ;; This function is called by:
 10294 ;;		_ETH_Init
 10295 ;; This function uses a non-reentrant model
 10296 ;;
 10297                           
 10298                           	psect	text21
 10299   0029F8                     __ptext21:
 10300                           	callstack 0
 10301   0029F8                     _MAC_getAddress:
 10302                           	callstack 14
 10303   0029F8                     
 10304                           ;mcc_generated_files/TCPIPLibrary/mac_address.c: 50:     return &macAddress;
 10305   0029F8  0EE7               	movlw	low _macAddress
 10306   0029FA  0100               	movlb	0	; () banked
 10307   0029FC  6F6E               	movwf	?_MAC_getAddress& (0+255),b
 10308   0029FE  0E01               	movlw	high _macAddress
 10309   002A00  6F6F               	movwf	(?_MAC_getAddress+1)& (0+255),b
 10310   002A02                     
 10311                           ; BSR set to: 0
 10312   002A02  0012               	return		;funcret
 10313   002A04                     __end_of_MAC_getAddress:
 10314                           	callstack 0
 10315                           
 10316 ;; *************** function _ETH_SendSystemReset *****************
 10317 ;; Defined at:
 10318 ;;		line 643 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 10319 ;; Parameters:    Size  Location     Type
 10320 ;;		None
 10321 ;; Auto vars:     Size  Location     Type
 10322 ;;		None
 10323 ;; Return value:  Size  Location     Type
 10324 ;;                  1    wreg      void 
 10325 ;; Registers used:
 10326 ;;		wreg, status,2, cstack
 10327 ;; Tracked objects:
 10328 ;;		On entry : 0/0
 10329 ;;		On exit  : 0/0
 10330 ;;		Unchanged: 0/0
 10331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10336 ;;Total ram usage:        0 bytes
 10337 ;; Hardware stack levels used: 1
 10338 ;; Hardware stack levels required when called: 14
 10339 ;; This function calls:
 10340 ;;		_SPI1_ExchangeByte
 10341 ;; This function is called by:
 10342 ;;		_ETH_Init
 10343 ;; This function uses a non-reentrant model
 10344 ;;
 10345                           
 10346                           	psect	text22
 10347   002A04                     __ptext22:
 10348                           	callstack 0
 10349   002A04                     _ETH_SendSystemReset:
 10350                           	callstack 13
 10351   002A04  9285               	bcf	3973,1,c	;volatile
 10352   002A06                     
 10353                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 646:     SPI1_ExchangeByte(src_inst);
 10354   002A06  0EFF               	movlw	255
 10355   002A08  EC5F  F014         	call	_SPI1_ExchangeByte
 10356   002A0C  8285               	bsf	3973,1,c	;volatile
 10357   002A0E  0012               	return		;funcret
 10358   002A10                     __end_of_ETH_SendSystemReset:
 10359                           	callstack 0
 10360                           
 10361 ;; *************** function _ETH_PacketListReset *****************
 10362 ;; Defined at:
 10363 ;;		line 240 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 10364 ;; Parameters:    Size  Location     Type
 10365 ;;		None
 10366 ;; Auto vars:     Size  Location     Type
 10367 ;;  index           2   16[BANK0 ] unsigned short 
 10368 ;;  ptr             2   14[BANK0 ] PTR unsigned char 
 10369 ;;		 -> txData(200), 
 10370 ;; Return value:  Size  Location     Type
 10371 ;;                  1    wreg      void 
 10372 ;; Registers used:
 10373 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10374 ;; Tracked objects:
 10375 ;;		On entry : 0/0
 10376 ;;		On exit  : 0/0
 10377 ;;		Unchanged: 0/0
 10378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10380 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10382 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10383 ;;Total ram usage:        4 bytes
 10384 ;; Hardware stack levels used: 1
 10385 ;; Hardware stack levels required when called: 13
 10386 ;; This function calls:
 10387 ;;		Nothing
 10388 ;; This function is called by:
 10389 ;;		_ETH_Init
 10390 ;;		_ETH_TxReset
 10391 ;; This function uses a non-reentrant model
 10392 ;;
 10393                           
 10394                           	psect	text23
 10395   002116                     __ptext23:
 10396                           	callstack 0
 10397   002116                     _ETH_PacketListReset:
 10398                           	callstack 14
 10399   002116                     
 10400                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 242:     uint16_t index = 0;
 10401   002116  0E00               	movlw	0
 10402   002118  0100               	movlb	0	; () banked
 10403   00211A  6F71               	movwf	(ETH_PacketListReset@index+1)& (0+255),b
 10404   00211C  0E00               	movlw	0
 10405   00211E  6F70               	movwf	ETH_PacketListReset@index& (0+255),b
 10406   002120                     
 10407                           ; BSR set to: 0
 10408                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 243:     uint8_t* ptr = (uint8_t*)&txData;
 10409   002120  0E00               	movlw	low _txData
 10410   002122  6F6E               	movwf	ETH_PacketListReset@ptr& (0+255),b
 10411   002124  0E03               	movlw	high _txData
 10412   002126  6F6F               	movwf	(ETH_PacketListReset@ptr+1)& (0+255),b
 10413   002128                     
 10414                           ; BSR set to: 0
 10415                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 244:     ethListSize = 0;
 10416   002128  6A4E               	clrf	_ethListSize^0,c
 10417   00212A                     
 10418                           ; BSR set to: 0
 10419                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 246:     pHead = ((void*)0);
 10420   00212A  0E00               	movlw	0
 10421   00212C  6E47               	movwf	_pHead^0,c
 10422   00212E  0E00               	movlw	0
 10423   002130  6E48               	movwf	(_pHead+1)^0,c
 10424   002132                     
 10425                           ; BSR set to: 0
 10426                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 247:     pTail = ((void*)0);
 10427   002132  0E00               	movlw	0
 10428   002134  6E45               	movwf	_pTail^0,c
 10429   002136  0E00               	movlw	0
 10430   002138  6E46               	movwf	(_pTail+1)^0,c
 10431                           
 10432                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 249:     while( index < ((20) * sizeof(txP
      +                          acket_t)) )
 10433   00213A  EFA8  F010         	goto	l9074
 10434   00213E                     l9070:
 10435                           
 10436                           ; BSR set to: 0
 10437                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 250:     {;mcc_generated_files/TCPIPLibrar
      +                          y/ENC28J60.c: 251:         ptr[index] = 0;
 10438   00213E  5170               	movf	ETH_PacketListReset@index& (0+255),w,b
 10439   002140  256E               	addwf	ETH_PacketListReset@ptr& (0+255),w,b
 10440   002142  6ED9               	movwf	fsr2l,c
 10441   002144  5171               	movf	(ETH_PacketListReset@index+1)& (0+255),w,b
 10442   002146  216F               	addwfc	(ETH_PacketListReset@ptr+1)& (0+255),w,b
 10443   002148  6EDA               	movwf	fsr2h,c
 10444   00214A  6ADF               	clrf	indf2,c
 10445   00214C                     
 10446                           ; BSR set to: 0
 10447                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 252:         index++;
 10448   00214C  4B70               	infsnz	ETH_PacketListReset@index& (0+255),f,b
 10449   00214E  2B71               	incf	(ETH_PacketListReset@index+1)& (0+255),f,b
 10450   002150                     l9074:
 10451                           
 10452                           ; BSR set to: 0
 10453                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 249:     while( index < ((20) * sizeof(txP
      +                          acket_t)) )
 10454   002150  5171               	movf	(ETH_PacketListReset@index+1)& (0+255),w,b
 10455   002152  E109               	bnz	u6900
 10456   002154  0EC8               	movlw	200
 10457   002156  5D70               	subwf	ETH_PacketListReset@index& (0+255),w,b
 10458   002158  A0D8               	btfss	status,0,c
 10459   00215A  EFB1  F010         	goto	u6901
 10460   00215E  EFB3  F010         	goto	u6900
 10461   002162                     u6901:
 10462   002162  EF9F  F010         	goto	l9070
 10463   002166                     u6900:
 10464   002166                     
 10465                           ; BSR set to: 0
 10466   002166  0012               	return		;funcret
 10467   002168                     __end_of_ETH_PacketListReset:
 10468                           	callstack 0
 10469                           
 10470 ;; *************** function _ETH_OpenSPI *****************
 10471 ;; Defined at:
 10472 ;;		line 327 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 10473 ;; Parameters:    Size  Location     Type
 10474 ;;		None
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;		None
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  1    wreg      void 
 10479 ;; Registers used:
 10480 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10490 ;;Total ram usage:        0 bytes
 10491 ;; Hardware stack levels used: 1
 10492 ;; Hardware stack levels required when called: 16
 10493 ;; This function calls:
 10494 ;;		_spi_master_open
 10495 ;; This function is called by:
 10496 ;;		_ETH_Init
 10497 ;; This function uses a non-reentrant model
 10498 ;;
 10499                           
 10500                           	psect	text24
 10501   00292E                     __ptext24:
 10502                           	callstack 0
 10503   00292E                     _ETH_OpenSPI:
 10504                           	callstack 11
 10505   00292E                     l9078:
 10506   00292E  0E00               	movlw	0
 10507   002930  EC5A  F012         	call	_spi_master_open
 10508   002934  0900               	iorlw	0
 10509   002936  B4D8               	btfsc	status,2,c
 10510   002938  EFA0  F014         	goto	u6911
 10511   00293C  EFA2  F014         	goto	u6910
 10512   002940                     u6911:
 10513   002940  EF97  F014         	goto	l9078
 10514   002944                     u6910:
 10515   002944  0012               	return		;funcret
 10516   002946                     __end_of_ETH_OpenSPI:
 10517                           	callstack 0
 10518                           
 10519 ;; *************** function _spi_master_open *****************
 10520 ;; Defined at:
 10521 ;;		line 56 in file "mcc_generated_files/drivers/spi_master.c"
 10522 ;; Parameters:    Size  Location     Type
 10523 ;;  config          1    wreg     enum E380
 10524 ;; Auto vars:     Size  Location     Type
 10525 ;;  config          1   18[BANK0 ] enum E380
 10526 ;; Return value:  Size  Location     Type
 10527 ;;                  1    wreg      _Bool 
 10528 ;; Registers used:
 10529 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10530 ;; Tracked objects:
 10531 ;;		On entry : 0/0
 10532 ;;		On exit  : 0/0
 10533 ;;		Unchanged: 0/0
 10534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10536 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10537 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10538 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10539 ;;Total ram usage:        3 bytes
 10540 ;; Hardware stack levels used: 1
 10541 ;; Hardware stack levels required when called: 15
 10542 ;; This function calls:
 10543 ;;		_MAC_open
 10544 ;; This function is called by:
 10545 ;;		_ETH_OpenSPI
 10546 ;; This function uses a non-reentrant model
 10547 ;;
 10548                           
 10549                           	psect	text25
 10550   0024B4                     __ptext25:
 10551                           	callstack 0
 10552   0024B4                     _spi_master_open:
 10553                           	callstack 11
 10554                           
 10555                           ;incstack = 0
 10556                           ;spi_master_open@config stored from wreg
 10557   0024B4  0100               	movlb	0	; () banked
 10558   0024B6  6F72               	movwf	spi_master_open@config& (0+255),b
 10559   0024B8                     
 10560                           ;mcc_generated_files/drivers/spi_master.c: 57:     switch(config){
 10561   0024B8  EF65  F012         	goto	l8814
 10562   0024BC                     l8804:
 10563                           
 10564                           ; BSR set to: 0
 10565                           ;mcc_generated_files/drivers/spi_master.c: 59:             return MAC_open();
 10566   0024BC  EC26  F015         	call	_MAC_open	;wreg free
 10567   0024C0  EF77  F012         	goto	l170
 10568   0024C4                     l8808:
 10569                           
 10570                           ; BSR set to: 0
 10571                           ;mcc_generated_files/drivers/spi_master.c: 61:             return 0;
 10572   0024C4  0E00               	movlw	0
 10573   0024C6  EF77  F012         	goto	l170
 10574   0024CA                     l8814:
 10575   0024CA  0100               	movlb	0	; () banked
 10576   0024CC  5172               	movf	spi_master_open@config& (0+255),w,b
 10577   0024CE  6F70               	movwf	??_spi_master_open& (0+255),b
 10578   0024D0  6B71               	clrf	(??_spi_master_open+1)& (0+255),b
 10579                           
 10580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10581                           ; Switch size 1, requested type "simple"
 10582                           ; Number of cases is 1, Range of values is 0 to 0
 10583                           ; switch strategies available:
 10584                           ; Name         Instructions Cycles
 10585                           ; simple_byte            4     3 (average)
 10586                           ;	Chosen strategy is simple_byte
 10587   0024D2  5171               	movf	(??_spi_master_open+1)& (0+255),w,b
 10588   0024D4  0A00               	xorlw	0	; case 0
 10589   0024D6  B4D8               	btfsc	status,2,c
 10590   0024D8  EF70  F012         	goto	l12196
 10591   0024DC  EF62  F012         	goto	l8808
 10592   0024E0                     l12196:
 10593                           
 10594                           ; BSR set to: 0
 10595                           ; Switch size 1, requested type "simple"
 10596                           ; Number of cases is 1, Range of values is 0 to 0
 10597                           ; switch strategies available:
 10598                           ; Name         Instructions Cycles
 10599                           ; simple_byte            4     3 (average)
 10600                           ;	Chosen strategy is simple_byte
 10601   0024E0  5170               	movf	??_spi_master_open& (0+255),w,b
 10602   0024E2  0A00               	xorlw	0	; case 0
 10603   0024E4  B4D8               	btfsc	status,2,c
 10604   0024E6  EF5E  F012         	goto	l8804
 10605   0024EA  EF62  F012         	goto	l8808
 10606   0024EE                     l170:
 10607   0024EE  0012               	return		;funcret
 10608   0024F0                     __end_of_spi_master_open:
 10609                           	callstack 0
 10610                           
 10611 ;; *************** function _MAC_open *****************
 10612 ;; Defined at:
 10613 ;;		line 41 in file "mcc_generated_files/drivers/spi_master.c"
 10614 ;; Parameters:    Size  Location     Type
 10615 ;;		None
 10616 ;; Auto vars:     Size  Location     Type
 10617 ;;		None
 10618 ;; Return value:  Size  Location     Type
 10619 ;;                  1    wreg      _Bool 
 10620 ;; Registers used:
 10621 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10622 ;; Tracked objects:
 10623 ;;		On entry : 0/0
 10624 ;;		On exit  : 0/0
 10625 ;;		Unchanged: 0/0
 10626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10631 ;;Total ram usage:        0 bytes
 10632 ;; Hardware stack levels used: 1
 10633 ;; Hardware stack levels required when called: 14
 10634 ;; This function calls:
 10635 ;;		_SPI1_Open
 10636 ;; This function is called by:
 10637 ;;		_spi_master_open
 10638 ;; This function uses a non-reentrant model
 10639 ;;
 10640                           
 10641                           	psect	text26
 10642   002A4C                     __ptext26:
 10643                           	callstack 0
 10644   002A4C                     _MAC_open:
 10645                           	callstack 11
 10646   002A4C                     
 10647                           ;mcc_generated_files/drivers/spi_master.c: 42:     return SPI1_Open(MAC_CONFIG);
 10648   002A4C  0E01               	movlw	1
 10649   002A4E  EC7A  F00B         	call	_SPI1_Open
 10650   002A52  0012               	return		;funcret
 10651   002A54                     __end_of_MAC_open:
 10652                           	callstack 0
 10653                           
 10654 ;; *************** function _SPI1_Open *****************
 10655 ;; Defined at:
 10656 ;;		line 77 in file "mcc_generated_files/spi1.c"
 10657 ;; Parameters:    Size  Location     Type
 10658 ;;  spi1UniqueCo    1    wreg     enum E358
 10659 ;; Auto vars:     Size  Location     Type
 10660 ;;  spi1UniqueCo    1   15[BANK0 ] enum E358
 10661 ;; Return value:  Size  Location     Type
 10662 ;;                  1    wreg      _Bool 
 10663 ;; Registers used:
 10664 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10665 ;; Tracked objects:
 10666 ;;		On entry : 0/0
 10667 ;;		On exit  : 0/0
 10668 ;;		Unchanged: 0/0
 10669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10671 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10672 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10673 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10674 ;;Total ram usage:        2 bytes
 10675 ;; Hardware stack levels used: 1
 10676 ;; Hardware stack levels required when called: 13
 10677 ;; This function calls:
 10678 ;;		Nothing
 10679 ;; This function is called by:
 10680 ;;		_MAC_open
 10681 ;; This function uses a non-reentrant model
 10682 ;;
 10683                           
 10684                           	psect	text27
 10685   0016F4                     __ptext27:
 10686                           	callstack 0
 10687   0016F4                     _SPI1_Open:
 10688                           	callstack 11
 10689                           
 10690                           ;incstack = 0
 10691                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
 10692   0016F4  0100               	movlb	0	; () banked
 10693   0016F6  6F6F               	movwf	SPI1_Open@spi1UniqueConfiguration& (0+255),b
 10694   0016F8                     
 10695                           ;mcc_generated_files/spi1.c: 77: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 78: {;mcc_generated_files/spi1.c: 79:     if(!SSP1CON1bits.SS
      +                          PEN)
 10696   0016F8  BA96               	btfsc	150,5,c	;volatile
 10697   0016FA  EF81  F00B         	goto	u5711
 10698   0016FE  EF83  F00B         	goto	u5710
 10699   001702                     u5711:
 10700   001702  EFD5  F00B         	goto	l8060
 10701   001706                     u5710:
 10702   001706                     
 10703                           ;mcc_generated_files/spi1.c: 80:     {;mcc_generated_files/spi1.c: 81:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
 10704   001706  0100               	movlb	0	; () banked
 10705   001708  516F               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 10706   00170A  0D04               	mullw	4
 10707   00170C  0E01               	movlw	1
 10708   00170E  26F3               	addwf	243,f,c
 10709   001710  0E00               	movlw	0
 10710   001712  22F4               	addwfc	244,f,c
 10711   001714  0EB1               	movlw	low _spi1_configuration
 10712   001716  24F3               	addwf	243,w,c
 10713   001718  6EF6               	movwf	tblptrl,c
 10714   00171A  0EFD               	movlw	high _spi1_configuration
 10715   00171C  20F4               	addwfc	244,w,c
 10716   00171E  6EF7               	movwf	tblptrh,c
 10717   001720                     	if	1	;There are 3 active tblptr bytes
 10718   001720  6AF8               	clrf	tblptru,c
 10719   001722  0E00               	movlw	low (__mediumconst shr (0+16))
 10720   001724  22F8               	addwfc	tblptru,f,c
 10721   001726                     	endif
 10722   001726  0008               	tblrd		*
 10723   001728  CFF5 FF95          	movff	tablat,3989	;volatile
 10724                           
 10725                           ;mcc_generated_files/spi1.c: 82:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
 10726   00172C  516F               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 10727   00172E  0D04               	mullw	4
 10728   001730  0EB1               	movlw	low _spi1_configuration
 10729   001732  24F3               	addwf	243,w,c
 10730   001734  6EF6               	movwf	tblptrl,c
 10731   001736  0EFD               	movlw	high _spi1_configuration
 10732   001738  20F4               	addwfc	244,w,c
 10733   00173A  6EF7               	movwf	tblptrh,c
 10734   00173C                     	if	1	;There are 3 active tblptr bytes
 10735   00173C  6AF8               	clrf	tblptru,c
 10736   00173E  0E00               	movlw	low (__mediumconst shr (0+16))
 10737   001740  22F8               	addwfc	tblptru,f,c
 10738   001742                     	endif
 10739   001742  0008               	tblrd		*
 10740   001744  CFF5 FF96          	movff	tablat,3990	;volatile
 10741   001748                     
 10742                           ; BSR set to: 0
 10743                           ;mcc_generated_files/spi1.c: 83:         SSP1CON2 = 0x00;
 10744   001748  6A97               	clrf	151,c	;volatile
 10745                           
 10746                           ;mcc_generated_files/spi1.c: 84:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
 10747   00174A  516F               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 10748   00174C  0D04               	mullw	4
 10749   00174E  0E02               	movlw	2
 10750   001750  26F3               	addwf	243,f,c
 10751   001752  0E00               	movlw	0
 10752   001754  22F4               	addwfc	244,f,c
 10753   001756  0EB1               	movlw	low _spi1_configuration
 10754   001758  24F3               	addwf	243,w,c
 10755   00175A  6EF6               	movwf	tblptrl,c
 10756   00175C  0EFD               	movlw	high _spi1_configuration
 10757   00175E  20F4               	addwfc	244,w,c
 10758   001760  6EF7               	movwf	tblptrh,c
 10759   001762                     	if	1	;There are 3 active tblptr bytes
 10760   001762  6AF8               	clrf	tblptru,c
 10761   001764  0E00               	movlw	low (__mediumconst shr (0+16))
 10762   001766  22F8               	addwfc	tblptru,f,c
 10763   001768                     	endif
 10764   001768  0008               	tblrd		*
 10765   00176A  CFF5 FF93          	movff	tablat,3987	;volatile
 10766                           
 10767                           ;mcc_generated_files/spi1.c: 85:         TRISCbits.TRISC3 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
 10768   00176E  516F               	movf	SPI1_Open@spi1UniqueConfiguration& (0+255),w,b
 10769   001770  0D04               	mullw	4
 10770   001772  0E03               	movlw	3
 10771   001774  26F3               	addwf	243,f,c
 10772   001776  0E00               	movlw	0
 10773   001778  22F4               	addwfc	244,f,c
 10774   00177A  0EB1               	movlw	low _spi1_configuration
 10775   00177C  24F3               	addwf	243,w,c
 10776   00177E  6EF6               	movwf	tblptrl,c
 10777   001780  0EFD               	movlw	high _spi1_configuration
 10778   001782  20F4               	addwfc	244,w,c
 10779   001784  6EF7               	movwf	tblptrh,c
 10780   001786                     	if	1	;There are 3 active tblptr bytes
 10781   001786  6AF8               	clrf	tblptru,c
 10782   001788  0E00               	movlw	low (__mediumconst shr (0+16))
 10783   00178A  22F8               	addwfc	tblptru,f,c
 10784   00178C                     	endif
 10785   00178C  0008               	tblrd		*
 10786   00178E  CFF5 F06E          	movff	tablat,??_SPI1_Open
 10787   001792  476E               	rlncf	??_SPI1_Open& (0+255),f,b
 10788   001794  476E               	rlncf	??_SPI1_Open& (0+255),f,b
 10789   001796  476E               	rlncf	??_SPI1_Open& (0+255),f,b
 10790   001798  508A               	movf	138,w,c	;volatile
 10791   00179A  196E               	xorwf	??_SPI1_Open& (0+255),w,b
 10792   00179C  0BF7               	andlw	-9
 10793   00179E  196E               	xorwf	??_SPI1_Open& (0+255),w,b
 10794   0017A0  6E8A               	movwf	138,c	;volatile
 10795   0017A2                     
 10796                           ; BSR set to: 0
 10797                           ;mcc_generated_files/spi1.c: 86:         SSP1CON1bits.SSPEN = 1;
 10798   0017A2  8A96               	bsf	150,5,c	;volatile
 10799   0017A4                     
 10800                           ; BSR set to: 0
 10801                           ;mcc_generated_files/spi1.c: 87:         return 1;
 10802   0017A4  0E01               	movlw	1
 10803   0017A6  EFD6  F00B         	goto	l265
 10804   0017AA                     l8060:
 10805                           
 10806                           ;mcc_generated_files/spi1.c: 89:     return 0;
 10807   0017AA  0E00               	movlw	0
 10808   0017AC                     l265:
 10809   0017AC  0012               	return		;funcret
 10810   0017AE                     __end_of_SPI1_Open:
 10811                           	callstack 0
 10812                           
 10813 ;; *************** function _ETH_CheckLinkUp *****************
 10814 ;; Defined at:
 10815 ;;		line 165 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 10816 ;; Parameters:    Size  Location     Type
 10817 ;;		None
 10818 ;; Auto vars:     Size  Location     Type
 10819 ;;  phstat2         2   26[BANK0 ] unsigned short 
 10820 ;; Return value:  Size  Location     Type
 10821 ;;                  1    wreg      _Bool 
 10822 ;; Registers used:
 10823 ;;		wreg, status,2, status,0, cstack
 10824 ;; Tracked objects:
 10825 ;;		On entry : 0/0
 10826 ;;		On exit  : 0/0
 10827 ;;		Unchanged: 0/0
 10828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10830 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10832 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10833 ;;Total ram usage:        2 bytes
 10834 ;; Hardware stack levels used: 1
 10835 ;; Hardware stack levels required when called: 17
 10836 ;; This function calls:
 10837 ;;		_ENC28_PhyRead
 10838 ;; This function is called by:
 10839 ;;		_Network_WaitForLink
 10840 ;;		_ETH_Init
 10841 ;;		_ETH_EventHandler
 10842 ;;		_DHCP_Manage
 10843 ;; This function uses a non-reentrant model
 10844 ;;
 10845                           
 10846                           	psect	text28
 10847   0026E2                     __ptext28:
 10848                           	callstack 0
 10849   0026E2                     _ETH_CheckLinkUp:
 10850                           	callstack 10
 10851   0026E2                     
 10852                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 167:     uint16_t phstat2;;mcc_generated_f
      +                          iles/TCPIPLibrary/ENC28J60.c: 169:     phstat2 = ENC28_PhyRead(J60_PHSTAT2);
 10853   0026E2  0E11               	movlw	17
 10854   0026E4  ECDC  F010         	call	_ENC28_PhyRead
 10855   0026E8  C076  F07A         	movff	?_ENC28_PhyRead,ETH_CheckLinkUp@phstat2
 10856   0026EC  C077  F07B         	movff	?_ENC28_PhyRead+1,ETH_CheckLinkUp@phstat2+1
 10857   0026F0                     
 10858                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 171:     if(phstat2 & 0x0400)
 10859   0026F0  0100               	movlb	0	; () banked
 10860   0026F2  A57B               	btfss	(ETH_CheckLinkUp@phstat2+1)& (0+255),2,b
 10861   0026F4  EF7E  F013         	goto	u6891
 10862   0026F8  EF80  F013         	goto	u6890
 10863   0026FC                     u6891:
 10864   0026FC  EF84  F013         	goto	l9056
 10865   002700                     u6890:
 10866   002700                     
 10867                           ; BSR set to: 0
 10868                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 172:     {;mcc_generated_files/TCPIPLibrar
      +                          y/ENC28J60.c: 173:         ethData.up = 1;
 10869   002700  85B1               	bsf	_ethData& (0+255),2,b	;volatile
 10870   002702                     
 10871                           ; BSR set to: 0
 10872                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 174:         return 1;
 10873   002702  0E01               	movlw	1
 10874   002704  EF85  F013         	goto	l752
 10875   002708                     l9056:
 10876                           
 10877                           ; BSR set to: 0
 10878                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 177:         return 0;
 10879   002708  0E00               	movlw	0
 10880   00270A                     l752:
 10881                           
 10882                           ; BSR set to: 0
 10883   00270A  0012               	return		;funcret
 10884   00270C                     __end_of_ETH_CheckLinkUp:
 10885                           	callstack 0
 10886                           
 10887 ;; *************** function _ENC28_PhyRead *****************
 10888 ;; Defined at:
 10889 ;;		line 630 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 10890 ;; Parameters:    Size  Location     Type
 10891 ;;  a               1    wreg     enum E926
 10892 ;; Auto vars:     Size  Location     Type
 10893 ;;  a               1   25[BANK0 ] enum E926
 10894 ;; Return value:  Size  Location     Type
 10895 ;;                  2   22[BANK0 ] unsigned short 
 10896 ;; Registers used:
 10897 ;;		wreg, status,2, status,0, cstack
 10898 ;; Tracked objects:
 10899 ;;		On entry : 0/0
 10900 ;;		On exit  : 0/0
 10901 ;;		Unchanged: 0/0
 10902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10903 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10904 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10905 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10906 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10907 ;;Total ram usage:        4 bytes
 10908 ;; Hardware stack levels used: 1
 10909 ;; Hardware stack levels required when called: 16
 10910 ;; This function calls:
 10911 ;;		_ENC28_Bfc
 10912 ;;		_ENC28_Bfs
 10913 ;;		_ENC28_Rcr16
 10914 ;;		_ENC28_Rcr8
 10915 ;;		_ENC28_Wcr8
 10916 ;; This function is called by:
 10917 ;;		_ETH_CheckLinkUp
 10918 ;; This function uses a non-reentrant model
 10919 ;;
 10920                           
 10921                           	psect	text29
 10922   0021B8                     __ptext29:
 10923                           	callstack 0
 10924   0021B8                     _ENC28_PhyRead:
 10925                           	callstack 10
 10926                           
 10927                           ; BSR set to: 0
 10928                           ;incstack = 0
 10929                           ;ENC28_PhyRead@a stored from wreg
 10930   0021B8  0100               	movlb	0	; () banked
 10931   0021BA  6F79               	movwf	ENC28_PhyRead@a& (0+255),b
 10932   0021BC                     
 10933                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 630: static uint16_t ENC28_PhyRead(enc28j6
      +                          0_phy_registers_t a);mcc_generated_files/TCPIPLibrary/ENC28J60.c: 631: {;mcc_generated_f
      +                          iles/TCPIPLibrary/ENC28J60.c: 632:     ENC28_Wcr8(J60_MIREGADR, a);
 10934   0021BC  C079  F071         	movff	ENC28_PhyRead@a,ENC28_Wcr8@v
 10935   0021C0  0E94               	movlw	148
 10936   0021C2  ECFB  F013         	call	_ENC28_Wcr8
 10937                           
 10938                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 633:     ENC28_Bfs(J60_MICMD, 0x01);
 10939   0021C6  0E01               	movlw	1
 10940   0021C8  0100               	movlb	0	; () banked
 10941   0021CA  6F71               	movwf	ENC28_Bfs@bits& (0+255),b
 10942   0021CC  0E92               	movlw	146
 10943   0021CE  ECD5  F013         	call	_ENC28_Bfs
 10944   0021D2                     l8886:
 10945   0021D2  0ECA               	movlw	202
 10946   0021D4  EC9A  F013         	call	_ENC28_Rcr8
 10947   0021D8  0100               	movlb	0	; () banked
 10948   0021DA  6F78               	movwf	??_ENC28_PhyRead& (0+255),b
 10949   0021DC  B178               	btfsc	??_ENC28_PhyRead& (0+255),0,b
 10950   0021DE  EFF3  F010         	goto	u6771
 10951   0021E2  EFF5  F010         	goto	u6770
 10952   0021E6                     u6771:
 10953   0021E6  EFE9  F010         	goto	l8886
 10954   0021EA                     u6770:
 10955   0021EA                     
 10956                           ; BSR set to: 0
 10957                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 635:     ENC28_Bfc(J60_MICMD, 0x01);
 10958   0021EA  0E01               	movlw	1
 10959   0021EC  6F71               	movwf	ENC28_Bfc@bits& (0+255),b
 10960   0021EE  0E92               	movlw	146
 10961   0021F0  ECE8  F013         	call	_ENC28_Bfc
 10962                           
 10963                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 637:     return ENC28_Rcr16(J60_MIRDL);
 10964   0021F4  0E98               	movlw	152
 10965   0021F6  EC27  F011         	call	_ENC28_Rcr16
 10966   0021FA  C071  F076         	movff	?_ENC28_Rcr16,?_ENC28_PhyRead
 10967   0021FE  C072  F077         	movff	?_ENC28_Rcr16+1,?_ENC28_PhyRead+1
 10968   002202  0012               	return		;funcret
 10969   002204                     __end_of_ENC28_PhyRead:
 10970                           	callstack 0
 10971                           
 10972 ;; *************** function _ENC28_Rcr16 *****************
 10973 ;; Defined at:
 10974 ;;		line 525 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 10975 ;; Parameters:    Size  Location     Type
 10976 ;;  a               1    wreg     enum E811
 10977 ;; Auto vars:     Size  Location     Type
 10978 ;;  a               1   21[BANK0 ] enum E811
 10979 ;;  v               2   19[BANK0 ] unsigned short 
 10980 ;; Return value:  Size  Location     Type
 10981 ;;                  2   17[BANK0 ] unsigned short 
 10982 ;; Registers used:
 10983 ;;		wreg, status,2, status,0, cstack
 10984 ;; Tracked objects:
 10985 ;;		On entry : 0/0
 10986 ;;		On exit  : 0/0
 10987 ;;		Unchanged: 0/0
 10988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10989 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10990 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10992 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10993 ;;Total ram usage:        5 bytes
 10994 ;; Hardware stack levels used: 1
 10995 ;; Hardware stack levels required when called: 15
 10996 ;; This function calls:
 10997 ;;		_ENC28_BankSel
 10998 ;;		_SPI1_ExchangeByte
 10999 ;; This function is called by:
 11000 ;;		_ENC28_PhyRead
 11001 ;;		_ETH_EventHandler
 11002 ;;		_ETH_GetFreeTxBufferSize
 11003 ;;		_ETH_WriteStart
 11004 ;;		_ETH_Send
 11005 ;;		_ETH_Dump
 11006 ;;		_ETH_Insert
 11007 ;;		_ETH_Copy
 11008 ;;		_ETH_TxComputeChecksum
 11009 ;;		_ETH_RxComputeChecksum
 11010 ;;		_ETH_SaveRDPT
 11011 ;;		_ETH_GetReadPtr
 11012 ;;		_ETH_MoveBackReadPtr
 11013 ;;		_ETH_GetWritePtr
 11014 ;;		_ETH_ResetByteCount
 11015 ;;		_ETH_GetByteCount
 11016 ;;		_ETH_SaveWRPT
 11017 ;; This function uses a non-reentrant model
 11018 ;;
 11019                           
 11020                           	psect	text30
 11021   00224E                     __ptext30:
 11022                           	callstack 0
 11023   00224E                     _ENC28_Rcr16:
 11024                           	callstack 10
 11025                           
 11026                           ;incstack = 0
 11027                           ;ENC28_Rcr16@a stored from wreg
 11028   00224E  0100               	movlb	0	; () banked
 11029   002250  6F75               	movwf	ENC28_Rcr16@a& (0+255),b
 11030   002252                     
 11031                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 525: static uint16_t ENC28_Rcr16(enc28j60_
      +                          registers_t a);mcc_generated_files/TCPIPLibrary/ENC28J60.c: 526: {;mcc_generated_files/T
      +                          CPIPLibrary/ENC28J60.c: 527:     uint16_t v;;mcc_generated_files/TCPIPLibrary/ENC28J60.c
      +                          : 529:     ENC28_BankSel(a);
 11032   002252  0100               	movlb	0	; () banked
 11033   002254  5175               	movf	ENC28_Rcr16@a& (0+255),w,b
 11034   002256  EC31  F010         	call	_ENC28_BankSel
 11035   00225A                     
 11036                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 530:     a &= 0x1F;
 11037   00225A  0E1F               	movlw	31
 11038   00225C  0100               	movlb	0	; () banked
 11039   00225E  1775               	andwf	ENC28_Rcr16@a& (0+255),f,b
 11040   002260                     
 11041                           ; BSR set to: 0
 11042   002260  9285               	bcf	3973,1,c	;volatile
 11043   002262                     
 11044                           ; BSR set to: 0
 11045                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 532:     SPI1_ExchangeByte(rcr_inst | (a))
      +                          ;
 11046   002262  5175               	movf	ENC28_Rcr16@a& (0+255),w,b
 11047   002264  EC5F  F014         	call	_SPI1_ExchangeByte
 11048   002268                     
 11049                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 533:     ((char *) &v)[0] = SPI1_ExchangeB
      +                          yte(0);
 11050   002268  0E00               	movlw	0
 11051   00226A  EC5F  F014         	call	_SPI1_ExchangeByte
 11052   00226E  0100               	movlb	0	; () banked
 11053   002270  6F73               	movwf	ENC28_Rcr16@v& (0+255),b
 11054   002272                     
 11055                           ; BSR set to: 0
 11056   002272  8285               	bsf	3973,1,c	;volatile
 11057   002274                     
 11058                           ; BSR set to: 0
 11059   002274  0000               	nop		;# 
 11060   002276  0000               	nop		;# 
 11061   002278  9285               	bcf	3973,1,c	;volatile
 11062   00227A                     
 11063                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 538:     SPI1_ExchangeByte(rcr_inst | (a +
      +                           1));
 11064   00227A  0100               	movlb	0	; () banked
 11065   00227C  2975               	incf	ENC28_Rcr16@a& (0+255),w,b
 11066   00227E  EC5F  F014         	call	_SPI1_ExchangeByte
 11067   002282                     
 11068                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 539:     ((char *) &v)[1] = SPI1_ExchangeB
      +                          yte(0);
 11069   002282  0E00               	movlw	0
 11070   002284  EC5F  F014         	call	_SPI1_ExchangeByte
 11071   002288  0100               	movlb	0	; () banked
 11072   00228A  6F74               	movwf	(ENC28_Rcr16@v+1)& (0+255),b
 11073   00228C                     
 11074                           ; BSR set to: 0
 11075   00228C  8285               	bsf	3973,1,c	;volatile
 11076   00228E                     
 11077                           ; BSR set to: 0
 11078                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 542:     return v;
 11079   00228E  C073  F071         	movff	ENC28_Rcr16@v,?_ENC28_Rcr16
 11080   002292  C074  F072         	movff	ENC28_Rcr16@v+1,?_ENC28_Rcr16+1
 11081   002296                     
 11082                           ; BSR set to: 0
 11083   002296  0012               	return		;funcret
 11084   002298                     __end_of_ENC28_Rcr16:
 11085                           	callstack 0
 11086                           
 11087 ;; *************** function _ENC28_Bfs *****************
 11088 ;; Defined at:
 11089 ;;		line 585 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 11090 ;; Parameters:    Size  Location     Type
 11091 ;;  a               1    wreg     enum E811
 11092 ;;  bits            1   17[BANK0 ] unsigned char 
 11093 ;; Auto vars:     Size  Location     Type
 11094 ;;  a               1   18[BANK0 ] enum E811
 11095 ;; Return value:  Size  Location     Type
 11096 ;;                  1    wreg      void 
 11097 ;; Registers used:
 11098 ;;		wreg, status,2, status,0, cstack
 11099 ;; Tracked objects:
 11100 ;;		On entry : 0/0
 11101 ;;		On exit  : 0/0
 11102 ;;		Unchanged: 0/0
 11103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11104 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11105 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11107 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;Total ram usage:        2 bytes
 11109 ;; Hardware stack levels used: 1
 11110 ;; Hardware stack levels required when called: 15
 11111 ;; This function calls:
 11112 ;;		_ENC28_BankSel
 11113 ;;		_SPI1_ExchangeByte
 11114 ;; This function is called by:
 11115 ;;		_ETH_Init
 11116 ;;		_ENC28_PhyRead
 11117 ;;		_ETH_EventHandler
 11118 ;;		_ETH_Flush
 11119 ;;		_ETH_Copy
 11120 ;;		_ETH_TxComputeChecksum
 11121 ;; This function uses a non-reentrant model
 11122 ;;
 11123                           
 11124                           	psect	text31
 11125   0027AA                     __ptext31:
 11126                           	callstack 0
 11127   0027AA                     _ENC28_Bfs:
 11128                           	callstack 10
 11129                           
 11130                           ; BSR set to: 0
 11131                           ;incstack = 0
 11132                           ;ENC28_Bfs@a stored from wreg
 11133   0027AA  0100               	movlb	0	; () banked
 11134   0027AC  6F72               	movwf	ENC28_Bfs@a& (0+255),b
 11135   0027AE                     
 11136                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 585: static void ENC28_Bfs(enc28j60_regist
      +                          ers_t a, char bits);mcc_generated_files/TCPIPLibrary/ENC28J60.c: 586: {;mcc_generated_fi
      +                          les/TCPIPLibrary/ENC28J60.c: 587:     ENC28_BankSel(a);
 11137   0027AE  0100               	movlb	0	; () banked
 11138   0027B0  5172               	movf	ENC28_Bfs@a& (0+255),w,b
 11139   0027B2  EC31  F010         	call	_ENC28_BankSel
 11140   0027B6  9285               	bcf	3973,1,c	;volatile
 11141   0027B8                     
 11142                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 589:     SPI1_ExchangeByte(bfs_inst | (a &
      +                           0x1F));
 11143   0027B8  0100               	movlb	0	; () banked
 11144   0027BA  5172               	movf	ENC28_Bfs@a& (0+255),w,b
 11145   0027BC  0B1F               	andlw	31
 11146   0027BE  0980               	iorlw	128
 11147   0027C0  EC5F  F014         	call	_SPI1_ExchangeByte
 11148   0027C4                     
 11149                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 590:     SPI1_ExchangeByte(bits);
 11150   0027C4  0100               	movlb	0	; () banked
 11151   0027C6  5171               	movf	ENC28_Bfs@bits& (0+255),w,b
 11152   0027C8  EC5F  F014         	call	_SPI1_ExchangeByte
 11153   0027CC  8285               	bsf	3973,1,c	;volatile
 11154   0027CE  0012               	return		;funcret
 11155   0027D0                     __end_of_ENC28_Bfs:
 11156                           	callstack 0
 11157                           
 11158 ;; *************** function _ENC28_Bfc *****************
 11159 ;; Defined at:
 11160 ;;		line 599 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 11161 ;; Parameters:    Size  Location     Type
 11162 ;;  a               1    wreg     enum E811
 11163 ;;  bits            1   17[BANK0 ] unsigned char 
 11164 ;; Auto vars:     Size  Location     Type
 11165 ;;  a               1   18[BANK0 ] enum E811
 11166 ;; Return value:  Size  Location     Type
 11167 ;;                  1    wreg      void 
 11168 ;; Registers used:
 11169 ;;		wreg, status,2, status,0, cstack
 11170 ;; Tracked objects:
 11171 ;;		On entry : 0/0
 11172 ;;		On exit  : 0/0
 11173 ;;		Unchanged: 0/0
 11174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11175 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11176 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11178 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11179 ;;Total ram usage:        2 bytes
 11180 ;; Hardware stack levels used: 1
 11181 ;; Hardware stack levels required when called: 15
 11182 ;; This function calls:
 11183 ;;		_ENC28_BankSel
 11184 ;;		_SPI1_ExchangeByte
 11185 ;; This function is called by:
 11186 ;;		_ENC28_PhyRead
 11187 ;;		_ETH_EventHandler
 11188 ;;		_ETH_Copy
 11189 ;;		_ETH_TxComputeChecksum
 11190 ;; This function uses a non-reentrant model
 11191 ;;
 11192                           
 11193                           	psect	text32
 11194   0027D0                     __ptext32:
 11195                           	callstack 0
 11196   0027D0                     _ENC28_Bfc:
 11197                           	callstack 10
 11198                           
 11199                           ;incstack = 0
 11200                           ;ENC28_Bfc@a stored from wreg
 11201   0027D0  0100               	movlb	0	; () banked
 11202   0027D2  6F72               	movwf	ENC28_Bfc@a& (0+255),b
 11203   0027D4                     
 11204                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 599: static void ENC28_Bfc(enc28j60_regist
      +                          ers_t a, char bits);mcc_generated_files/TCPIPLibrary/ENC28J60.c: 600: {;mcc_generated_fi
      +                          les/TCPIPLibrary/ENC28J60.c: 601:     ENC28_BankSel(a);
 11205   0027D4  0100               	movlb	0	; () banked
 11206   0027D6  5172               	movf	ENC28_Bfc@a& (0+255),w,b
 11207   0027D8  EC31  F010         	call	_ENC28_BankSel
 11208   0027DC  9285               	bcf	3973,1,c	;volatile
 11209   0027DE                     
 11210                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 603:     SPI1_ExchangeByte(bfc_inst | (a &
      +                           0x1F));
 11211   0027DE  0100               	movlb	0	; () banked
 11212   0027E0  5172               	movf	ENC28_Bfc@a& (0+255),w,b
 11213   0027E2  0B1F               	andlw	31
 11214   0027E4  09A0               	iorlw	160
 11215   0027E6  EC5F  F014         	call	_SPI1_ExchangeByte
 11216   0027EA                     
 11217                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 604:     SPI1_ExchangeByte(bits);
 11218   0027EA  0100               	movlb	0	; () banked
 11219   0027EC  5171               	movf	ENC28_Bfc@bits& (0+255),w,b
 11220   0027EE  EC5F  F014         	call	_SPI1_ExchangeByte
 11221   0027F2  8285               	bsf	3973,1,c	;volatile
 11222   0027F4  0012               	return		;funcret
 11223   0027F6                     __end_of_ENC28_Bfc:
 11224                           	callstack 0
 11225                           
 11226 ;; *************** function _ENC28_PhyWrite *****************
 11227 ;; Defined at:
 11228 ;;		line 613 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;  a               1    wreg     enum E926
 11231 ;;  d               2   20[BANK0 ] unsigned short 
 11232 ;; Auto vars:     Size  Location     Type
 11233 ;;  a               1   22[BANK0 ] enum E926
 11234 ;;  v               1   23[BANK0 ] unsigned char 
 11235 ;; Return value:  Size  Location     Type
 11236 ;;                  1    wreg      void 
 11237 ;; Registers used:
 11238 ;;		wreg, status,2, status,0, cstack
 11239 ;; Tracked objects:
 11240 ;;		On entry : 0/0
 11241 ;;		On exit  : 0/0
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11244 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11245 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11247 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11248 ;;Total ram usage:        4 bytes
 11249 ;; Hardware stack levels used: 1
 11250 ;; Hardware stack levels required when called: 16
 11251 ;; This function calls:
 11252 ;;		_ENC28_Rcr8
 11253 ;;		_ENC28_Wcr16
 11254 ;;		_ENC28_Wcr8
 11255 ;; This function is called by:
 11256 ;;		_ETH_Init
 11257 ;; This function uses a non-reentrant model
 11258 ;;
 11259                           
 11260                           	psect	text33
 11261   0023AE                     __ptext33:
 11262                           	callstack 0
 11263   0023AE                     _ENC28_PhyWrite:
 11264                           	callstack 11
 11265                           
 11266                           ;incstack = 0
 11267                           ;ENC28_PhyWrite@a stored from wreg
 11268   0023AE  0100               	movlb	0	; () banked
 11269   0023B0  6F76               	movwf	ENC28_PhyWrite@a& (0+255),b
 11270   0023B2                     
 11271                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 613: static void ENC28_PhyWrite(enc28j60_p
      +                          hy_registers_t a, uint16_t d);mcc_generated_files/TCPIPLibrary/ENC28J60.c: 614: {;mcc_ge
      +                          nerated_files/TCPIPLibrary/ENC28J60.c: 615:     uint8_t v=1;
 11272   0023B2  0E01               	movlw	1
 11273   0023B4  0100               	movlb	0	; () banked
 11274   0023B6  6F77               	movwf	ENC28_PhyWrite@v& (0+255),b
 11275   0023B8                     
 11276                           ; BSR set to: 0
 11277                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 617:     ENC28_Wcr8(J60_MIREGADR, a);
 11278   0023B8  C076  F071         	movff	ENC28_PhyWrite@a,ENC28_Wcr8@v
 11279   0023BC  0E94               	movlw	148
 11280   0023BE  ECFB  F013         	call	_ENC28_Wcr8
 11281   0023C2                     
 11282                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 618:     ENC28_Wcr16(J60_MIWRL, d);
 11283   0023C2  C074  F071         	movff	ENC28_PhyWrite@d,ENC28_Wcr16@v
 11284   0023C6  C075  F072         	movff	ENC28_PhyWrite@d+1,ENC28_Wcr16@v+1
 11285   0023CA  0E96               	movlw	150
 11286   0023CC  ECF8  F011         	call	_ENC28_Wcr16
 11287                           
 11288                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 619:     while(v & 0x01)
 11289   0023D0  EFEF  F011         	goto	l9092
 11290   0023D4                     l9090:
 11291                           
 11292                           ; BSR set to: 0
 11293                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 620:     {;mcc_generated_files/TCPIPLibrar
      +                          y/ENC28J60.c: 621:         v = ENC28_Rcr8(J60_MISTAT);
 11294   0023D4  0ECA               	movlw	202
 11295   0023D6  EC9A  F013         	call	_ENC28_Rcr8
 11296   0023DA  0100               	movlb	0	; () banked
 11297   0023DC  6F77               	movwf	ENC28_PhyWrite@v& (0+255),b
 11298   0023DE                     l9092:
 11299                           
 11300                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 619:     while(v & 0x01)
 11301   0023DE  0100               	movlb	0	; () banked
 11302   0023E0  B177               	btfsc	ENC28_PhyWrite@v& (0+255),0,b
 11303   0023E2  EFF5  F011         	goto	u6921
 11304   0023E6  EFF7  F011         	goto	u6920
 11305   0023EA                     u6921:
 11306   0023EA  EFEA  F011         	goto	l9090
 11307   0023EE                     u6920:
 11308   0023EE                     
 11309                           ; BSR set to: 0
 11310   0023EE  0012               	return		;funcret
 11311   0023F0                     __end_of_ENC28_PhyWrite:
 11312                           	callstack 0
 11313                           
 11314 ;; *************** function _ENC28_Wcr8 *****************
 11315 ;; Defined at:
 11316 ;;		line 550 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 11317 ;; Parameters:    Size  Location     Type
 11318 ;;  a               1    wreg     enum E811
 11319 ;;  v               1   17[BANK0 ] unsigned char 
 11320 ;; Auto vars:     Size  Location     Type
 11321 ;;  a               1   18[BANK0 ] enum E811
 11322 ;; Return value:  Size  Location     Type
 11323 ;;                  1    wreg      void 
 11324 ;; Registers used:
 11325 ;;		wreg, status,2, status,0, cstack
 11326 ;; Tracked objects:
 11327 ;;		On entry : 0/0
 11328 ;;		On exit  : 0/0
 11329 ;;		Unchanged: 0/0
 11330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11331 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11332 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11334 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11335 ;;Total ram usage:        2 bytes
 11336 ;; Hardware stack levels used: 1
 11337 ;; Hardware stack levels required when called: 15
 11338 ;; This function calls:
 11339 ;;		_ENC28_BankSel
 11340 ;;		_SPI1_ExchangeByte
 11341 ;; This function is called by:
 11342 ;;		_ETH_Init
 11343 ;;		_ENC28_PhyWrite
 11344 ;;		_ENC28_PhyRead
 11345 ;;		_ETH_ResetReceiver
 11346 ;;		_ETH_SendQueued
 11347 ;;		_ETH_Shift_Tx_Packets
 11348 ;;		_ETH_SetMAC
 11349 ;;		_ETH_TxReset
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353                           	psect	text34
 11354   0027F6                     __ptext34:
 11355                           	callstack 0
 11356   0027F6                     _ENC28_Wcr8:
 11357                           	callstack 10
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;incstack = 0
 11361                           ;ENC28_Wcr8@a stored from wreg
 11362   0027F6  0100               	movlb	0	; () banked
 11363   0027F8  6F72               	movwf	ENC28_Wcr8@a& (0+255),b
 11364   0027FA                     
 11365                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 550: static void ENC28_Wcr8(enc28j60_regis
      +                          ters_t a, uint8_t v);mcc_generated_files/TCPIPLibrary/ENC28J60.c: 551: {;mcc_generated_f
      +                          iles/TCPIPLibrary/ENC28J60.c: 552:     ENC28_BankSel(a);
 11366   0027FA  0100               	movlb	0	; () banked
 11367   0027FC  5172               	movf	ENC28_Wcr8@a& (0+255),w,b
 11368   0027FE  EC31  F010         	call	_ENC28_BankSel
 11369   002802  9285               	bcf	3973,1,c	;volatile
 11370   002804                     
 11371                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 554:     SPI1_ExchangeByte(wcr_inst | (a &
      +                           0x1F));
 11372   002804  0100               	movlb	0	; () banked
 11373   002806  5172               	movf	ENC28_Wcr8@a& (0+255),w,b
 11374   002808  0B1F               	andlw	31
 11375   00280A  0940               	iorlw	64
 11376   00280C  EC5F  F014         	call	_SPI1_ExchangeByte
 11377   002810                     
 11378                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 555:     SPI1_ExchangeByte(v);
 11379   002810  0100               	movlb	0	; () banked
 11380   002812  5171               	movf	ENC28_Wcr8@v& (0+255),w,b
 11381   002814  EC5F  F014         	call	_SPI1_ExchangeByte
 11382   002818  8285               	bsf	3973,1,c	;volatile
 11383   00281A  0012               	return		;funcret
 11384   00281C                     __end_of_ENC28_Wcr8:
 11385                           	callstack 0
 11386                           
 11387 ;; *************** function _ENC28_Wcr16 *****************
 11388 ;; Defined at:
 11389 ;;		line 564 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 11390 ;; Parameters:    Size  Location     Type
 11391 ;;  a               1    wreg     enum E811
 11392 ;;  v               2   17[BANK0 ] unsigned short 
 11393 ;; Auto vars:     Size  Location     Type
 11394 ;;  a               1   19[BANK0 ] enum E811
 11395 ;; Return value:  Size  Location     Type
 11396 ;;                  1    wreg      void 
 11397 ;; Registers used:
 11398 ;;		wreg, status,2, status,0, cstack
 11399 ;; Tracked objects:
 11400 ;;		On entry : 0/0
 11401 ;;		On exit  : 0/0
 11402 ;;		Unchanged: 0/0
 11403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11404 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11407 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11408 ;;Total ram usage:        3 bytes
 11409 ;; Hardware stack levels used: 1
 11410 ;; Hardware stack levels required when called: 15
 11411 ;; This function calls:
 11412 ;;		_ENC28_BankSel
 11413 ;;		_SPI1_ExchangeByte
 11414 ;; This function is called by:
 11415 ;;		_ETH_Init
 11416 ;;		_ENC28_PhyWrite
 11417 ;;		_ETH_EventHandler
 11418 ;;		_ETH_NextPacketUpdate
 11419 ;;		_ETH_WriteStart
 11420 ;;		_ETH_SendQueued
 11421 ;;		_ETH_Send
 11422 ;;		_ETH_Dump
 11423 ;;		_ETH_Flush
 11424 ;;		_ETH_Insert
 11425 ;;		_ETH_Copy
 11426 ;;		_ETH_Shift_Tx_Packets
 11427 ;;		_ETH_TxComputeChecksum
 11428 ;;		_ETH_RxComputeChecksum
 11429 ;;		_ETH_SetReadPtr
 11430 ;;		_ETH_MoveBackReadPtr
 11431 ;;		_ETH_ResetReadPtr
 11432 ;;		_ETH_TxReset
 11433 ;; This function uses a non-reentrant model
 11434 ;;
 11435                           
 11436                           	psect	text35
 11437   0023F0                     __ptext35:
 11438                           	callstack 0
 11439   0023F0                     _ENC28_Wcr16:
 11440                           	callstack 12
 11441                           
 11442                           ;incstack = 0
 11443                           ;ENC28_Wcr16@a stored from wreg
 11444   0023F0  0100               	movlb	0	; () banked
 11445   0023F2  6F73               	movwf	ENC28_Wcr16@a& (0+255),b
 11446   0023F4                     
 11447                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 564: static void ENC28_Wcr16(enc28j60_regi
      +                          sters_t a, uint16_t v);mcc_generated_files/TCPIPLibrary/ENC28J60.c: 565: {;mcc_generated
      +                          _files/TCPIPLibrary/ENC28J60.c: 566:     ENC28_BankSel(a);
 11448   0023F4  0100               	movlb	0	; () banked
 11449   0023F6  5173               	movf	ENC28_Wcr16@a& (0+255),w,b
 11450   0023F8  EC31  F010         	call	_ENC28_BankSel
 11451   0023FC                     
 11452                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 567:     a &= 0x1F;
 11453   0023FC  0E1F               	movlw	31
 11454   0023FE  0100               	movlb	0	; () banked
 11455   002400  1773               	andwf	ENC28_Wcr16@a& (0+255),f,b
 11456   002402                     
 11457                           ; BSR set to: 0
 11458   002402  9285               	bcf	3973,1,c	;volatile
 11459   002404                     
 11460                           ; BSR set to: 0
 11461                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 569:     SPI1_ExchangeByte(wcr_inst | (a))
      +                          ;
 11462   002404  5173               	movf	ENC28_Wcr16@a& (0+255),w,b
 11463   002406  0940               	iorlw	64
 11464   002408  EC5F  F014         	call	_SPI1_ExchangeByte
 11465   00240C                     
 11466                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 570:     SPI1_ExchangeByte(((char *) &v)[0
      +                          ]);
 11467   00240C  0100               	movlb	0	; () banked
 11468   00240E  5171               	movf	ENC28_Wcr16@v& (0+255),w,b
 11469   002410  EC5F  F014         	call	_SPI1_ExchangeByte
 11470   002414  8285               	bsf	3973,1,c	;volatile
 11471   002416  0000               	nop		;# 
 11472   002418  0000               	nop		;# 
 11473   00241A  9285               	bcf	3973,1,c	;volatile
 11474   00241C                     
 11475                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 575:     SPI1_ExchangeByte(wcr_inst | (a +
      +                           1));
 11476   00241C  0100               	movlb	0	; () banked
 11477   00241E  2973               	incf	ENC28_Wcr16@a& (0+255),w,b
 11478   002420  0940               	iorlw	64
 11479   002422  EC5F  F014         	call	_SPI1_ExchangeByte
 11480   002426                     
 11481                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 576:     SPI1_ExchangeByte(((char *) &v)[1
      +                          ]);
 11482   002426  0100               	movlb	0	; () banked
 11483   002428  5172               	movf	(ENC28_Wcr16@v+1)& (0+255),w,b
 11484   00242A  EC5F  F014         	call	_SPI1_ExchangeByte
 11485   00242E  8285               	bsf	3973,1,c	;volatile
 11486   002430  0012               	return		;funcret
 11487   002432                     __end_of_ENC28_Wcr16:
 11488                           	callstack 0
 11489                           
 11490 ;; *************** function _DHCP_init *****************
 11491 ;; Defined at:
 11492 ;;		line 207 in file "mcc_generated_files/TCPIPLibrary/dhcp_client.c"
 11493 ;; Parameters:    Size  Location     Type
 11494 ;;		None
 11495 ;; Auto vars:     Size  Location     Type
 11496 ;;		None
 11497 ;; Return value:  Size  Location     Type
 11498 ;;                  1    wreg      void 
 11499 ;; Registers used:
 11500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11501 ;; Tracked objects:
 11502 ;;		On entry : 0/0
 11503 ;;		On exit  : 0/0
 11504 ;;		Unchanged: 0/0
 11505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11510 ;;Total ram usage:        0 bytes
 11511 ;; Hardware stack levels used: 1
 11512 ;; Hardware stack levels required when called: 17
 11513 ;; This function calls:
 11514 ;;		_ETH_GetMAC
 11515 ;; This function is called by:
 11516 ;;		_Network_Init
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           	psect	text36
 11521   0029BC                     __ptext36:
 11522                           	callstack 0
 11523   0029BC                     _DHCP_init:
 11524                           	callstack 11
 11525   0029BC                     
 11526                           ;mcc_generated_files/TCPIPLibrary/dhcp_client.c: 209:     ETH_GetMAC((uint8_t *) &ethMAC
      +                          );
 11527   0029BC  0EA7               	movlw	low _ethMAC
 11528   0029BE  0100               	movlb	0	; () banked
 11529   0029C0  6F73               	movwf	ETH_GetMAC@macAddr& (0+255),b
 11530   0029C2  0E01               	movlw	high _ethMAC
 11531   0029C4  6F74               	movwf	(ETH_GetMAC@macAddr+1)& (0+255),b
 11532   0029C6  EC54  F00F         	call	_ETH_GetMAC	;wreg free
 11533   0029CA  0012               	return		;funcret
 11534   0029CC                     __end_of_DHCP_init:
 11535                           	callstack 0
 11536                           
 11537 ;; *************** function _ARPV4_Init *****************
 11538 ;; Defined at:
 11539 ;;		line 87 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 11540 ;; Parameters:    Size  Location     Type
 11541 ;;		None
 11542 ;; Auto vars:     Size  Location     Type
 11543 ;;  x               1   21[BANK0 ] unsigned char 
 11544 ;; Return value:  Size  Location     Type
 11545 ;;                  1    wreg      void 
 11546 ;; Registers used:
 11547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11548 ;; Tracked objects:
 11549 ;;		On entry : 0/0
 11550 ;;		On exit  : 0/0
 11551 ;;		Unchanged: 0/0
 11552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11554 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11556 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11557 ;;Total ram usage:        1 bytes
 11558 ;; Hardware stack levels used: 1
 11559 ;; Hardware stack levels required when called: 17
 11560 ;; This function calls:
 11561 ;;		_ETH_GetMAC
 11562 ;; This function is called by:
 11563 ;;		_Network_Init
 11564 ;; This function uses a non-reentrant model
 11565 ;;
 11566                           
 11567                           	psect	text37
 11568   0025CC                     __ptext37:
 11569                           	callstack 0
 11570   0025CC                     _ARPV4_Init:
 11571                           	callstack 11
 11572   0025CC                     
 11573                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 89:     for(uint8_t x= 0 ; x < 8; x++)
 11574   0025CC  0100               	movlb	0	; () banked
 11575   0025CE  6B75               	clrf	ARPV4_Init@x& (0+255),b
 11576   0025D0                     l9278:
 11577                           
 11578                           ; BSR set to: 0
 11579                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 90:     {;mcc_generated_files/TCPIPLibrary/ar
      +                          pv4.c: 91:         ((char *)arpMap)[x] = 0;
 11580   0025D0  0E17               	movlw	low _arpMap
 11581   0025D2  2575               	addwf	ARPV4_Init@x& (0+255),w,b
 11582   0025D4  6ED9               	movwf	fsr2l,c
 11583   0025D6  6ADA               	clrf	fsr2h,c
 11584   0025D8  0E02               	movlw	high _arpMap
 11585   0025DA  22DA               	addwfc	fsr2h,f,c
 11586   0025DC  6ADF               	clrf	indf2,c
 11587   0025DE                     
 11588                           ; BSR set to: 0
 11589                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 92:     }
 11590   0025DE  2B75               	incf	ARPV4_Init@x& (0+255),f,b
 11591   0025E0                     
 11592                           ; BSR set to: 0
 11593   0025E0  0E07               	movlw	7
 11594   0025E2  6575               	cpfsgt	ARPV4_Init@x& (0+255),b
 11595   0025E4  EFF6  F012         	goto	u6981
 11596   0025E8  EFF8  F012         	goto	u6980
 11597   0025EC                     u6981:
 11598   0025EC  EFE8  F012         	goto	l9278
 11599   0025F0                     u6980:
 11600   0025F0                     
 11601                           ; BSR set to: 0
 11602                           ;mcc_generated_files/TCPIPLibrary/arpv4.c: 93:     ETH_GetMAC((uint8_t*)&hostMacAddress)
      +                          ;
 11603   0025F0  0EAD               	movlw	low _hostMacAddress
 11604   0025F2  6F73               	movwf	ETH_GetMAC@macAddr& (0+255),b
 11605   0025F4  0E01               	movlw	high _hostMacAddress
 11606   0025F6  6F74               	movwf	(ETH_GetMAC@macAddr+1)& (0+255),b
 11607   0025F8  EC54  F00F         	call	_ETH_GetMAC	;wreg free
 11608   0025FC  0012               	return		;funcret
 11609   0025FE                     __end_of_ARPV4_Init:
 11610                           	callstack 0
 11611                           
 11612 ;; *************** function _ETH_GetMAC *****************
 11613 ;; Defined at:
 11614 ;;		line 1214 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 11615 ;; Parameters:    Size  Location     Type
 11616 ;;  macAddr         2   19[BANK0 ] PTR unsigned char 
 11617 ;;		 -> ethMAC(6), hostMacAddress(6), 
 11618 ;; Auto vars:     Size  Location     Type
 11619 ;;		None
 11620 ;; Return value:  Size  Location     Type
 11621 ;;                  1    wreg      void 
 11622 ;; Registers used:
 11623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11624 ;; Tracked objects:
 11625 ;;		On entry : 0/0
 11626 ;;		On exit  : 0/0
 11627 ;;		Unchanged: 0/0
 11628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11629 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11632 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11633 ;;Total ram usage:        2 bytes
 11634 ;; Hardware stack levels used: 1
 11635 ;; Hardware stack levels required when called: 16
 11636 ;; This function calls:
 11637 ;;		_ENC28_Rcr8
 11638 ;; This function is called by:
 11639 ;;		_ARPV4_Init
 11640 ;;		_DHCP_init
 11641 ;; This function uses a non-reentrant model
 11642 ;;
 11643                           
 11644                           	psect	text38
 11645   001EA8                     __ptext38:
 11646                           	callstack 0
 11647   001EA8                     _ETH_GetMAC:
 11648                           	callstack 11
 11649   001EA8                     
 11650                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 1214: void ETH_GetMAC(uint8_t *macAddr);mc
      +                          c_generated_files/TCPIPLibrary/ENC28J60.c: 1215: {;mcc_generated_files/TCPIPLibrary/ENC2
      +                          8J60.c: 1216:    *macAddr++ = ENC28_Rcr8(J60_MAADR1);
 11651   001EA8  0EC4               	movlw	196
 11652   001EAA  EC9A  F013         	call	_ENC28_Rcr8
 11653   001EAE  C073  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 11654   001EB2  C074  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 11655   001EB6  6EDF               	movwf	indf2,c
 11656   001EB8  0100               	movlb	0	; () banked
 11657   001EBA  4B73               	infsnz	ETH_GetMAC@macAddr& (0+255),f,b
 11658   001EBC  2B74               	incf	(ETH_GetMAC@macAddr+1)& (0+255),f,b
 11659   001EBE                     
 11660                           ; BSR set to: 0
 11661                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 1217:     *macAddr++ = ENC28_Rcr8(J60_MAAD
      +                          R2);
 11662   001EBE  0EC5               	movlw	197
 11663   001EC0  EC9A  F013         	call	_ENC28_Rcr8
 11664   001EC4  C073  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 11665   001EC8  C074  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 11666   001ECC  6EDF               	movwf	indf2,c
 11667   001ECE  0100               	movlb	0	; () banked
 11668   001ED0  4B73               	infsnz	ETH_GetMAC@macAddr& (0+255),f,b
 11669   001ED2  2B74               	incf	(ETH_GetMAC@macAddr+1)& (0+255),f,b
 11670   001ED4                     
 11671                           ; BSR set to: 0
 11672                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 1218:     *macAddr++ = ENC28_Rcr8(J60_MAAD
      +                          R3);
 11673   001ED4  0EC2               	movlw	194
 11674   001ED6  EC9A  F013         	call	_ENC28_Rcr8
 11675   001EDA  C073  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 11676   001EDE  C074  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 11677   001EE2  6EDF               	movwf	indf2,c
 11678   001EE4  0100               	movlb	0	; () banked
 11679   001EE6  4B73               	infsnz	ETH_GetMAC@macAddr& (0+255),f,b
 11680   001EE8  2B74               	incf	(ETH_GetMAC@macAddr+1)& (0+255),f,b
 11681                           
 11682                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 1219:     *macAddr++ = ENC28_Rcr8(J60_MAAD
      +                          R4);
 11683   001EEA  0EC3               	movlw	195
 11684   001EEC  EC9A  F013         	call	_ENC28_Rcr8
 11685   001EF0  C073  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 11686   001EF4  C074  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 11687   001EF8  6EDF               	movwf	indf2,c
 11688   001EFA  0100               	movlb	0	; () banked
 11689   001EFC  4B73               	infsnz	ETH_GetMAC@macAddr& (0+255),f,b
 11690   001EFE  2B74               	incf	(ETH_GetMAC@macAddr+1)& (0+255),f,b
 11691   001F00                     
 11692                           ; BSR set to: 0
 11693                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 1220:     *macAddr++ = ENC28_Rcr8(J60_MAAD
      +                          R5);
 11694   001F00  0EC0               	movlw	192
 11695   001F02  EC9A  F013         	call	_ENC28_Rcr8
 11696   001F06  C073  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 11697   001F0A  C074  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 11698   001F0E  6EDF               	movwf	indf2,c
 11699   001F10  0100               	movlb	0	; () banked
 11700   001F12  4B73               	infsnz	ETH_GetMAC@macAddr& (0+255),f,b
 11701   001F14  2B74               	incf	(ETH_GetMAC@macAddr+1)& (0+255),f,b
 11702   001F16                     
 11703                           ; BSR set to: 0
 11704                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 1221:     *macAddr++ = ENC28_Rcr8(J60_MAAD
      +                          R6);
 11705   001F16  0EC1               	movlw	193
 11706   001F18  EC9A  F013         	call	_ENC28_Rcr8
 11707   001F1C  C073  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 11708   001F20  C074  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 11709   001F24  6EDF               	movwf	indf2,c
 11710   001F26  0100               	movlb	0	; () banked
 11711   001F28  4B73               	infsnz	ETH_GetMAC@macAddr& (0+255),f,b
 11712   001F2A  2B74               	incf	(ETH_GetMAC@macAddr+1)& (0+255),f,b
 11713   001F2C                     
 11714                           ; BSR set to: 0
 11715   001F2C  0012               	return		;funcret
 11716   001F2E                     __end_of_ETH_GetMAC:
 11717                           	callstack 0
 11718                           
 11719 ;; *************** function _ENC28_Rcr8 *****************
 11720 ;; Defined at:
 11721 ;;		line 507 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 11722 ;; Parameters:    Size  Location     Type
 11723 ;;  a               1    wreg     enum E811
 11724 ;; Auto vars:     Size  Location     Type
 11725 ;;  a               1   18[BANK0 ] enum E811
 11726 ;;  v               1   17[BANK0 ] unsigned char 
 11727 ;; Return value:  Size  Location     Type
 11728 ;;                  1    wreg      unsigned char 
 11729 ;; Registers used:
 11730 ;;		wreg, status,2, status,0, cstack
 11731 ;; Tracked objects:
 11732 ;;		On entry : 0/0
 11733 ;;		On exit  : 0/0
 11734 ;;		Unchanged: 0/0
 11735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11737 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11739 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11740 ;;Total ram usage:        2 bytes
 11741 ;; Hardware stack levels used: 1
 11742 ;; Hardware stack levels required when called: 15
 11743 ;; This function calls:
 11744 ;;		_ENC28_BankSel
 11745 ;;		_SPI1_ExchangeByte
 11746 ;; This function is called by:
 11747 ;;		_ETH_Init
 11748 ;;		_ENC28_PhyWrite
 11749 ;;		_ENC28_PhyRead
 11750 ;;		_ETH_GetMAC
 11751 ;;		_ETH_EventHandler
 11752 ;;		_ETH_ResetReceiver
 11753 ;;		_ETH_WriteStart
 11754 ;;		_ETH_SendQueued
 11755 ;;		_ETH_Copy
 11756 ;;		_ETH_Shift_Tx_Packets
 11757 ;;		_ETH_TxComputeChecksum
 11758 ;;		_ETH_TxReset
 11759 ;; This function uses a non-reentrant model
 11760 ;;
 11761                           
 11762                           	psect	text39
 11763   002734                     __ptext39:
 11764                           	callstack 0
 11765   002734                     _ENC28_Rcr8:
 11766                           	callstack 10
 11767                           
 11768                           ; BSR set to: 0
 11769                           ;incstack = 0
 11770                           ;ENC28_Rcr8@a stored from wreg
 11771   002734  0100               	movlb	0	; () banked
 11772   002736  6F72               	movwf	ENC28_Rcr8@a& (0+255),b
 11773   002738                     
 11774                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 507: static uint8_t ENC28_Rcr8(enc28j60_re
      +                          gisters_t a);mcc_generated_files/TCPIPLibrary/ENC28J60.c: 508: {;mcc_generated_files/TCP
      +                          IPLibrary/ENC28J60.c: 509:     uint8_t v;;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 5
      +                          11:     ENC28_BankSel(a);
 11775   002738  0100               	movlb	0	; () banked
 11776   00273A  5172               	movf	ENC28_Rcr8@a& (0+255),w,b
 11777   00273C  EC31  F010         	call	_ENC28_BankSel
 11778   002740  9285               	bcf	3973,1,c	;volatile
 11779   002742                     
 11780                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 513:     SPI1_ExchangeByte(rcr_inst | (a &
      +                           0x1F));
 11781   002742  0100               	movlb	0	; () banked
 11782   002744  5172               	movf	ENC28_Rcr8@a& (0+255),w,b
 11783   002746  0B1F               	andlw	31
 11784   002748  EC5F  F014         	call	_SPI1_ExchangeByte
 11785   00274C                     
 11786                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 514:     v = SPI1_ExchangeByte(0);
 11787   00274C  0E00               	movlw	0
 11788   00274E  EC5F  F014         	call	_SPI1_ExchangeByte
 11789   002752  0100               	movlb	0	; () banked
 11790   002754  6F71               	movwf	ENC28_Rcr8@v& (0+255),b
 11791   002756                     
 11792                           ; BSR set to: 0
 11793   002756  8285               	bsf	3973,1,c	;volatile
 11794   002758                     
 11795                           ; BSR set to: 0
 11796                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 517:     return v;
 11797   002758  5171               	movf	ENC28_Rcr8@v& (0+255),w,b
 11798   00275A                     
 11799                           ; BSR set to: 0
 11800   00275A  0012               	return		;funcret
 11801   00275C                     __end_of_ENC28_Rcr8:
 11802                           	callstack 0
 11803                           
 11804 ;; *************** function _ENC28_BankSel *****************
 11805 ;; Defined at:
 11806 ;;		line 139 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 11807 ;; Parameters:    Size  Location     Type
 11808 ;;  r               1    wreg     enum E811
 11809 ;; Auto vars:     Size  Location     Type
 11810 ;;  r               1   15[BANK0 ] enum E811
 11811 ;;  a               1   16[BANK0 ] unsigned char 
 11812 ;; Return value:  Size  Location     Type
 11813 ;;                  1    wreg      void 
 11814 ;; Registers used:
 11815 ;;		wreg, status,2, status,0, cstack
 11816 ;; Tracked objects:
 11817 ;;		On entry : 0/0
 11818 ;;		On exit  : 0/0
 11819 ;;		Unchanged: 0/0
 11820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11822 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11824 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11825 ;;Total ram usage:        2 bytes
 11826 ;; Hardware stack levels used: 1
 11827 ;; Hardware stack levels required when called: 14
 11828 ;; This function calls:
 11829 ;;		_SPI1_ExchangeByte
 11830 ;; This function is called by:
 11831 ;;		_ENC28_Rcr8
 11832 ;;		_ENC28_Rcr16
 11833 ;;		_ENC28_Wcr8
 11834 ;;		_ENC28_Wcr16
 11835 ;;		_ENC28_Bfs
 11836 ;;		_ENC28_Bfc
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           
 11840                           	psect	text40
 11841   002062                     __ptext40:
 11842                           	callstack 0
 11843   002062                     _ENC28_BankSel:
 11844                           	callstack 10
 11845                           
 11846                           ; BSR set to: 0
 11847                           ;incstack = 0
 11848                           ;ENC28_BankSel@r stored from wreg
 11849   002062  0100               	movlb	0	; () banked
 11850   002064  6F6F               	movwf	ENC28_BankSel@r& (0+255),b
 11851   002066                     
 11852                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 139: static void ENC28_BankSel(enc28j60_re
      +                          gisters_t r);mcc_generated_files/TCPIPLibrary/ENC28J60.c: 140: {;mcc_generated_files/TCP
      +                          IPLibrary/ENC28J60.c: 141:     uint8_t a = r & 0xE0;
 11853   002066  0100               	movlb	0	; () banked
 11854   002068  516F               	movf	ENC28_BankSel@r& (0+255),w,b
 11855   00206A  0BE0               	andlw	224
 11856   00206C  6F70               	movwf	ENC28_BankSel@a& (0+255),b
 11857                           
 11858                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 143:     if (a != sfr_common && a != lastB
      +                          ank)
 11859   00206E  0EE0               	movlw	224
 11860   002070  1970               	xorwf	ENC28_BankSel@a& (0+255),w,b
 11861   002072  B4D8               	btfsc	status,2,c
 11862   002074  EF3E  F010         	goto	u5861
 11863   002078  EF40  F010         	goto	u5860
 11864   00207C                     u5861:
 11865   00207C  EF60  F010         	goto	l748
 11866   002080                     u5860:
 11867   002080                     
 11868                           ; BSR set to: 0
 11869   002080  51CD               	movf	_lastBank& (0+255),w,b
 11870   002082  1970               	xorwf	ENC28_BankSel@a& (0+255),w,b
 11871   002084  B4D8               	btfsc	status,2,c
 11872   002086  EF47  F010         	goto	u5871
 11873   00208A  EF49  F010         	goto	u5870
 11874   00208E                     u5871:
 11875   00208E  EF60  F010         	goto	l748
 11876   002092                     u5870:
 11877   002092                     
 11878                           ; BSR set to: 0
 11879                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 144:     {;mcc_generated_files/TCPIPLibrar
      +                          y/ENC28J60.c: 145:         lastBank = a;
 11880   002092  C070  F0CD         	movff	ENC28_BankSel@a,_lastBank
 11881   002096                     
 11882                           ; BSR set to: 0
 11883   002096  9285               	bcf	3973,1,c	;volatile
 11884   002098                     
 11885                           ; BSR set to: 0
 11886                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 148:         SPI1_ExchangeByte(bfc_inst | 
      +                          0x1F);
 11887   002098  0EBF               	movlw	191
 11888   00209A  EC5F  F014         	call	_SPI1_ExchangeByte
 11889                           
 11890                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 149:         SPI1_ExchangeByte(0x03);
 11891   00209E  0E03               	movlw	3
 11892   0020A0  EC5F  F014         	call	_SPI1_ExchangeByte
 11893   0020A4  8285               	bsf	3973,1,c	;volatile
 11894   0020A6  0000               	nop		;# 
 11895   0020A8  0000               	nop		;# 
 11896   0020AA  9285               	bcf	3973,1,c	;volatile
 11897   0020AC                     
 11898                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 155:         SPI1_ExchangeByte(bfs_inst | 
      +                          0x1F);
 11899   0020AC  0E9F               	movlw	159
 11900   0020AE  EC5F  F014         	call	_SPI1_ExchangeByte
 11901   0020B2                     
 11902                           ;mcc_generated_files/TCPIPLibrary/ENC28J60.c: 156:         SPI1_ExchangeByte(a >> 6);
 11903   0020B2  0100               	movlb	0	; () banked
 11904   0020B4  4570               	rlncf	ENC28_BankSel@a& (0+255),w,b
 11905   0020B6  46E8               	rlncf	wreg,f,c
 11906   0020B8  0B03               	andlw	3
 11907   0020BA  EC5F  F014         	call	_SPI1_ExchangeByte
 11908   0020BE  8285               	bsf	3973,1,c	;volatile
 11909   0020C0                     l748:
 11910   0020C0  0012               	return		;funcret
 11911   0020C2                     __end_of_ENC28_BankSel:
 11912                           	callstack 0
 11913                           
 11914 ;; *************** function _SPI1_ExchangeByte *****************
 11915 ;; Defined at:
 11916 ;;		line 97 in file "mcc_generated_files/spi1.c"
 11917 ;; Parameters:    Size  Location     Type
 11918 ;;  data            1    wreg     unsigned char 
 11919 ;; Auto vars:     Size  Location     Type
 11920 ;;  data            1   14[BANK0 ] unsigned char 
 11921 ;; Return value:  Size  Location     Type
 11922 ;;                  1    wreg      unsigned char 
 11923 ;; Registers used:
 11924 ;;		wreg, status,2
 11925 ;; Tracked objects:
 11926 ;;		On entry : 0/0
 11927 ;;		On exit  : 0/0
 11928 ;;		Unchanged: 0/0
 11929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11931 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11933 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11934 ;;Total ram usage:        1 bytes
 11935 ;; Hardware stack levels used: 1
 11936 ;; Hardware stack levels required when called: 13
 11937 ;; This function calls:
 11938 ;;		Nothing
 11939 ;; This function is called by:
 11940 ;;		_ENC28_BankSel
 11941 ;;		_ENC28_Rcr8
 11942 ;;		_ENC28_Rcr16
 11943 ;;		_ENC28_Wcr8
 11944 ;;		_ENC28_Wcr16
 11945 ;;		_ENC28_Bfs
 11946 ;;		_ENC28_Bfc
 11947 ;;		_ETH_SendSystemReset
 11948 ;;		_SPI1_WriteBlock
 11949 ;;		_SPI1_ReadBlock
 11950 ;;		_ETH_NextPacketUpdate
 11951 ;;		_ETH_Read8
 11952 ;;		_ETH_Read16
 11953 ;;		_ETH_Read32
 11954 ;;		_ETH_ReadBlock
 11955 ;;		_ETH_Write8
 11956 ;;		_ETH_Write16
 11957 ;;		_ETH_Write32
 11958 ;;		_ETH_WriteString
 11959 ;;		_ETH_WriteBlock
 11960 ;;		_ETH_WriteStart
 11961 ;;		_ETH_Insert
 11962 ;; This function uses a non-reentrant model
 11963 ;;
 11964                           
 11965                           	psect	text41
 11966   0028BE                     __ptext41:
 11967                           	callstack 0
 11968   0028BE                     _SPI1_ExchangeByte:
 11969                           	callstack 11
 11970                           
 11971                           ;incstack = 0
 11972                           ;SPI1_ExchangeByte@data stored from wreg
 11973   0028BE  0100               	movlb	0	; () banked
 11974   0028C0  6F6E               	movwf	SPI1_ExchangeByte@data& (0+255),b
 11975   0028C2                     
 11976                           ;mcc_generated_files/spi1.c: 97: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 98: {;mcc_generated_files/spi1.c: 99:     SSP1BUF = data;
 11977   0028C2  C06E  FF92         	movff	SPI1_ExchangeByte@data,3986	;volatile
 11978   0028C6                     l271:
 11979   0028C6  010E               	movlb	14	; () banked
 11980   0028C8  A1CD               	btfss	205,0,b	;volatile
 11981   0028CA  EF69  F014         	goto	u5151
 11982   0028CE  EF6B  F014         	goto	u5150
 11983   0028D2                     u5151:
 11984   0028D2  EF63  F014         	goto	l271
 11985   0028D6                     u5150:
 11986   0028D6                     
 11987                           ; BSR set to: 14
 11988                           ;mcc_generated_files/spi1.c: 101:     PIR3bits.SSP1IF = 0;
 11989   0028D6  91CD               	bcf	205,0,b	;volatile
 11990                           
 11991                           ;mcc_generated_files/spi1.c: 102:     return SSP1BUF;
 11992   0028D8  5092               	movf	146,w,c	;volatile
 11993   0028DA                     
 11994                           ; BSR set to: 14
 11995   0028DA  0012               	return		;funcret
 11996   0028DC                     __end_of_SPI1_ExchangeByte:
 11997                           	callstack 0
 11998                           
 11999 ;; *************** function _INTERRUPT_Initialize *****************
 12000 ;; Defined at:
 12001 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12002 ;; Parameters:    Size  Location     Type
 12003 ;;		None
 12004 ;; Auto vars:     Size  Location     Type
 12005 ;;		None
 12006 ;; Return value:  Size  Location     Type
 12007 ;;                  1    wreg      void 
 12008 ;; Registers used:
 12009 ;;		None
 12010 ;; Tracked objects:
 12011 ;;		On entry : 0/0
 12012 ;;		On exit  : 0/0
 12013 ;;		Unchanged: 0/0
 12014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12019 ;;Total ram usage:        0 bytes
 12020 ;; Hardware stack levels used: 1
 12021 ;; Hardware stack levels required when called: 13
 12022 ;; This function calls:
 12023 ;;		Nothing
 12024 ;; This function is called by:
 12025 ;;		_SYSTEM_Initialize
 12026 ;; This function uses a non-reentrant model
 12027 ;;
 12028                           
 12029                           	psect	text42
 12030   002A62                     __ptext42:
 12031                           	callstack 0
 12032   002A62                     _INTERRUPT_Initialize:
 12033                           	callstack 16
 12034   002A62                     
 12035                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 12036   002A62  9AF2               	bcf	242,5,c	;volatile
 12037   002A64  0012               	return		;funcret
 12038   002A66                     __end_of_INTERRUPT_Initialize:
 12039                           	callstack 0
 12040                           
 12041 ;; *************** function _EUSART1_Initialize *****************
 12042 ;; Defined at:
 12043 ;;		line 66 in file "mcc_generated_files/eusart1.c"
 12044 ;; Parameters:    Size  Location     Type
 12045 ;;		None
 12046 ;; Auto vars:     Size  Location     Type
 12047 ;;		None
 12048 ;; Return value:  Size  Location     Type
 12049 ;;                  1    wreg      void 
 12050 ;; Registers used:
 12051 ;;		wreg, status,2, status,0, cstack
 12052 ;; Tracked objects:
 12053 ;;		On entry : 0/0
 12054 ;;		On exit  : 0/0
 12055 ;;		Unchanged: 0/0
 12056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12061 ;;Total ram usage:        0 bytes
 12062 ;; Hardware stack levels used: 1
 12063 ;; Hardware stack levels required when called: 14
 12064 ;; This function calls:
 12065 ;;		_EUSART1_SetErrorHandler
 12066 ;;		_EUSART1_SetFramingErrorHandler
 12067 ;;		_EUSART1_SetOverrunErrorHandler
 12068 ;; This function is called by:
 12069 ;;		_SYSTEM_Initialize
 12070 ;; This function uses a non-reentrant model
 12071 ;;
 12072                           
 12073                           	psect	text43
 12074   002432                     __ptext43:
 12075                           	callstack 0
 12076   002432                     _EUSART1_Initialize:
 12077                           	callstack 15
 12078   002432                     
 12079                           ;mcc_generated_files/eusart1.c: 71:     BAUD1CON = 0x08;
 12080   002432  0E08               	movlw	8
 12081   002434  6E9F               	movwf	159,c	;volatile
 12082                           
 12083                           ;mcc_generated_files/eusart1.c: 74:     RC1STA = 0x90;
 12084   002436  0E90               	movlw	144
 12085   002438  6E9D               	movwf	157,c	;volatile
 12086                           
 12087                           ;mcc_generated_files/eusart1.c: 77:     TX1STA = 0x24;
 12088   00243A  0E24               	movlw	36
 12089   00243C  6E9E               	movwf	158,c	;volatile
 12090                           
 12091                           ;mcc_generated_files/eusart1.c: 80:     SP1BRGL = 0x0C;
 12092   00243E  0E0C               	movlw	12
 12093   002440  6E9B               	movwf	155,c	;volatile
 12094   002442                     
 12095                           ;mcc_generated_files/eusart1.c: 83:     SP1BRGH = 0x00;
 12096   002442  6A9C               	clrf	156,c	;volatile
 12097   002444                     
 12098                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
 12099   002444  0E00               	movlw	0
 12100   002446  0100               	movlb	0	; () banked
 12101   002448  6F6E               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 12102   00244A  0E00               	movlw	0
 12103   00244C  6F6F               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 12104   00244E  EC17  F015         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 12105   002452                     
 12106                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
 12107   002452  0E00               	movlw	0
 12108   002454  0100               	movlb	0	; () banked
 12109   002456  6F6E               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 12110   002458  0E00               	movlw	0
 12111   00245A  6F6F               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 12112   00245C  EC12  F015         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 12113   002460                     
 12114                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
 12115   002460  0E00               	movlw	0
 12116   002462  0100               	movlb	0	; () banked
 12117   002464  6F6E               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
 12118   002466  0E00               	movlw	0
 12119   002468  6F6F               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 12120   00246A  EC1C  F015         	call	_EUSART1_SetErrorHandler	;wreg free
 12121   00246E                     
 12122                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
 12123   00246E  0100               	movlb	0	; () banked
 12124   002470  6BCC               	clrf	_eusart1RxLastError& (0+255),b	;volatile
 12125   002472                     
 12126                           ; BSR set to: 0
 12127   002472  0012               	return		;funcret
 12128   002474                     __end_of_EUSART1_Initialize:
 12129                           	callstack 0
 12130                           
 12131 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 12132 ;; Defined at:
 12133 ;;		line 170 in file "mcc_generated_files/eusart1.c"
 12134 ;; Parameters:    Size  Location     Type
 12135 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
 12136 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 12137 ;; Auto vars:     Size  Location     Type
 12138 ;;		None
 12139 ;; Return value:  Size  Location     Type
 12140 ;;                  1    wreg      void 
 12141 ;; Registers used:
 12142 ;;		wreg, status,2, status,0
 12143 ;; Tracked objects:
 12144 ;;		On entry : 0/0
 12145 ;;		On exit  : 0/0
 12146 ;;		Unchanged: 0/0
 12147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12148 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12151 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12152 ;;Total ram usage:        2 bytes
 12153 ;; Hardware stack levels used: 1
 12154 ;; Hardware stack levels required when called: 13
 12155 ;; This function calls:
 12156 ;;		Nothing
 12157 ;; This function is called by:
 12158 ;;		_EUSART1_Initialize
 12159 ;; This function uses a non-reentrant model
 12160 ;;
 12161                           
 12162                           	psect	text44
 12163   002A24                     __ptext44:
 12164                           	callstack 0
 12165   002A24                     _EUSART1_SetOverrunErrorHandler:
 12166                           	callstack 15
 12167   002A24                     
 12168                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
 12169   002A24  C06E  F1F1         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 12170   002A28  C06F  F1F2         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 12171   002A2C  0012               	return		;funcret
 12172   002A2E                     __end_of_EUSART1_SetOverrunErrorHandler:
 12173                           	callstack 0
 12174                           
 12175 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 12176 ;; Defined at:
 12177 ;;		line 166 in file "mcc_generated_files/eusart1.c"
 12178 ;; Parameters:    Size  Location     Type
 12179 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
 12180 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 12181 ;; Auto vars:     Size  Location     Type
 12182 ;;		None
 12183 ;; Return value:  Size  Location     Type
 12184 ;;                  1    wreg      void 
 12185 ;; Registers used:
 12186 ;;		wreg, status,2, status,0
 12187 ;; Tracked objects:
 12188 ;;		On entry : 0/0
 12189 ;;		On exit  : 0/0
 12190 ;;		Unchanged: 0/0
 12191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12192 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12195 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12196 ;;Total ram usage:        2 bytes
 12197 ;; Hardware stack levels used: 1
 12198 ;; Hardware stack levels required when called: 13
 12199 ;; This function calls:
 12200 ;;		Nothing
 12201 ;; This function is called by:
 12202 ;;		_EUSART1_Initialize
 12203 ;; This function uses a non-reentrant model
 12204 ;;
 12205                           
 12206                           	psect	text45
 12207   002A2E                     __ptext45:
 12208                           	callstack 0
 12209   002A2E                     _EUSART1_SetFramingErrorHandler:
 12210                           	callstack 15
 12211   002A2E                     
 12212                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
 12213   002A2E  C06E  F1F3         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 12214   002A32  C06F  F1F4         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 12215   002A36  0012               	return		;funcret
 12216   002A38                     __end_of_EUSART1_SetFramingErrorHandler:
 12217                           	callstack 0
 12218                           
 12219 ;; *************** function _EUSART1_SetErrorHandler *****************
 12220 ;; Defined at:
 12221 ;;		line 174 in file "mcc_generated_files/eusart1.c"
 12222 ;; Parameters:    Size  Location     Type
 12223 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
 12224 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 12225 ;; Auto vars:     Size  Location     Type
 12226 ;;		None
 12227 ;; Return value:  Size  Location     Type
 12228 ;;                  1    wreg      void 
 12229 ;; Registers used:
 12230 ;;		wreg, status,2, status,0
 12231 ;; Tracked objects:
 12232 ;;		On entry : 0/0
 12233 ;;		On exit  : 0/0
 12234 ;;		Unchanged: 0/0
 12235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12236 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12239 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12240 ;;Total ram usage:        2 bytes
 12241 ;; Hardware stack levels used: 1
 12242 ;; Hardware stack levels required when called: 13
 12243 ;; This function calls:
 12244 ;;		Nothing
 12245 ;; This function is called by:
 12246 ;;		_EUSART1_Initialize
 12247 ;; This function uses a non-reentrant model
 12248 ;;
 12249                           
 12250                           	psect	text46
 12251   002A38                     __ptext46:
 12252                           	callstack 0
 12253   002A38                     _EUSART1_SetErrorHandler:
 12254                           	callstack 15
 12255   002A38                     
 12256                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
 12257   002A38  C06E  F1EF         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 12258   002A3C  C06F  F1F0         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 12259   002A40  0012               	return		;funcret
 12260   002A42                     __end_of_EUSART1_SetErrorHandler:
 12261                           	callstack 0
 12262                           
 12263 ;; *************** function _ADCC_Initialize *****************
 12264 ;; Defined at:
 12265 ;;		line 62 in file "mcc_generated_files/adcc.c"
 12266 ;; Parameters:    Size  Location     Type
 12267 ;;		None
 12268 ;; Auto vars:     Size  Location     Type
 12269 ;;		None
 12270 ;; Return value:  Size  Location     Type
 12271 ;;                  1    wreg      void 
 12272 ;; Registers used:
 12273 ;;		wreg, status,2
 12274 ;; Tracked objects:
 12275 ;;		On entry : 0/0
 12276 ;;		On exit  : 0/0
 12277 ;;		Unchanged: 0/0
 12278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12283 ;;Total ram usage:        0 bytes
 12284 ;; Hardware stack levels used: 1
 12285 ;; Hardware stack levels required when called: 13
 12286 ;; This function calls:
 12287 ;;		Nothing
 12288 ;; This function is called by:
 12289 ;;		_SYSTEM_Initialize
 12290 ;; This function uses a non-reentrant model
 12291 ;;
 12292                           
 12293                           	psect	text47
 12294   00262E                     __ptext47:
 12295                           	callstack 0
 12296   00262E                     _ADCC_Initialize:
 12297                           	callstack 16
 12298   00262E                     
 12299                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 12300   00262E  6A6A               	clrf	106,c	;volatile
 12301                           
 12302                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 12303   002630  6A6B               	clrf	107,c	;volatile
 12304                           
 12305                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 12306   002632  6A6C               	clrf	108,c	;volatile
 12307                           
 12308                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 12309   002634  6A6D               	clrf	109,c	;volatile
 12310                           
 12311                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 12312   002636  6A68               	clrf	104,c	;volatile
 12313                           
 12314                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 12315   002638  6A69               	clrf	105,c	;volatile
 12316                           
 12317                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 12318   00263A  6A66               	clrf	102,c	;volatile
 12319                           
 12320                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 12321   00263C  010F               	movlb	15	; () banked
 12322   00263E  6B5F               	clrf	95,b	;volatile
 12323                           
 12324                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 12325   002640  6B5D               	clrf	93,b	;volatile
 12326                           
 12327                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 12328   002642  6B5E               	clrf	94,b	;volatile
 12329                           
 12330                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 12331   002644  6B59               	clrf	89,b	;volatile
 12332                           
 12333                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 12334   002646  6B5A               	clrf	90,b	;volatile
 12335                           
 12336                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 12337   002648  6B5B               	clrf	91,b	;volatile
 12338                           
 12339                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 12340   00264A  6A65               	clrf	101,c	;volatile
 12341                           
 12342                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 12343   00264C  6B58               	clrf	88,b	;volatile
 12344                           
 12345                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 12346   00264E  6B56               	clrf	86,b	;volatile
 12347   002650                     
 12348                           ; BSR set to: 15
 12349                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x09;
 12350   002650  0E09               	movlw	9
 12351   002652  6F57               	movwf	87,b	;volatile
 12352                           
 12353                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x84;
 12354   002654  0E84               	movlw	132
 12355   002656  6E60               	movwf	96,c	;volatile
 12356   002658                     
 12357                           ; BSR set to: 15
 12358                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 12359   002658  6B5C               	clrf	92,b	;volatile
 12360   00265A                     
 12361                           ; BSR set to: 15
 12362   00265A  0012               	return		;funcret
 12363   00265C                     __end_of_ADCC_Initialize:
 12364                           	callstack 0
 12365                           
 12366 ;; *************** function _ReadADCChannels *****************
 12367 ;; Defined at:
 12368 ;;		line 66 in file "main.c"
 12369 ;; Parameters:    Size  Location     Type
 12370 ;;		None
 12371 ;; Auto vars:     Size  Location     Type
 12372 ;;		None
 12373 ;; Return value:  Size  Location     Type
 12374 ;;                  1    wreg      void 
 12375 ;; Registers used:
 12376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12377 ;; Tracked objects:
 12378 ;;		On entry : 0/0
 12379 ;;		On exit  : 0/0
 12380 ;;		Unchanged: 0/0
 12381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12386 ;;Total ram usage:        0 bytes
 12387 ;; Hardware stack levels used: 1
 12388 ;; Hardware stack levels required when called: 22
 12389 ;; This function calls:
 12390 ;;		_ADCC_GetConversionResult
 12391 ;;		_ADCC_IsConversionDone
 12392 ;;		_ADCC_StartConversion
 12393 ;;		_printf
 12394 ;; This function is called by:
 12395 ;;		_main
 12396 ;; This function uses a non-reentrant model
 12397 ;;
 12398                           
 12399                           	psect	text48
 12400   001CFC                     __ptext48:
 12401                           	callstack 0
 12402   001CFC                     _ReadADCChannels:
 12403                           	callstack 8
 12404   001CFC                     
 12405                           ;main.c: 68:     ADCC_StartConversion(channel_ANA0);
 12406   001CFC  0E00               	movlw	0
 12407   001CFE  ECF5  F014         	call	_ADCC_StartConversion
 12408   001D02                     l12092:
 12409   001D02  ECBA  F014         	call	_ADCC_IsConversionDone	;wreg free
 12410   001D06  0900               	iorlw	0
 12411   001D08  B4D8               	btfsc	status,2,c
 12412   001D0A  EF89  F00E         	goto	u10241
 12413   001D0E  EF8B  F00E         	goto	u10240
 12414   001D12                     u10241:
 12415   001D12  EF81  F00E         	goto	l12092
 12416   001D16                     u10240:
 12417   001D16                     
 12418                           ;main.c: 70:     adc_value0 = ADCC_GetConversionResult();
 12419   001D16  ECAF  F014         	call	_ADCC_GetConversionResult	;wreg free
 12420   001D1A  C06E  F160         	movff	?_ADCC_GetConversionResult,_adc_value0
 12421   001D1E  C06F  F161         	movff	?_ADCC_GetConversionResult+1,_adc_value0+1
 12422   001D22                     
 12423                           ;main.c: 73:     ADCC_StartConversion(channel_ANA1);
 12424   001D22  0E01               	movlw	1
 12425   001D24  ECF5  F014         	call	_ADCC_StartConversion
 12426   001D28                     l12098:
 12427   001D28  ECBA  F014         	call	_ADCC_IsConversionDone	;wreg free
 12428   001D2C  0900               	iorlw	0
 12429   001D2E  B4D8               	btfsc	status,2,c
 12430   001D30  EF9C  F00E         	goto	u10251
 12431   001D34  EF9E  F00E         	goto	u10250
 12432   001D38                     u10251:
 12433   001D38  EF94  F00E         	goto	l12098
 12434   001D3C                     u10250:
 12435   001D3C                     
 12436                           ;main.c: 75:     adc_value1 = ADCC_GetConversionResult();
 12437   001D3C  ECAF  F014         	call	_ADCC_GetConversionResult	;wreg free
 12438   001D40  C06E  F15E         	movff	?_ADCC_GetConversionResult,_adc_value1
 12439   001D44  C06F  F15F         	movff	?_ADCC_GetConversionResult+1,_adc_value1+1
 12440   001D48                     
 12441                           ;main.c: 78:     ADCC_StartConversion(channel_ANA2);
 12442   001D48  0E02               	movlw	2
 12443   001D4A  ECF5  F014         	call	_ADCC_StartConversion
 12444   001D4E                     l12104:
 12445   001D4E  ECBA  F014         	call	_ADCC_IsConversionDone	;wreg free
 12446   001D52  0900               	iorlw	0
 12447   001D54  B4D8               	btfsc	status,2,c
 12448   001D56  EFAF  F00E         	goto	u10261
 12449   001D5A  EFB1  F00E         	goto	u10260
 12450   001D5E                     u10261:
 12451   001D5E  EFA7  F00E         	goto	l12104
 12452   001D62                     u10260:
 12453   001D62                     
 12454                           ;main.c: 80:     adc_value2 = ADCC_GetConversionResult();
 12455   001D62  ECAF  F014         	call	_ADCC_GetConversionResult	;wreg free
 12456   001D66  C06E  F15C         	movff	?_ADCC_GetConversionResult,_adc_value2
 12457   001D6A  C06F  F15D         	movff	?_ADCC_GetConversionResult+1,_adc_value2+1
 12458   001D6E                     
 12459                           ;main.c: 83:     printf("ADC0: %u, ADC1: %u, ADC2: %u\r\n", adc_value0, adc_value1, adc_
      +                          value2);
 12460   001D6E  0E17               	movlw	low STR_14
 12461   001D70  0103               	movlb	3	; () banked
 12462   001D72  6FC8               	movwf	printf@fmt& (0+255),b
 12463   001D74  0EFE               	movlw	high STR_14
 12464   001D76  6FC9               	movwf	(printf@fmt+1)& (0+255),b
 12465   001D78  C160  F3CA         	movff	_adc_value0,?_printf+2
 12466   001D7C  C161  F3CB         	movff	_adc_value0+1,?_printf+3
 12467   001D80  C15E  F3CC         	movff	_adc_value1,?_printf+4
 12468   001D84  C15F  F3CD         	movff	_adc_value1+1,?_printf+5
 12469   001D88  C15C  F3CE         	movff	_adc_value2,?_printf+6
 12470   001D8C  C15D  F3CF         	movff	_adc_value2+1,?_printf+7
 12471   001D90  EC31  F014         	call	_printf	;wreg free
 12472   001D94  0012               	return		;funcret
 12473   001D96                     __end_of_ReadADCChannels:
 12474                           	callstack 0
 12475                           
 12476 ;; *************** function _printf *****************
 12477 ;; Defined at:
 12478 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\printf.c"
 12479 ;; Parameters:    Size  Location     Type
 12480 ;;  fmt             2    0[BANK3 ] PTR const unsigned char 
 12481 ;;		 -> STR_40(66), STR_21(26), STR_16(6), STR_15(27), 
 12482 ;;		 -> STR_14(31), 
 12483 ;; Auto vars:     Size  Location     Type
 12484 ;;  ap              2   72[BANK0 ] PTR void [1]
 12485 ;;		 -> ?_printf(2), ?_sprintf(2), 
 12486 ;;  ret             2    0        int 
 12487 ;; Return value:  Size  Location     Type
 12488 ;;                  2    0[BANK3 ] int 
 12489 ;; Registers used:
 12490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12491 ;; Tracked objects:
 12492 ;;		On entry : 0/0
 12493 ;;		On exit  : 0/0
 12494 ;;		Unchanged: 0/0
 12495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12496 ;;      Params:         0       0       0       0      36       0       0       0       0       0       0       0       
      +0       0       0       0
 12497 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12499 ;;      Totals:         0       2       0       0      36       0       0       0       0       0       0       0       
      +0       0       0       0
 12500 ;;Total ram usage:       38 bytes
 12501 ;; Hardware stack levels used: 1
 12502 ;; Hardware stack levels required when called: 21
 12503 ;; This function calls:
 12504 ;;		_vfprintf
 12505 ;; This function is called by:
 12506 ;;		_ReadADCChannels
 12507 ;;		_main
 12508 ;;		_LOG_Init
 12509 ;;		_logConsole
 12510 ;; This function uses a non-reentrant model
 12511 ;;
 12512                           
 12513                           	psect	text49
 12514   002862                     __ptext49:
 12515                           	callstack 0
 12516   002862                     _printf:
 12517                           	callstack 9
 12518   002862  0ECA               	movlw	low (?_printf+2)
 12519   002864  0100               	movlb	0	; () banked
 12520   002866  6FA8               	movwf	printf@ap& (0+255),b
 12521   002868  0E03               	movlw	high (?_printf+2)
 12522   00286A  6FA9               	movwf	(printf@ap+1)& (0+255),b
 12523   00286C                     
 12524                           ; BSR set to: 0
 12525   00286C  0E00               	movlw	0
 12526   00286E  6FA2               	movwf	vfprintf@fp& (0+255),b
 12527   002870  C3C8  F0A3         	movff	printf@fmt,vfprintf@fmt
 12528   002874  C3C9  F0A4         	movff	printf@fmt+1,vfprintf@fmt+1
 12529   002878  0EA8               	movlw	low printf@ap
 12530   00287A  6FA5               	movwf	vfprintf@ap& (0+255),b
 12531   00287C  EC4C  F011         	call	_vfprintf	;wreg free
 12532   002880  0012               	return		;funcret
 12533   002882                     __end_of_printf:
 12534                           	callstack 0
 12535                           
 12536 ;; *************** function _vfprintf *****************
 12537 ;; Defined at:
 12538 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12539 ;; Parameters:    Size  Location     Type
 12540 ;;  fp              1   66[BANK0 ] PTR struct _IO_FILE
 12541 ;;		 -> sprintf@f(11), NULL(0), 
 12542 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
 12543 ;;		 -> STR_40(66), STR_39(19), STR_38(21), STR_21(26), 
 12544 ;;		 -> STR_20(21), STR_19(12), STR_16(6), STR_15(27), 
 12545 ;;		 -> STR_14(31), STR_13(2), STR_11(5), STR_9(4), 
 12546 ;;		 -> STR_7(4), STR_5(4), STR_4(13), STR_3(17), 
 12547 ;;		 -> STR_2(13), STR_1(8), 
 12548 ;;  ap              1   69[BANK0 ] PTR PTR void 
 12549 ;;		 -> printf@ap(2), sprintf@ap(2), 
 12550 ;; Auto vars:     Size  Location     Type
 12551 ;;  cfmt            2   70[BANK0 ] PTR unsigned char 
 12552 ;;		 -> STR_40(66), STR_39(19), STR_38(21), STR_21(26), 
 12553 ;;		 -> STR_20(21), STR_19(12), STR_16(6), STR_15(27), 
 12554 ;;		 -> STR_14(31), STR_13(2), STR_11(5), STR_9(4), 
 12555 ;;		 -> STR_7(4), STR_5(4), STR_4(13), STR_3(17), 
 12556 ;;		 -> STR_2(13), STR_1(8), 
 12557 ;; Return value:  Size  Location     Type
 12558 ;;                  2   66[BANK0 ] int 
 12559 ;; Registers used:
 12560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12561 ;; Tracked objects:
 12562 ;;		On entry : 0/0
 12563 ;;		On exit  : 0/0
 12564 ;;		Unchanged: 0/0
 12565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12566 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12567 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12569 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12570 ;;Total ram usage:        6 bytes
 12571 ;; Hardware stack levels used: 1
 12572 ;; Hardware stack levels required when called: 20
 12573 ;; This function calls:
 12574 ;;		_vfpfcnvrt
 12575 ;; This function is called by:
 12576 ;;		_printf
 12577 ;;		_sprintf
 12578 ;; This function uses a non-reentrant model
 12579 ;;
 12580                           
 12581                           	psect	text50
 12582   002298                     __ptext50:
 12583                           	callstack 0
 12584   002298                     _vfprintf:
 12585                           	callstack 9
 12586   002298                     
 12587                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 12588   002298  C0A3  F0A6         	movff	vfprintf@fmt,vfprintf@cfmt
 12589   00229C  C0A4  F0A7         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 12590                           
 12591                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 12592   0022A0  EF5C  F011         	goto	l8922
 12593   0022A4                     l8920:
 12594                           
 12595                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 12596   0022A4  C0A2  F094         	movff	vfprintf@fp,vfpfcnvrt@fp
 12597   0022A8  0EA6               	movlw	low vfprintf@cfmt
 12598   0022AA  0100               	movlb	0	; () banked
 12599   0022AC  6F95               	movwf	vfpfcnvrt@fmt& (0+255),b
 12600   0022AE  C0A5  F096         	movff	vfprintf@ap,vfpfcnvrt@ap
 12601   0022B2  6B97               	clrf	(vfpfcnvrt@ap+1)& (0+255),b
 12602   0022B4  EC6D  F000         	call	_vfpfcnvrt	;wreg free
 12603   0022B8                     l8922:
 12604                           
 12605                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 12606   0022B8  C0A6  FFF6         	movff	vfprintf@cfmt,tblptrl
 12607   0022BC  C0A7  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 12608   0022C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12609   0022C0  6AF8               	clrf	tblptru,c
 12610   0022C2                     	endif
 12611   0022C2                     	if	0	;tblptru may be non-zero
 12612   0022C2                     	endif
 12613   0022C2  0008               	tblrd		*
 12614   0022C4  50F5               	movf	tablat,w,c
 12615   0022C6  0900               	iorlw	0
 12616   0022C8  A4D8               	btfss	status,2,c
 12617   0022CA  EF69  F011         	goto	u6781
 12618   0022CE  EF6B  F011         	goto	u6780
 12619   0022D2                     u6781:
 12620   0022D2  EF52  F011         	goto	l8920
 12621   0022D6                     u6780:
 12622   0022D6                     
 12623                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 12624   0022D6  0E00               	movlw	0
 12625   0022D8  0100               	movlb	0	; () banked
 12626   0022DA  6FA3               	movwf	(?_vfprintf+1)& (0+255),b
 12627   0022DC  0E00               	movlw	0
 12628   0022DE  6FA2               	movwf	?_vfprintf& (0+255),b
 12629   0022E0                     
 12630                           ; BSR set to: 0
 12631   0022E0  0012               	return		;funcret
 12632   0022E2                     __end_of_vfprintf:
 12633                           	callstack 0
 12634                           
 12635 ;; *************** function _vfpfcnvrt *****************
 12636 ;; Defined at:
 12637 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12638 ;; Parameters:    Size  Location     Type
 12639 ;;  fp              1   52[BANK0 ] PTR struct _IO_FILE
 12640 ;;		 -> sprintf@f(11), NULL(0), 
 12641 ;;  fmt             1   53[BANK0 ] PTR PTR unsigned char 
 12642 ;;		 -> vfprintf@cfmt(2), 
 12643 ;;  ap              2   54[BANK0 ] PTR PTR void 
 12644 ;;		 -> printf@ap(2), sprintf@ap(2), 
 12645 ;; Auto vars:     Size  Location     Type
 12646 ;;  convarg         4   59[BANK0 ] struct .
 12647 ;;  cp              2   64[BANK0 ] PTR unsigned char 
 12648 ;;		 -> STR_40(66), STR_39(19), STR_38(21), STR_21(26), 
 12649 ;;		 -> STR_20(21), STR_19(12), STR_16(6), STR_15(27), 
 12650 ;;		 -> STR_14(31), STR_13(2), STR_11(5), STR_9(4), 
 12651 ;;		 -> STR_7(4), STR_5(4), STR_4(13), STR_3(17), 
 12652 ;;		 -> STR_2(13), STR_1(8), 
 12653 ;;  c               1   63[BANK0 ] unsigned char 
 12654 ;;  done            1   58[BANK0 ] _Bool 
 12655 ;; Return value:  Size  Location     Type
 12656 ;;                  1    wreg      void 
 12657 ;; Registers used:
 12658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12659 ;; Tracked objects:
 12660 ;;		On entry : 0/0
 12661 ;;		On exit  : 0/0
 12662 ;;		Unchanged: 0/0
 12663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12664 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12665 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12666 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12667 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12668 ;;Total ram usage:       14 bytes
 12669 ;; Hardware stack levels used: 1
 12670 ;; Hardware stack levels required when called: 19
 12671 ;; This function calls:
 12672 ;;		_dtoa
 12673 ;;		_fputc
 12674 ;;		_read_prec_or_width
 12675 ;;		_stoa
 12676 ;;		_utoa
 12677 ;; This function is called by:
 12678 ;;		_vfprintf
 12679 ;; This function uses a non-reentrant model
 12680 ;;
 12681                           
 12682                           	psect	text51
 12683   0000DA                     __ptext51:
 12684                           	callstack 0
 12685   0000DA                     _vfpfcnvrt:
 12686                           	callstack 9
 12687   0000DA                     
 12688                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 12689   0000DA  0100               	movlb	0	; () banked
 12690   0000DC  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
 12691   0000DE  6ED9               	movwf	fsr2l,c
 12692   0000E0  6ADA               	clrf	fsr2h,c
 12693   0000E2  CFDE FFF6          	movff	postinc2,tblptrl
 12694   0000E6  CFDD FFF7          	movff	postdec2,tblptrh
 12695   0000EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12696   0000EA  6AF8               	clrf	tblptru,c
 12697   0000EC                     	endif
 12698   0000EC                     	if	0	;tblptru may be non-zero
 12699   0000EC                     	endif
 12700   0000EC  0008               	tblrd		*
 12701   0000EE  50F5               	movf	tablat,w,c
 12702   0000F0  0A25               	xorlw	37
 12703   0000F2  A4D8               	btfss	status,2,c
 12704   0000F4  EF7E  F000         	goto	u6471
 12705   0000F8  EF80  F000         	goto	u6470
 12706   0000FC                     u6471:
 12707   0000FC  EF4B  F002         	goto	l8700
 12708   000100                     u6470:
 12709   000100                     
 12710                           ; BSR set to: 0
 12711                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 12712   000100  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
 12713   000102  6ED9               	movwf	fsr2l,c
 12714   000104  6ADA               	clrf	fsr2h,c
 12715   000106  2ADE               	incf	postinc2,f,c
 12716   000108  0E00               	movlw	0
 12717   00010A  22DD               	addwfc	postdec2,f,c
 12718   00010C                     
 12719                           ; BSR set to: 0
 12720                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 12721   00010C  0E00               	movlw	0
 12722   00010E  6FBC               	movwf	(_width+1)& (0+255),b
 12723   000110  0E00               	movlw	0
 12724   000112  6FBB               	movwf	_width& (0+255),b
 12725   000114  C0BB  F0CB         	movff	_width,_flags
 12726   000118                     
 12727                           ; BSR set to: 0
 12728                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 12729   000118  683D               	setf	_prec^0,c
 12730   00011A  683E               	setf	(_prec+1)^0,c
 12731   00011C                     
 12732                           ; BSR set to: 0
 12733                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
 12734   00011C  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
 12735   00011E  6ED9               	movwf	fsr2l,c
 12736   000120  6ADA               	clrf	fsr2h,c
 12737   000122  CFDE FFF6          	movff	postinc2,tblptrl
 12738   000126  CFDD FFF7          	movff	postdec2,tblptrh
 12739   00012A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12740   00012A  6AF8               	clrf	tblptru,c
 12741   00012C                     	endif
 12742   00012C                     	if	0	;tblptru may be non-zero
 12743   00012C                     	endif
 12744   00012C  0008               	tblrd		*
 12745   00012E  50F5               	movf	tablat,w,c
 12746   000130  0A2E               	xorlw	46
 12747   000132  A4D8               	btfss	status,2,c
 12748   000134  EF9E  F000         	goto	u6481
 12749   000138  EFA0  F000         	goto	u6480
 12750   00013C                     u6481:
 12751   00013C  EFB0  F000         	goto	l8624
 12752   000140                     u6480:
 12753   000140                     
 12754                           ; BSR set to: 0
 12755                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
 12756   000140  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
 12757   000142  6ED9               	movwf	fsr2l,c
 12758   000144  6ADA               	clrf	fsr2h,c
 12759   000146  2ADE               	incf	postinc2,f,c
 12760   000148  0E00               	movlw	0
 12761   00014A  22DD               	addwfc	postdec2,f,c
 12762   00014C                     
 12763                           ; BSR set to: 0
 12764                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
 12765   00014C  C095  F06E         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 12766   000150  C096  F06F         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 12767   000154  EC34  F00C         	call	_read_prec_or_width	;wreg free
 12768   000158  C06E  F03D         	movff	?_read_prec_or_width,_prec
 12769   00015C  C06F  F03E         	movff	?_read_prec_or_width+1,_prec+1
 12770   000160                     l8624:
 12771                           
 12772                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 12773   000160  0100               	movlb	0	; () banked
 12774   000162  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
 12775   000164  6ED9               	movwf	fsr2l,c
 12776   000166  6ADA               	clrf	fsr2h,c
 12777   000168  CFDE F0A0          	movff	postinc2,vfpfcnvrt@cp
 12778   00016C  CFDD F0A1          	movff	postdec2,vfpfcnvrt@cp+1
 12779   000170                     
 12780                           ; BSR set to: 0
 12781                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
 12782   000170  C0A0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 12783   000174  C0A1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 12784   000178                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12785   000178  6AF8               	clrf	tblptru,c
 12786   00017A                     	endif
 12787   00017A                     	if	0	;tblptru may be non-zero
 12788   00017A                     	endif
 12789   00017A  0008               	tblrd		*
 12790   00017C  CFF5 F09F          	movff	tablat,vfpfcnvrt@c
 12791                           
 12792                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
 12793   000180  EFCD  F000         	goto	l8634
 12794   000184                     l8628:
 12795                           
 12796                           ; BSR set to: 0
 12797                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1309:     cp++;
 12798   000184  4BA0               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 12799   000186  2BA1               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 12800                           
 12801                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1316:     break;
 12802   000188  EFE0  F000         	goto	l8636
 12803   00018C                     l8630:
 12804                           
 12805                           ; BSR set to: 0
 12806                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
 12807   00018C  0E69               	movlw	105
 12808   00018E  6F9F               	movwf	vfpfcnvrt@c& (0+255),b
 12809                           
 12810                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1351:     break;
 12811   000190  EFE0  F000         	goto	l8636
 12812   000194                     l3087:
 12813                           
 12814                           ; BSR set to: 0
 12815                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
 12816   000194  6B9F               	clrf	vfpfcnvrt@c& (0+255),b
 12817                           
 12818                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1354:     break;
 12819   000196  EFE0  F000         	goto	l8636
 12820   00019A                     l8634:
 12821                           
 12822                           ; BSR set to: 0
 12823   00019A  519F               	movf	vfpfcnvrt@c& (0+255),w,b
 12824                           
 12825                           ; Switch size 1, requested type "simple"
 12826                           ; Number of cases is 4, Range of values is 100 to 117
 12827                           ; switch strategies available:
 12828                           ; Name         Instructions Cycles
 12829                           ; simple_byte           13     7 (average)
 12830                           ;	Chosen strategy is simple_byte
 12831   00019C  0A64               	xorlw	100	; case 100
 12832   00019E  B4D8               	btfsc	status,2,c
 12833   0001A0  EFC6  F000         	goto	l8630
 12834   0001A4  0A0D               	xorlw	13	; case 105
 12835   0001A6  B4D8               	btfsc	status,2,c
 12836   0001A8  EFC6  F000         	goto	l8630
 12837   0001AC  0A05               	xorlw	5	; case 108
 12838   0001AE  B4D8               	btfsc	status,2,c
 12839   0001B0  EFC2  F000         	goto	l8628
 12840   0001B4  0A19               	xorlw	25	; case 117
 12841   0001B6  B4D8               	btfsc	status,2,c
 12842   0001B8  EFC6  F000         	goto	l8630
 12843   0001BC  EFCA  F000         	goto	l3087
 12844   0001C0                     l8636:
 12845                           
 12846                           ; BSR set to: 0
 12847                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 12848   0001C0  C0A0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 12849   0001C4  C0A1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 12850   0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12851   0001C8  6AF8               	clrf	tblptru,c
 12852   0001CA                     	endif
 12853   0001CA                     	if	0	;tblptru may be non-zero
 12854   0001CA                     	endif
 12855   0001CA  0008               	tblrd		*
 12856   0001CC  50F5               	movf	tablat,w,c
 12857   0001CE  0A64               	xorlw	100
 12858   0001D0  B4D8               	btfsc	status,2,c
 12859   0001D2  EFED  F000         	goto	u6491
 12860   0001D6  EFEF  F000         	goto	u6490
 12861   0001DA                     u6491:
 12862   0001DA  EF27  F001         	goto	l8646
 12863   0001DE                     u6490:
 12864   0001DE                     
 12865                           ; BSR set to: 0
 12866   0001DE  C0A0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 12867   0001E2  C0A1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 12868   0001E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12869   0001E6  6AF8               	clrf	tblptru,c
 12870   0001E8                     	endif
 12871   0001E8                     	if	0	;tblptru may be non-zero
 12872   0001E8                     	endif
 12873   0001E8  0008               	tblrd		*
 12874   0001EA  50F5               	movf	tablat,w,c
 12875   0001EC  0A69               	xorlw	105
 12876   0001EE  A4D8               	btfss	status,2,c
 12877   0001F0  EFFC  F000         	goto	u6501
 12878   0001F4  EFFE  F000         	goto	u6500
 12879   0001F8                     u6501:
 12880   0001F8  EF4D  F001         	goto	l8654
 12881   0001FC                     u6500:
 12882   0001FC  EF27  F001         	goto	l8646
 12883   000200                     l8640:
 12884                           
 12885                           ; BSR set to: 0
 12886                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 12887   000200  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12888   000204  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12889   000208  50DF               	movf	indf2,w,c
 12890   00020A  2ADF               	incf	indf2,f,c
 12891   00020C  2ADF               	incf	indf2,f,c
 12892   00020E  6ED9               	movwf	fsr2l,c
 12893   000210  6ADA               	clrf	fsr2h,c
 12894   000212  CFDE F09B          	movff	postinc2,vfpfcnvrt@convarg
 12895   000216  CFDD F09C          	movff	postdec2,vfpfcnvrt@convarg+1
 12896   00021A  0E00               	movlw	0
 12897   00021C  BF9C               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
 12898   00021E  0EFF               	movlw	-1
 12899   000220  6F9D               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
 12900   000222  6F9E               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
 12901                           
 12902                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1366:      break;
 12903   000224  EF32  F001         	goto	l8648
 12904   000228                     l8642:
 12905                           
 12906                           ; BSR set to: 0
 12907                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
 12908   000228  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12909   00022C  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12910   000230  0E04               	movlw	4
 12911   000232  26DF               	addwf	indf2,f,c
 12912   000234  5CDF               	subwf	indf2,w,c
 12913   000236  6ED9               	movwf	fsr2l,c
 12914   000238  6ADA               	clrf	fsr2h,c
 12915   00023A  CFDE F09B          	movff	postinc2,vfpfcnvrt@convarg
 12916   00023E  CFDE F09C          	movff	postinc2,vfpfcnvrt@convarg+1
 12917   000242  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg+2
 12918   000246  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+3
 12919                           
 12920                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1380:      break;
 12921   00024A  EF32  F001         	goto	l8648
 12922   00024E                     l8646:
 12923                           
 12924                           ; BSR set to: 0
 12925   00024E  519F               	movf	vfpfcnvrt@c& (0+255),w,b
 12926                           
 12927                           ; Switch size 1, requested type "simple"
 12928                           ; Number of cases is 2, Range of values is 105 to 108
 12929                           ; switch strategies available:
 12930                           ; Name         Instructions Cycles
 12931                           ; simple_byte            7     4 (average)
 12932                           ;	Chosen strategy is simple_byte
 12933   000250  0A69               	xorlw	105	; case 105
 12934   000252  B4D8               	btfsc	status,2,c
 12935   000254  EF00  F001         	goto	l8640
 12936   000258  0A05               	xorlw	5	; case 108
 12937   00025A  B4D8               	btfsc	status,2,c
 12938   00025C  EF14  F001         	goto	l8642
 12939   000260  EF32  F001         	goto	l8648
 12940   000264                     l8648:
 12941                           
 12942                           ; BSR set to: 0
 12943                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 12944   000264  0E01               	movlw	1
 12945   000266  25A0               	addwf	vfpfcnvrt@cp& (0+255),w,b
 12946   000268  6F98               	movwf	??_vfpfcnvrt& (0+255),b
 12947   00026A  0E00               	movlw	0
 12948   00026C  21A1               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 12949   00026E  6F99               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 12950   000270  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
 12951   000272  6ED9               	movwf	fsr2l,c
 12952   000274  6ADA               	clrf	fsr2h,c
 12953   000276  C098  FFDE         	movff	??_vfpfcnvrt,postinc2
 12954   00027A  C099  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 12955   00027E                     
 12956                           ; BSR set to: 0
 12957                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 12958   00027E  C094  F086         	movff	vfpfcnvrt@fp,dtoa@fp
 12959   000282  C09B  F087         	movff	vfpfcnvrt@convarg,dtoa@d
 12960   000286  C09C  F088         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 12961   00028A  C09D  F089         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
 12962   00028E  C09E  F08A         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
 12963   000292  EC5F  F005         	call	_dtoa	;wreg free
 12964   000296  EF5D  F002         	goto	l3095
 12965   00029A                     l8654:
 12966                           
 12967                           ; BSR set to: 0
 12968   00029A  C0A0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 12969   00029E  C0A1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 12970   0002A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12971   0002A2  6AF8               	clrf	tblptru,c
 12972   0002A4                     	endif
 12973   0002A4                     	if	0	;tblptru may be non-zero
 12974   0002A4                     	endif
 12975   0002A4  0008               	tblrd		*
 12976   0002A6  50F5               	movf	tablat,w,c
 12977   0002A8  0A75               	xorlw	117
 12978   0002AA  A4D8               	btfss	status,2,c
 12979   0002AC  EF5A  F001         	goto	u6511
 12980   0002B0  EF5C  F001         	goto	u6510
 12981   0002B4                     u6511:
 12982   0002B4  EFBB  F001         	goto	l3096
 12983   0002B8                     u6510:
 12984   0002B8  EF86  F001         	goto	l8662
 12985   0002BC                     l8656:
 12986                           
 12987                           ; BSR set to: 0
 12988                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 12989   0002BC  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12990   0002C0  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12991   0002C4  50DF               	movf	indf2,w,c
 12992   0002C6  2ADF               	incf	indf2,f,c
 12993   0002C8  2ADF               	incf	indf2,f,c
 12994   0002CA  6ED9               	movwf	fsr2l,c
 12995   0002CC  6ADA               	clrf	fsr2h,c
 12996   0002CE  CFDE F098          	movff	postinc2,??_vfpfcnvrt
 12997   0002D2  CFDD F099          	movff	postdec2,??_vfpfcnvrt+1
 12998   0002D6  C098  F09B         	movff	??_vfpfcnvrt,vfpfcnvrt@convarg
 12999   0002DA  C099  F09C         	movff	??_vfpfcnvrt+1,vfpfcnvrt@convarg+1
 13000   0002DE  6B9D               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
 13001   0002E0  6B9E               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
 13002                           
 13003                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1457:      break;
 13004   0002E2  EF91  F001         	goto	l8664
 13005   0002E6                     l8658:
 13006                           
 13007                           ; BSR set to: 0
 13008                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
 13009   0002E6  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 13010   0002EA  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 13011   0002EE  0E04               	movlw	4
 13012   0002F0  26DF               	addwf	indf2,f,c
 13013   0002F2  5CDF               	subwf	indf2,w,c
 13014   0002F4  6ED9               	movwf	fsr2l,c
 13015   0002F6  6ADA               	clrf	fsr2h,c
 13016   0002F8  CFDE F09B          	movff	postinc2,vfpfcnvrt@convarg
 13017   0002FC  CFDE F09C          	movff	postinc2,vfpfcnvrt@convarg+1
 13018   000300  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg+2
 13019   000304  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+3
 13020                           
 13021                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1471:      break;
 13022   000308  EF91  F001         	goto	l8664
 13023   00030C                     l8662:
 13024                           
 13025                           ; BSR set to: 0
 13026   00030C  519F               	movf	vfpfcnvrt@c& (0+255),w,b
 13027                           
 13028                           ; Switch size 1, requested type "simple"
 13029                           ; Number of cases is 2, Range of values is 105 to 108
 13030                           ; switch strategies available:
 13031                           ; Name         Instructions Cycles
 13032                           ; simple_byte            7     4 (average)
 13033                           ;	Chosen strategy is simple_byte
 13034   00030E  0A69               	xorlw	105	; case 105
 13035   000310  B4D8               	btfsc	status,2,c
 13036   000312  EF5E  F001         	goto	l8656
 13037   000316  0A05               	xorlw	5	; case 108
 13038   000318  B4D8               	btfsc	status,2,c
 13039   00031A  EF73  F001         	goto	l8658
 13040   00031E  EF91  F001         	goto	l8664
 13041   000322                     l8664:
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 13045   000322  0E01               	movlw	1
 13046   000324  25A0               	addwf	vfpfcnvrt@cp& (0+255),w,b
 13047   000326  6F98               	movwf	??_vfpfcnvrt& (0+255),b
 13048   000328  0E00               	movlw	0
 13049   00032A  21A1               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 13050   00032C  6F99               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 13051   00032E  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
 13052   000330  6ED9               	movwf	fsr2l,c
 13053   000332  6ADA               	clrf	fsr2h,c
 13054   000334  C098  FFDE         	movff	??_vfpfcnvrt,postinc2
 13055   000338  C099  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 13056                           
 13057                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 13058   00033C  EFAE  F001         	goto	l8672
 13059   000340                     l8666:
 13060                           
 13061                           ; BSR set to: 0
 13062                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
 13063   000340  C094  F086         	movff	vfpfcnvrt@fp,utoa@fp
 13064   000344  C09B  F087         	movff	vfpfcnvrt@convarg,utoa@d
 13065   000348  C09C  F088         	movff	vfpfcnvrt@convarg+1,utoa@d+1
 13066   00034C  C09D  F089         	movff	vfpfcnvrt@convarg+2,utoa@d+2
 13067   000350  C09E  F08A         	movff	vfpfcnvrt@convarg+3,utoa@d+3
 13068   000354  EC04  F007         	call	_utoa	;wreg free
 13069   000358  EF5D  F002         	goto	l3095
 13070   00035C                     l8672:
 13071                           
 13072                           ; BSR set to: 0
 13073   00035C  C0A0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 13074   000360  C0A1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 13075   000364                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13076   000364  6AF8               	clrf	tblptru,c
 13077   000366                     	endif
 13078   000366                     	if	0	;tblptru may be non-zero
 13079   000366                     	endif
 13080   000366  0008               	tblrd		*
 13081   000368  50F5               	movf	tablat,w,c
 13082                           
 13083                           ; Switch size 1, requested type "simple"
 13084                           ; Number of cases is 1, Range of values is 117 to 117
 13085                           ; switch strategies available:
 13086                           ; Name         Instructions Cycles
 13087                           ; simple_byte            4     3 (average)
 13088                           ;	Chosen strategy is simple_byte
 13089   00036A  0A75               	xorlw	117	; case 117
 13090   00036C  B4D8               	btfsc	status,2,c
 13091   00036E  EFA0  F001         	goto	l8666
 13092   000372  EFBB  F001         	goto	l3096
 13093   000376                     l3096:
 13094                           
 13095                           ; BSR set to: 0
 13096                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 13097   000376  6B9A               	clrf	vfpfcnvrt@done& (0+255),b
 13098   000378                     
 13099                           ; BSR set to: 0
 13100                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 13101   000378  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
 13102   00037A  6ED9               	movwf	fsr2l,c
 13103   00037C  6ADA               	clrf	fsr2h,c
 13104   00037E  CFDE FFF6          	movff	postinc2,tblptrl
 13105   000382  CFDD FFF7          	movff	postdec2,tblptrh
 13106   000386                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13107   000386  6AF8               	clrf	tblptru,c
 13108   000388                     	endif
 13109   000388                     	if	0	;tblptru may be non-zero
 13110   000388                     	endif
 13111   000388  0008               	tblrd		*
 13112   00038A  50F5               	movf	tablat,w,c
 13113   00038C  0A73               	xorlw	115
 13114   00038E  A4D8               	btfss	status,2,c
 13115   000390  EFCC  F001         	goto	u6521
 13116   000394  EFCE  F001         	goto	u6520
 13117   000398                     u6521:
 13118   000398  EFD8  F001         	goto	l8680
 13119   00039C                     u6520:
 13120   00039C                     
 13121                           ; BSR set to: 0
 13122                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 13123   00039C  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
 13124   00039E  6ED9               	movwf	fsr2l,c
 13125   0003A0  6ADA               	clrf	fsr2h,c
 13126   0003A2  2ADE               	incf	postinc2,f,c
 13127   0003A4  0E00               	movlw	0
 13128   0003A6  22DD               	addwfc	postdec2,f,c
 13129   0003A8                     l8678:
 13130                           
 13131                           ; BSR set to: 0
 13132                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 13133   0003A8  0E01               	movlw	1
 13134   0003AA  6F9A               	movwf	vfpfcnvrt@done& (0+255),b
 13135                           
 13136                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1660:   }
 13137   0003AC  EF27  F002         	goto	l8690
 13138   0003B0                     l8680:
 13139                           
 13140                           ; BSR set to: 0
 13141   0003B0  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
 13142   0003B2  6ED9               	movwf	fsr2l,c
 13143   0003B4  6ADA               	clrf	fsr2h,c
 13144   0003B6  CFDE FFF6          	movff	postinc2,tblptrl
 13145   0003BA  CFDD FFF7          	movff	postdec2,tblptrh
 13146   0003BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13147   0003BE  6AF8               	clrf	tblptru,c
 13148   0003C0                     	endif
 13149   0003C0                     	if	0	;tblptru may be non-zero
 13150   0003C0                     	endif
 13151   0003C0  0008               	tblrd		*
 13152   0003C2  50F5               	movf	tablat,w,c
 13153   0003C4  0A6C               	xorlw	108
 13154   0003C6  A4D8               	btfss	status,2,c
 13155   0003C8  EFE8  F001         	goto	u6531
 13156   0003CC  EFEA  F001         	goto	u6530
 13157   0003D0                     u6531:
 13158   0003D0  EF27  F002         	goto	l8690
 13159   0003D4                     u6530:
 13160   0003D4                     
 13161                           ; BSR set to: 0
 13162   0003D4  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
 13163   0003D6  6ED9               	movwf	fsr2l,c
 13164   0003D8  6ADA               	clrf	fsr2h,c
 13165   0003DA  CFDE F098          	movff	postinc2,??_vfpfcnvrt
 13166   0003DE  CFDD F099          	movff	postdec2,??_vfpfcnvrt+1
 13167   0003E2  0E01               	movlw	1
 13168   0003E4  2798               	addwf	??_vfpfcnvrt& (0+255),f,b
 13169   0003E6  0E00               	movlw	0
 13170   0003E8  2399               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 13171   0003EA  C098  FFF6         	movff	??_vfpfcnvrt,tblptrl
 13172   0003EE  C099  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 13173   0003F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13174   0003F2  6AF8               	clrf	tblptru,c
 13175   0003F4                     	endif
 13176   0003F4                     	if	0	;tblptru may be non-zero
 13177   0003F4                     	endif
 13178   0003F4  0008               	tblrd		*
 13179   0003F6  50F5               	movf	tablat,w,c
 13180   0003F8  0A6C               	xorlw	108
 13181   0003FA  A4D8               	btfss	status,2,c
 13182   0003FC  EF02  F002         	goto	u6541
 13183   000400  EF04  F002         	goto	u6540
 13184   000404                     u6541:
 13185   000404  EF27  F002         	goto	l8690
 13186   000408                     u6540:
 13187   000408                     
 13188                           ; BSR set to: 0
 13189   000408  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
 13190   00040A  6ED9               	movwf	fsr2l,c
 13191   00040C  6ADA               	clrf	fsr2h,c
 13192   00040E  CFDE F098          	movff	postinc2,??_vfpfcnvrt
 13193   000412  CFDD F099          	movff	postdec2,??_vfpfcnvrt+1
 13194   000416  0E02               	movlw	2
 13195   000418  2798               	addwf	??_vfpfcnvrt& (0+255),f,b
 13196   00041A  0E00               	movlw	0
 13197   00041C  2399               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 13198   00041E  C098  FFF6         	movff	??_vfpfcnvrt,tblptrl
 13199   000422  C099  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 13200   000426                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13201   000426  6AF8               	clrf	tblptru,c
 13202   000428                     	endif
 13203   000428                     	if	0	;tblptru may be non-zero
 13204   000428                     	endif
 13205   000428  0008               	tblrd		*
 13206   00042A  50F5               	movf	tablat,w,c
 13207   00042C  0A73               	xorlw	115
 13208   00042E  A4D8               	btfss	status,2,c
 13209   000430  EF1C  F002         	goto	u6551
 13210   000434  EF1E  F002         	goto	u6550
 13211   000438                     u6551:
 13212   000438  EF27  F002         	goto	l8690
 13213   00043C                     u6550:
 13214   00043C                     
 13215                           ; BSR set to: 0
 13216                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 13217   00043C  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
 13218   00043E  6ED9               	movwf	fsr2l,c
 13219   000440  6ADA               	clrf	fsr2h,c
 13220   000442  0E03               	movlw	3
 13221   000444  26DE               	addwf	postinc2,f,c
 13222   000446  0E00               	movlw	0
 13223   000448  22DD               	addwfc	postdec2,f,c
 13224   00044A  EFD4  F001         	goto	l8678
 13225   00044E                     l8690:
 13226                           
 13227                           ; BSR set to: 0
 13228                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 13229   00044E  519A               	movf	vfpfcnvrt@done& (0+255),w,b
 13230   000450  B4D8               	btfsc	status,2,c
 13231   000452  EF2D  F002         	goto	u6561
 13232   000456  EF2F  F002         	goto	u6560
 13233   00045A                     u6561:
 13234   00045A  EF42  F002         	goto	l8696
 13235   00045E                     u6560:
 13236   00045E                     
 13237                           ; BSR set to: 0
 13238                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 13239   00045E  C094  F078         	movff	vfpfcnvrt@fp,stoa@fp
 13240   000462  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 13241   000466  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 13242   00046A  0E02               	movlw	2
 13243   00046C  26DF               	addwf	indf2,f,c
 13244   00046E  5CDF               	subwf	indf2,w,c
 13245   000470  6ED9               	movwf	fsr2l,c
 13246   000472  6ADA               	clrf	fsr2h,c
 13247   000474  CFDE F079          	movff	postinc2,stoa@s
 13248   000478  CFDE F07A          	movff	postinc2,stoa@s+1
 13249   00047C  EC1E  F008         	call	_stoa	;wreg free
 13250   000480  EF5D  F002         	goto	l3095
 13251   000484                     l8696:
 13252                           
 13253                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 13254   000484  0100               	movlb	0	; () banked
 13255   000486  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
 13256   000488  6ED9               	movwf	fsr2l,c
 13257   00048A  6ADA               	clrf	fsr2h,c
 13258   00048C  2ADE               	incf	postinc2,f,c
 13259   00048E  0E00               	movlw	0
 13260   000490  22DD               	addwfc	postdec2,f,c
 13261   000492  EF5D  F002         	goto	l3095
 13262   000496                     l8700:
 13263                           
 13264                           ; BSR set to: 0
 13265                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 13266   000496  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
 13267   000498  6ED9               	movwf	fsr2l,c
 13268   00049A  6ADA               	clrf	fsr2h,c
 13269   00049C  CFDE FFF6          	movff	postinc2,tblptrl
 13270   0004A0  CFDD FFF7          	movff	postdec2,tblptrh
 13271   0004A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13272   0004A4  6AF8               	clrf	tblptru,c
 13273   0004A6                     	endif
 13274   0004A6                     	if	0	;tblptru may be non-zero
 13275   0004A6                     	endif
 13276   0004A6  0008               	tblrd		*
 13277   0004A8  50F5               	movf	tablat,w,c
 13278   0004AA  6F70               	movwf	fputc@c& (0+255),b
 13279   0004AC  6B71               	clrf	(fputc@c+1)& (0+255),b
 13280   0004AE  C094  F072         	movff	vfpfcnvrt@fp,fputc@fp
 13281   0004B2  EC1C  F00B         	call	_fputc	;wreg free
 13282   0004B6  EF42  F002         	goto	l8696
 13283   0004BA                     l3095:
 13284   0004BA  0012               	return		;funcret
 13285   0004BC                     __end_of_vfpfcnvrt:
 13286                           	callstack 0
 13287                           
 13288 ;; *************** function _utoa *****************
 13289 ;; Defined at:
 13290 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 13291 ;; Parameters:    Size  Location     Type
 13292 ;;  fp              1   38[BANK0 ] PTR struct _IO_FILE
 13293 ;;		 -> sprintf@f(11), NULL(0), 
 13294 ;;  d               4   39[BANK0 ] unsigned long 
 13295 ;; Auto vars:     Size  Location     Type
 13296 ;;  i               2   47[BANK0 ] int 
 13297 ;;  p               2   45[BANK0 ] int 
 13298 ;;  w               2   43[BANK0 ] int 
 13299 ;; Return value:  Size  Location     Type
 13300 ;;                  1    wreg      void 
 13301 ;; Registers used:
 13302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13303 ;; Tracked objects:
 13304 ;;		On entry : 0/0
 13305 ;;		On exit  : 0/0
 13306 ;;		Unchanged: 0/0
 13307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13308 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13309 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13311 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13312 ;;Total ram usage:       11 bytes
 13313 ;; Hardware stack levels used: 1
 13314 ;; Hardware stack levels required when called: 18
 13315 ;; This function calls:
 13316 ;;		___lldiv
 13317 ;;		___llmod
 13318 ;;		_pad
 13319 ;; This function is called by:
 13320 ;;		_vfpfcnvrt
 13321 ;; This function uses a non-reentrant model
 13322 ;;
 13323                           
 13324                           	psect	text52
 13325   000E08                     __ptext52:
 13326                           	callstack 0
 13327   000E08                     _utoa:
 13328                           	callstack 9
 13329   000E08                     
 13330                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 1005:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           1017:     p = (0 <= prec) ? prec : 1;
 13331   000E08  BE3E               	btfsc	(_prec+1)^0,7,c
 13332   000E0A  EF0B  F007         	goto	u6050
 13333   000E0E  EF09  F007         	goto	u6051
 13334   000E12                     u6051:
 13335   000E12  EF12  F007         	goto	l3060
 13336   000E16                     u6050:
 13337   000E16  0E00               	movlw	0
 13338   000E18  0100               	movlb	0	; () banked
 13339   000E1A  6F8E               	movwf	(utoa@p+1)& (0+255),b
 13340   000E1C  0E01               	movlw	1
 13341   000E1E  6F8D               	movwf	utoa@p& (0+255),b
 13342   000E20  EF16  F007         	goto	l3062
 13343   000E24                     l3060:
 13344   000E24  C03D  F08D         	movff	_prec,utoa@p
 13345   000E28  C03E  F08E         	movff	_prec+1,utoa@p+1
 13346   000E2C                     l3062:
 13347                           
 13348                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 13349   000E2C  C0BB  F08B         	movff	_width,utoa@w
 13350   000E30  C0BC  F08C         	movff	_width+1,utoa@w+1
 13351   000E34                     
 13352                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 13353   000E34  0E00               	movlw	0
 13354   000E36  0100               	movlb	0	; () banked
 13355   000E38  6F90               	movwf	(utoa@i+1)& (0+255),b
 13356   000E3A  0E1F               	movlw	31
 13357   000E3C  6F8F               	movwf	utoa@i& (0+255),b
 13358   000E3E                     
 13359                           ; BSR set to: 0
 13360                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 13361   000E3E  0101               	movlb	1	; () banked
 13362   000E40  6B83               	clrf	(_dbuf+31)& (0+255),b
 13363                           
 13364                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 13365   000E42  EF62  F007         	goto	l8270
 13366   000E46                     l8260:
 13367                           
 13368                           ; BSR set to: 0
 13369                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 13370   000E46  078F               	decf	utoa@i& (0+255),f,b
 13371   000E48  A0D8               	btfss	status,0,c
 13372   000E4A  0790               	decf	(utoa@i+1)& (0+255),f,b
 13373   000E4C                     
 13374                           ; BSR set to: 0
 13375                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 13376   000E4C  0E64               	movlw	low _dbuf
 13377   000E4E  258F               	addwf	utoa@i& (0+255),w,b
 13378   000E50  6ED9               	movwf	fsr2l,c
 13379   000E52  0E01               	movlw	high _dbuf
 13380   000E54  2190               	addwfc	(utoa@i+1)& (0+255),w,b
 13381   000E56  6EDA               	movwf	fsr2h,c
 13382   000E58  C087  F06E         	movff	utoa@d,___llmod@dividend
 13383   000E5C  C088  F06F         	movff	utoa@d+1,___llmod@dividend+1
 13384   000E60  C089  F070         	movff	utoa@d+2,___llmod@dividend+2
 13385   000E64  C08A  F071         	movff	utoa@d+3,___llmod@dividend+3
 13386   000E68  0E0A               	movlw	10
 13387   000E6A  6F72               	movwf	___llmod@divisor& (0+255),b
 13388   000E6C  0E00               	movlw	0
 13389   000E6E  6F73               	movwf	(___llmod@divisor+1)& (0+255),b
 13390   000E70  0E00               	movlw	0
 13391   000E72  6F74               	movwf	(___llmod@divisor+2)& (0+255),b
 13392   000E74  0E00               	movlw	0
 13393   000E76  6F75               	movwf	(___llmod@divisor+3)& (0+255),b
 13394   000E78  ECCB  F00E         	call	___llmod	;wreg free
 13395   000E7C  0100               	movlb	0	; () banked
 13396   000E7E  516E               	movf	?___llmod& (0+255),w,b
 13397   000E80  0F30               	addlw	48
 13398   000E82  6EDF               	movwf	indf2,c
 13399   000E84                     
 13400                           ; BSR set to: 0
 13401                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
 13402   000E84  078D               	decf	utoa@p& (0+255),f,b
 13403   000E86  A0D8               	btfss	status,0,c
 13404   000E88  078E               	decf	(utoa@p+1)& (0+255),f,b
 13405   000E8A                     
 13406                           ; BSR set to: 0
 13407                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 13408   000E8A  078B               	decf	utoa@w& (0+255),f,b
 13409   000E8C  A0D8               	btfss	status,0,c
 13410   000E8E  078C               	decf	(utoa@w+1)& (0+255),f,b
 13411   000E90                     
 13412                           ; BSR set to: 0
 13413                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 13414   000E90  C087  F06E         	movff	utoa@d,___lldiv@dividend
 13415   000E94  C088  F06F         	movff	utoa@d+1,___lldiv@dividend+1
 13416   000E98  C089  F070         	movff	utoa@d+2,___lldiv@dividend+2
 13417   000E9C  C08A  F071         	movff	utoa@d+3,___lldiv@dividend+3
 13418   000EA0  0E0A               	movlw	10
 13419   000EA2  6F72               	movwf	___lldiv@divisor& (0+255),b
 13420   000EA4  0E00               	movlw	0
 13421   000EA6  6F73               	movwf	(___lldiv@divisor+1)& (0+255),b
 13422   000EA8  0E00               	movlw	0
 13423   000EAA  6F74               	movwf	(___lldiv@divisor+2)& (0+255),b
 13424   000EAC  0E00               	movlw	0
 13425   000EAE  6F75               	movwf	(___lldiv@divisor+3)& (0+255),b
 13426   000EB0  EC38  F00D         	call	___lldiv	;wreg free
 13427   000EB4  C06E  F087         	movff	?___lldiv,utoa@d
 13428   000EB8  C06F  F088         	movff	?___lldiv+1,utoa@d+1
 13429   000EBC  C070  F089         	movff	?___lldiv+2,utoa@d+2
 13430   000EC0  C071  F08A         	movff	?___lldiv+3,utoa@d+3
 13431   000EC4                     l8270:
 13432                           
 13433                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 13434   000EC4  0100               	movlb	0	; () banked
 13435   000EC6  518F               	movf	utoa@i& (0+255),w,b
 13436   000EC8  1190               	iorwf	(utoa@i+1)& (0+255),w,b
 13437   000ECA  B4D8               	btfsc	status,2,c
 13438   000ECC  EF6A  F007         	goto	u6061
 13439   000ED0  EF6C  F007         	goto	u6060
 13440   000ED4                     u6061:
 13441   000ED4  EF84  F007         	goto	l8276
 13442   000ED8                     u6060:
 13443   000ED8                     
 13444                           ; BSR set to: 0
 13445   000ED8  5187               	movf	utoa@d& (0+255),w,b
 13446   000EDA  1188               	iorwf	(utoa@d+1)& (0+255),w,b
 13447   000EDC  1189               	iorwf	(utoa@d+2)& (0+255),w,b
 13448   000EDE  118A               	iorwf	(utoa@d+3)& (0+255),w,b
 13449   000EE0  A4D8               	btfss	status,2,c
 13450   000EE2  EF75  F007         	goto	u6071
 13451   000EE6  EF77  F007         	goto	u6070
 13452   000EEA                     u6071:
 13453   000EEA  EF23  F007         	goto	l8260
 13454   000EEE                     u6070:
 13455   000EEE                     
 13456                           ; BSR set to: 0
 13457   000EEE  BF8E               	btfsc	(utoa@p+1)& (0+255),7,b
 13458   000EF0  EF84  F007         	goto	u6080
 13459   000EF4  518E               	movf	(utoa@p+1)& (0+255),w,b
 13460   000EF6  E106               	bnz	u6081
 13461   000EF8  058D               	decf	utoa@p& (0+255),w,b
 13462   000EFA  B0D8               	btfsc	status,0,c
 13463   000EFC  EF82  F007         	goto	u6081
 13464   000F00  EF84  F007         	goto	u6080
 13465   000F04                     u6081:
 13466   000F04  EF23  F007         	goto	l8260
 13467   000F08                     u6080:
 13468   000F08                     l8276:
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 13472   000F08  C086  F07E         	movff	utoa@fp,pad@fp
 13473   000F0C  0E64               	movlw	low _dbuf
 13474   000F0E  258F               	addwf	utoa@i& (0+255),w,b
 13475   000F10  6F7F               	movwf	pad@buf& (0+255),b
 13476   000F12  0E01               	movlw	high _dbuf
 13477   000F14  2190               	addwfc	(utoa@i+1)& (0+255),w,b
 13478   000F16  6F80               	movwf	(pad@buf+1)& (0+255),b
 13479   000F18  C08B  F081         	movff	utoa@w,pad@p
 13480   000F1C  C08C  F082         	movff	utoa@w+1,pad@p+1
 13481   000F20  EC97  F00F         	call	_pad	;wreg free
 13482   000F24  0012               	return		;funcret
 13483   000F26                     __end_of_utoa:
 13484                           	callstack 0
 13485                           
 13486 ;; *************** function ___llmod *****************
 13487 ;; Defined at:
 13488 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\llmod.c"
 13489 ;; Parameters:    Size  Location     Type
 13490 ;;  dividend        4   14[BANK0 ] unsigned long 
 13491 ;;  divisor         4   18[BANK0 ] unsigned long 
 13492 ;; Auto vars:     Size  Location     Type
 13493 ;;  counter         1   22[BANK0 ] unsigned char 
 13494 ;; Return value:  Size  Location     Type
 13495 ;;                  4   14[BANK0 ] unsigned long 
 13496 ;; Registers used:
 13497 ;;		wreg, status,2, status,0
 13498 ;; Tracked objects:
 13499 ;;		On entry : 0/0
 13500 ;;		On exit  : 0/0
 13501 ;;		Unchanged: 0/0
 13502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13503 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13504 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13506 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13507 ;;Total ram usage:        9 bytes
 13508 ;; Hardware stack levels used: 1
 13509 ;; Hardware stack levels required when called: 13
 13510 ;; This function calls:
 13511 ;;		Nothing
 13512 ;; This function is called by:
 13513 ;;		_utoa
 13514 ;;		___secs_to_tm
 13515 ;; This function uses a non-reentrant model
 13516 ;;
 13517                           
 13518                           	psect	text53
 13519   001D96                     __ptext53:
 13520                           	callstack 0
 13521   001D96                     ___llmod:
 13522                           	callstack 13
 13523   001D96  0100               	movlb	0	; () banked
 13524   001D98  5172               	movf	___llmod@divisor& (0+255),w,b
 13525   001D9A  1173               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 13526   001D9C  1174               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 13527   001D9E  1175               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 13528   001DA0  B4D8               	btfsc	status,2,c
 13529   001DA2  EFD5  F00E         	goto	u5441
 13530   001DA6  EFD7  F00E         	goto	u5440
 13531   001DAA                     u5441:
 13532   001DAA  EF07  F00F         	goto	l2674
 13533   001DAE                     u5440:
 13534   001DAE                     
 13535                           ; BSR set to: 0
 13536   001DAE  0E01               	movlw	1
 13537   001DB0  6F76               	movwf	___llmod@counter& (0+255),b
 13538   001DB2  EFE1  F00E         	goto	l7888
 13539   001DB6                     l7886:
 13540                           
 13541                           ; BSR set to: 0
 13542   001DB6  90D8               	bcf	status,0,c
 13543   001DB8  3772               	rlcf	___llmod@divisor& (0+255),f,b
 13544   001DBA  3773               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 13545   001DBC  3774               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 13546   001DBE  3775               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 13547   001DC0  2B76               	incf	___llmod@counter& (0+255),f,b
 13548   001DC2                     l7888:
 13549                           
 13550                           ; BSR set to: 0
 13551   001DC2  AF75               	btfss	(___llmod@divisor+3)& (0+255),7,b
 13552   001DC4  EFE6  F00E         	goto	u5451
 13553   001DC8  EFE8  F00E         	goto	u5450
 13554   001DCC                     u5451:
 13555   001DCC  EFDB  F00E         	goto	l7886
 13556   001DD0                     u5450:
 13557   001DD0                     l7890:
 13558                           
 13559                           ; BSR set to: 0
 13560   001DD0  5172               	movf	___llmod@divisor& (0+255),w,b
 13561   001DD2  5D6E               	subwf	___llmod@dividend& (0+255),w,b
 13562   001DD4  5173               	movf	(___llmod@divisor+1)& (0+255),w,b
 13563   001DD6  596F               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 13564   001DD8  5174               	movf	(___llmod@divisor+2)& (0+255),w,b
 13565   001DDA  5970               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 13566   001DDC  5175               	movf	(___llmod@divisor+3)& (0+255),w,b
 13567   001DDE  5971               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 13568   001DE0  A0D8               	btfss	status,0,c
 13569   001DE2  EFF5  F00E         	goto	u5461
 13570   001DE6  EFF7  F00E         	goto	u5460
 13571   001DEA                     u5461:
 13572   001DEA  EFFF  F00E         	goto	l7894
 13573   001DEE                     u5460:
 13574   001DEE                     
 13575                           ; BSR set to: 0
 13576   001DEE  5172               	movf	___llmod@divisor& (0+255),w,b
 13577   001DF0  5F6E               	subwf	___llmod@dividend& (0+255),f,b
 13578   001DF2  5173               	movf	(___llmod@divisor+1)& (0+255),w,b
 13579   001DF4  5B6F               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 13580   001DF6  5174               	movf	(___llmod@divisor+2)& (0+255),w,b
 13581   001DF8  5B70               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 13582   001DFA  5175               	movf	(___llmod@divisor+3)& (0+255),w,b
 13583   001DFC  5B71               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 13584   001DFE                     l7894:
 13585                           
 13586                           ; BSR set to: 0
 13587   001DFE  90D8               	bcf	status,0,c
 13588   001E00  3375               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 13589   001E02  3374               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 13590   001E04  3373               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 13591   001E06  3372               	rrcf	___llmod@divisor& (0+255),f,b
 13592   001E08                     
 13593                           ; BSR set to: 0
 13594   001E08  2F76               	decfsz	___llmod@counter& (0+255),f,b
 13595   001E0A  EFE8  F00E         	goto	l7890
 13596   001E0E                     l2674:
 13597                           
 13598                           ; BSR set to: 0
 13599   001E0E  C06E  F06E         	movff	___llmod@dividend,?___llmod
 13600   001E12  C06F  F06F         	movff	___llmod@dividend+1,?___llmod+1
 13601   001E16  C070  F070         	movff	___llmod@dividend+2,?___llmod+2
 13602   001E1A  C071  F071         	movff	___llmod@dividend+3,?___llmod+3
 13603   001E1E                     
 13604                           ; BSR set to: 0
 13605   001E1E  0012               	return		;funcret
 13606   001E20                     __end_of___llmod:
 13607                           	callstack 0
 13608                           
 13609 ;; *************** function ___lldiv *****************
 13610 ;; Defined at:
 13611 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
 13612 ;; Parameters:    Size  Location     Type
 13613 ;;  dividend        4   14[BANK0 ] unsigned long 
 13614 ;;  divisor         4   18[BANK0 ] unsigned long 
 13615 ;; Auto vars:     Size  Location     Type
 13616 ;;  quotient        4   22[BANK0 ] unsigned long 
 13617 ;;  counter         1   26[BANK0 ] unsigned char 
 13618 ;; Return value:  Size  Location     Type
 13619 ;;                  4   14[BANK0 ] unsigned long 
 13620 ;; Registers used:
 13621 ;;		wreg, status,2, status,0
 13622 ;; Tracked objects:
 13623 ;;		On entry : 0/0
 13624 ;;		On exit  : 0/0
 13625 ;;		Unchanged: 0/0
 13626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13627 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13628 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13630 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13631 ;;Total ram usage:       13 bytes
 13632 ;; Hardware stack levels used: 1
 13633 ;; Hardware stack levels required when called: 13
 13634 ;; This function calls:
 13635 ;;		Nothing
 13636 ;; This function is called by:
 13637 ;;		_utoa
 13638 ;;		___secs_to_tm
 13639 ;; This function uses a non-reentrant model
 13640 ;;
 13641                           
 13642                           	psect	text54
 13643   001A70                     __ptext54:
 13644                           	callstack 0
 13645   001A70                     ___lldiv:
 13646                           	callstack 13
 13647   001A70  0E00               	movlw	0
 13648   001A72  0100               	movlb	0	; () banked
 13649   001A74  6F76               	movwf	___lldiv@quotient& (0+255),b
 13650   001A76  0E00               	movlw	0
 13651   001A78  6F77               	movwf	(___lldiv@quotient+1)& (0+255),b
 13652   001A7A  0E00               	movlw	0
 13653   001A7C  6F78               	movwf	(___lldiv@quotient+2)& (0+255),b
 13654   001A7E  0E00               	movlw	0
 13655   001A80  6F79               	movwf	(___lldiv@quotient+3)& (0+255),b
 13656   001A82                     
 13657                           ; BSR set to: 0
 13658   001A82  5172               	movf	___lldiv@divisor& (0+255),w,b
 13659   001A84  1173               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 13660   001A86  1174               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 13661   001A88  1175               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 13662   001A8A  B4D8               	btfsc	status,2,c
 13663   001A8C  EF4A  F00D         	goto	u5291
 13664   001A90  EF4C  F00D         	goto	u5290
 13665   001A94                     u5291:
 13666   001A94  EF82  F00D         	goto	l2281
 13667   001A98                     u5290:
 13668   001A98                     
 13669                           ; BSR set to: 0
 13670   001A98  0E01               	movlw	1
 13671   001A9A  6F7A               	movwf	___lldiv@counter& (0+255),b
 13672   001A9C  EF56  F00D         	goto	l7788
 13673   001AA0                     l7786:
 13674                           
 13675                           ; BSR set to: 0
 13676   001AA0  90D8               	bcf	status,0,c
 13677   001AA2  3772               	rlcf	___lldiv@divisor& (0+255),f,b
 13678   001AA4  3773               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 13679   001AA6  3774               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 13680   001AA8  3775               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 13681   001AAA  2B7A               	incf	___lldiv@counter& (0+255),f,b
 13682   001AAC                     l7788:
 13683                           
 13684                           ; BSR set to: 0
 13685   001AAC  AF75               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 13686   001AAE  EF5B  F00D         	goto	u5301
 13687   001AB2  EF5D  F00D         	goto	u5300
 13688   001AB6                     u5301:
 13689   001AB6  EF50  F00D         	goto	l7786
 13690   001ABA                     u5300:
 13691   001ABA                     l7790:
 13692                           
 13693                           ; BSR set to: 0
 13694   001ABA  90D8               	bcf	status,0,c
 13695   001ABC  3776               	rlcf	___lldiv@quotient& (0+255),f,b
 13696   001ABE  3777               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 13697   001AC0  3778               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 13698   001AC2  3779               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 13699   001AC4                     
 13700                           ; BSR set to: 0
 13701   001AC4  5172               	movf	___lldiv@divisor& (0+255),w,b
 13702   001AC6  5D6E               	subwf	___lldiv@dividend& (0+255),w,b
 13703   001AC8  5173               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13704   001ACA  596F               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 13705   001ACC  5174               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13706   001ACE  5970               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 13707   001AD0  5175               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13708   001AD2  5971               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 13709   001AD4  A0D8               	btfss	status,0,c
 13710   001AD6  EF6F  F00D         	goto	u5311
 13711   001ADA  EF71  F00D         	goto	u5310
 13712   001ADE                     u5311:
 13713   001ADE  EF7A  F00D         	goto	l7798
 13714   001AE2                     u5310:
 13715   001AE2                     
 13716                           ; BSR set to: 0
 13717   001AE2  5172               	movf	___lldiv@divisor& (0+255),w,b
 13718   001AE4  5F6E               	subwf	___lldiv@dividend& (0+255),f,b
 13719   001AE6  5173               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13720   001AE8  5B6F               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 13721   001AEA  5174               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13722   001AEC  5B70               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 13723   001AEE  5175               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13724   001AF0  5B71               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 13725   001AF2                     
 13726                           ; BSR set to: 0
 13727   001AF2  8176               	bsf	___lldiv@quotient& (0+255),0,b
 13728   001AF4                     l7798:
 13729                           
 13730                           ; BSR set to: 0
 13731   001AF4  90D8               	bcf	status,0,c
 13732   001AF6  3375               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 13733   001AF8  3374               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 13734   001AFA  3373               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 13735   001AFC  3372               	rrcf	___lldiv@divisor& (0+255),f,b
 13736   001AFE                     
 13737                           ; BSR set to: 0
 13738   001AFE  2F7A               	decfsz	___lldiv@counter& (0+255),f,b
 13739   001B00  EF5D  F00D         	goto	l7790
 13740   001B04                     l2281:
 13741                           
 13742                           ; BSR set to: 0
 13743   001B04  C076  F06E         	movff	___lldiv@quotient,?___lldiv
 13744   001B08  C077  F06F         	movff	___lldiv@quotient+1,?___lldiv+1
 13745   001B0C  C078  F070         	movff	___lldiv@quotient+2,?___lldiv+2
 13746   001B10  C079  F071         	movff	___lldiv@quotient+3,?___lldiv+3
 13747   001B14                     
 13748                           ; BSR set to: 0
 13749   001B14  0012               	return		;funcret
 13750   001B16                     __end_of___lldiv:
 13751                           	callstack 0
 13752                           
 13753 ;; *************** function _stoa *****************
 13754 ;; Defined at:
 13755 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 13756 ;; Parameters:    Size  Location     Type
 13757 ;;  fp              1   24[BANK0 ] PTR struct _IO_FILE
 13758 ;;		 -> sprintf@f(11), NULL(0), 
 13759 ;;  s               2   25[BANK0 ] PTR unsigned char 
 13760 ;;		 -> F183$tm_year(2), F183$tm_mon(2), F183$tm_mday(2), F183$tm_hour(2), 
 13761 ;;		 -> F183$tm_min(2), F183$tm_sec(2), ?_printf(2), ?_sprintf(2), 
 13762 ;;		 -> STR_44(2), STR_43(2), STR_42(2), STR_41(2), 
 13763 ;;		 -> STR_12(2), STR_10(2), STR_8(2), STR_6(2), 
 13764 ;; Auto vars:     Size  Location     Type
 13765 ;;  l               2   33[BANK0 ] int 
 13766 ;;  cp              2   31[BANK0 ] PTR unsigned char 
 13767 ;;		 -> F183$tm_year(2), F183$tm_mon(2), F183$tm_mday(2), F183$tm_hour(2), 
 13768 ;;		 -> F183$tm_min(2), F183$tm_sec(2), ?_printf(2), STR_46(7), 
 13769 ;;		 -> ?_sprintf(2), STR_44(2), STR_43(2), STR_42(2), 
 13770 ;;		 -> STR_41(2), STR_12(2), STR_10(2), STR_8(2), 
 13771 ;;		 -> STR_6(2), 
 13772 ;;  p               2   29[BANK0 ] int 
 13773 ;; Return value:  Size  Location     Type
 13774 ;;                  1    wreg      void 
 13775 ;; Registers used:
 13776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13777 ;; Tracked objects:
 13778 ;;		On entry : 0/0
 13779 ;;		On exit  : 0/0
 13780 ;;		Unchanged: 0/0
 13781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13782 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13783 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13784 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13785 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13786 ;;Total ram usage:       11 bytes
 13787 ;; Hardware stack levels used: 1
 13788 ;; Hardware stack levels required when called: 16
 13789 ;; This function calls:
 13790 ;;		_fputc
 13791 ;; This function is called by:
 13792 ;;		_vfpfcnvrt
 13793 ;; This function uses a non-reentrant model
 13794 ;;
 13795                           
 13796                           	psect	text55
 13797   00103C                     __ptext55:
 13798                           	callstack 0
 13799   00103C                     _stoa:
 13800                           	callstack 11
 13801   00103C                     
 13802                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 951
      +                          :     cp = s;
 13803   00103C  C079  F07F         	movff	stoa@s,stoa@cp
 13804   001040  C07A  F080         	movff	stoa@s+1,stoa@cp+1
 13805                           
 13806                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 13807   001044  0100               	movlb	0	; () banked
 13808   001046  517F               	movf	stoa@cp& (0+255),w,b
 13809   001048  1180               	iorwf	(stoa@cp+1)& (0+255),w,b
 13810   00104A  A4D8               	btfss	status,2,c
 13811   00104C  EF2A  F008         	goto	u5981
 13812   001050  EF2C  F008         	goto	u5980
 13813   001054                     u5981:
 13814   001054  EF30  F008         	goto	l8234
 13815   001058                     u5980:
 13816   001058                     
 13817                           ; BSR set to: 0
 13818                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 13819   001058  0ED8               	movlw	low STR_46
 13820   00105A  6F7F               	movwf	stoa@cp& (0+255),b
 13821   00105C  0EFF               	movlw	high STR_46
 13822   00105E  6F80               	movwf	(stoa@cp+1)& (0+255),b
 13823   001060                     l8234:
 13824                           
 13825                           ; BSR set to: 0
 13826                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 13827   001060  0E00               	movlw	0
 13828   001062  6F82               	movwf	(stoa@l+1)& (0+255),b
 13829   001064  0E00               	movlw	0
 13830   001066  6F81               	movwf	stoa@l& (0+255),b
 13831   001068  EF39  F008         	goto	l8238
 13832   00106C                     l8236:
 13833   00106C  0100               	movlb	0	; () banked
 13834   00106E  4B81               	infsnz	stoa@l& (0+255),f,b
 13835   001070  2B82               	incf	(stoa@l+1)& (0+255),f,b
 13836   001072                     l8238:
 13837                           
 13838                           ; BSR set to: 0
 13839   001072  5181               	movf	stoa@l& (0+255),w,b
 13840   001074  257F               	addwf	stoa@cp& (0+255),w,b
 13841   001076  6F7B               	movwf	??_stoa& (0+255),b
 13842   001078  5182               	movf	(stoa@l+1)& (0+255),w,b
 13843   00107A  2180               	addwfc	(stoa@cp+1)& (0+255),w,b
 13844   00107C  6F7C               	movwf	(??_stoa+1)& (0+255),b
 13845   00107E  C07B  FFF6         	movff	??_stoa,tblptrl
 13846   001082  C07C  FFF7         	movff	??_stoa+1,tblptrh
 13847   001086  0E00               	movlw	low (__mediumconst shr (0+16))
 13848   001088  6EF8               	movwf	tblptru,c
 13849   00108A  0E0E               	movlw	(high __ramtop+-1)
 13850   00108C  64F7               	cpfsgt	tblptrh,c
 13851   00108E  D003               	bra	u5997
 13852   001090  0008               	tblrd		*
 13853   001092  50F5               	movf	tablat,w,c
 13854   001094  D005               	bra	u5990
 13855   001096                     u5997:
 13856   001096  CFF6 FFE9          	movff	tblptrl,fsr0l
 13857   00109A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13858   00109E  50EF               	movf	indf0,w,c
 13859   0010A0                     u5990:
 13860   0010A0  0900               	iorlw	0
 13861   0010A2  A4D8               	btfss	status,2,c
 13862   0010A4  EF56  F008         	goto	u6001
 13863   0010A8  EF58  F008         	goto	u6000
 13864   0010AC                     u6001:
 13865   0010AC  EF36  F008         	goto	l8236
 13866   0010B0                     u6000:
 13867   0010B0                     
 13868                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 961:  if (!(prec 
      +                          < 0) && (prec < l)) {
 13869   0010B0  BE3E               	btfsc	(_prec+1)^0,7,c
 13870   0010B2  EF5D  F008         	goto	u6011
 13871   0010B6  EF5F  F008         	goto	u6010
 13872   0010BA                     u6011:
 13873   0010BA  EF73  F008         	goto	l3052
 13874   0010BE                     u6010:
 13875   0010BE  0100               	movlb	0	; () banked
 13876   0010C0  5181               	movf	stoa@l& (0+255),w,b
 13877   0010C2  5C3D               	subwf	_prec^0,w,c
 13878   0010C4  503E               	movf	(_prec+1)^0,w,c
 13879   0010C6  0A80               	xorlw	128
 13880   0010C8  6F7B               	movwf	??_stoa& (0+255),b
 13881   0010CA  5182               	movf	(stoa@l+1)& (0+255),w,b
 13882   0010CC  0A80               	xorlw	128
 13883   0010CE  597B               	subwfb	??_stoa& (0+255),w,b
 13884   0010D0  B0D8               	btfsc	status,0,c
 13885   0010D2  EF6D  F008         	goto	u6021
 13886   0010D6  EF6F  F008         	goto	u6020
 13887   0010DA                     u6021:
 13888   0010DA  EF73  F008         	goto	l3052
 13889   0010DE                     u6020:
 13890   0010DE                     
 13891                           ; BSR set to: 0
 13892                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 962:   l = prec;
 13893   0010DE  C03D  F081         	movff	_prec,stoa@l
 13894   0010E2  C03E  F082         	movff	_prec+1,stoa@l+1
 13895   0010E6                     l3052:
 13896                           
 13897                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 965:     p = l;
 13898   0010E6  C081  F07D         	movff	stoa@l,stoa@p
 13899   0010EA  C082  F07E         	movff	stoa@l+1,stoa@p+1
 13900                           
 13901                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 13902   0010EE  EF96  F008         	goto	l8250
 13903   0010F2                     l8246:
 13904                           
 13905                           ; BSR set to: 0
 13906                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 13907   0010F2  C07F  FFF6         	movff	stoa@cp,tblptrl
 13908   0010F6  C080  FFF7         	movff	stoa@cp+1,tblptrh
 13909   0010FA  0E00               	movlw	low (__mediumconst shr (0+16))
 13910   0010FC  6EF8               	movwf	tblptru,c
 13911   0010FE  0E0E               	movlw	(high __ramtop+-1)
 13912   001100  64F7               	cpfsgt	tblptrh,c
 13913   001102  D003               	bra	u6037
 13914   001104  0008               	tblrd		*
 13915   001106  50F5               	movf	tablat,w,c
 13916   001108  D005               	bra	u6030
 13917   00110A                     u6037:
 13918   00110A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13919   00110E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13920   001112  50EF               	movf	indf0,w,c
 13921   001114                     u6030:
 13922   001114  0100               	movlb	0	; () banked
 13923   001116  6F7B               	movwf	??_stoa& (0+255),b
 13924   001118  517B               	movf	??_stoa& (0+255),w,b
 13925   00111A  6F70               	movwf	fputc@c& (0+255),b
 13926   00111C  6B71               	clrf	(fputc@c+1)& (0+255),b
 13927   00111E  C078  F072         	movff	stoa@fp,fputc@fp
 13928   001122  EC1C  F00B         	call	_fputc	;wreg free
 13929   001126                     
 13930                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 13931   001126  0100               	movlb	0	; () banked
 13932   001128  4B7F               	infsnz	stoa@cp& (0+255),f,b
 13933   00112A  2B80               	incf	(stoa@cp+1)& (0+255),f,b
 13934   00112C                     l8250:
 13935                           
 13936                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 13937   00112C  0100               	movlb	0	; () banked
 13938   00112E  077D               	decf	stoa@p& (0+255),f,b
 13939   001130  A0D8               	btfss	status,0,c
 13940   001132  077E               	decf	(stoa@p+1)& (0+255),f,b
 13941   001134  297D               	incf	stoa@p& (0+255),w,b
 13942   001136  E106               	bnz	u6041
 13943   001138  297E               	incf	(stoa@p+1)& (0+255),w,b
 13944   00113A  A4D8               	btfss	status,2,c
 13945   00113C  EFA2  F008         	goto	u6041
 13946   001140  EFA4  F008         	goto	u6040
 13947   001144                     u6041:
 13948   001144  EF79  F008         	goto	l8246
 13949   001148                     u6040:
 13950   001148                     
 13951                           ; BSR set to: 0
 13952   001148  0012               	return		;funcret
 13953   00114A                     __end_of_stoa:
 13954                           	callstack 0
 13955                           
 13956 ;; *************** function _read_prec_or_width *****************
 13957 ;; Defined at:
 13958 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 13959 ;; Parameters:    Size  Location     Type
 13960 ;;  fmt             1   14[BANK0 ] PTR PTR const unsigned c
 13961 ;;		 -> vfprintf@cfmt(2), 
 13962 ;;  ap              1   15[BANK0 ] PTR PTR void [1]
 13963 ;;		 -> printf@ap(2), sprintf@ap(2), 
 13964 ;; Auto vars:     Size  Location     Type
 13965 ;;  c               1   18[BANK0 ] unsigned char 
 13966 ;;  n               2   19[BANK0 ] int 
 13967 ;; Return value:  Size  Location     Type
 13968 ;;                  2   14[BANK0 ] int 
 13969 ;; Registers used:
 13970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 13971 ;; Tracked objects:
 13972 ;;		On entry : 0/0
 13973 ;;		On exit  : 0/0
 13974 ;;		Unchanged: 0/0
 13975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13976 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13977 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13978 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13979 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13980 ;;Total ram usage:        7 bytes
 13981 ;; Hardware stack levels used: 1
 13982 ;; Hardware stack levels required when called: 13
 13983 ;; This function calls:
 13984 ;;		Nothing
 13985 ;; This function is called by:
 13986 ;;		_vfpfcnvrt
 13987 ;; This function uses a non-reentrant model
 13988 ;;
 13989                           
 13990                           	psect	text56
 13991   001868                     __ptext56:
 13992                           	callstack 0
 13993   001868                     _read_prec_or_width:
 13994                           	callstack 14
 13995   001868                     
 13996                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 13997   001868  0E00               	movlw	0
 13998   00186A  0100               	movlb	0	; () banked
 13999   00186C  6F74               	movwf	(read_prec_or_width@n+1)& (0+255),b
 14000   00186E  0E00               	movlw	0
 14001   001870  6F73               	movwf	read_prec_or_width@n& (0+255),b
 14002   001872                     
 14003                           ; BSR set to: 0
 14004                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 14005   001872  516E               	movf	read_prec_or_width@fmt& (0+255),w,b
 14006   001874  6ED9               	movwf	fsr2l,c
 14007   001876  6ADA               	clrf	fsr2h,c
 14008   001878  CFDE FFF6          	movff	postinc2,tblptrl
 14009   00187C  CFDD FFF7          	movff	postdec2,tblptrh
 14010   001880                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14011   001880  6AF8               	clrf	tblptru,c
 14012   001882                     	endif
 14013   001882                     	if	0	;tblptru may be non-zero
 14014   001882                     	endif
 14015   001882  0008               	tblrd		*
 14016   001884  50F5               	movf	tablat,w,c
 14017   001886  0A2A               	xorlw	42
 14018   001888  A4D8               	btfss	status,2,c
 14019   00188A  EF49  F00C         	goto	u6091
 14020   00188E  EF4B  F00C         	goto	u6090
 14021   001892                     u6091:
 14022   001892  EF74  F00C         	goto	l8292
 14023   001896                     u6090:
 14024   001896                     
 14025                           ; BSR set to: 0
 14026                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 14027   001896  516E               	movf	read_prec_or_width@fmt& (0+255),w,b
 14028   001898  6ED9               	movwf	fsr2l,c
 14029   00189A  6ADA               	clrf	fsr2h,c
 14030   00189C  2ADE               	incf	postinc2,f,c
 14031   00189E  0E00               	movlw	0
 14032   0018A0  22DD               	addwfc	postdec2,f,c
 14033   0018A2                     
 14034                           ; BSR set to: 0
 14035                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 14036   0018A2  516F               	movf	read_prec_or_width@ap& (0+255),w,b
 14037   0018A4  6ED9               	movwf	fsr2l,c
 14038   0018A6  6ADA               	clrf	fsr2h,c
 14039   0018A8  0E02               	movlw	2
 14040   0018AA  26DF               	addwf	indf2,f,c
 14041   0018AC  5CDF               	subwf	indf2,w,c
 14042   0018AE  6ED9               	movwf	fsr2l,c
 14043   0018B0  6ADA               	clrf	fsr2h,c
 14044   0018B2  CFDE F073          	movff	postinc2,read_prec_or_width@n
 14045   0018B6  CFDE F074          	movff	postinc2,read_prec_or_width@n+1
 14046                           
 14047                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 14048   0018BA  EF88  F00C         	goto	l3072
 14049   0018BE                     l8288:
 14050                           
 14051                           ; BSR set to: 0
 14052                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 14053   0018BE  0E0A               	movlw	10
 14054   0018C0  0373               	mulwf	read_prec_or_width@n& (0+255),b
 14055   0018C2  CFF3 F070          	movff	prodl,??_read_prec_or_width
 14056   0018C6  CFF4 F071          	movff	prodh,??_read_prec_or_width+1
 14057   0018CA  0374               	mulwf	(read_prec_or_width@n+1)& (0+255),b
 14058   0018CC  50F3               	movf	prodl,w,c
 14059   0018CE  2771               	addwf	(??_read_prec_or_width+1)& (0+255),f,b
 14060   0018D0  5172               	movf	read_prec_or_width@c& (0+255),w,b
 14061   0018D2  2570               	addwf	??_read_prec_or_width& (0+255),w,b
 14062   0018D4  6F73               	movwf	read_prec_or_width@n& (0+255),b
 14063   0018D6  0E00               	movlw	0
 14064   0018D8  2171               	addwfc	(??_read_prec_or_width+1)& (0+255),w,b
 14065   0018DA  6F74               	movwf	(read_prec_or_width@n+1)& (0+255),b
 14066   0018DC                     
 14067                           ; BSR set to: 0
 14068                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 14069   0018DC  516E               	movf	read_prec_or_width@fmt& (0+255),w,b
 14070   0018DE  6ED9               	movwf	fsr2l,c
 14071   0018E0  6ADA               	clrf	fsr2h,c
 14072   0018E2  2ADE               	incf	postinc2,f,c
 14073   0018E4  0E00               	movlw	0
 14074   0018E6  22DD               	addwfc	postdec2,f,c
 14075   0018E8                     l8292:
 14076                           
 14077                           ; BSR set to: 0
 14078                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 14079   0018E8  516E               	movf	read_prec_or_width@fmt& (0+255),w,b
 14080   0018EA  6ED9               	movwf	fsr2l,c
 14081   0018EC  6ADA               	clrf	fsr2h,c
 14082   0018EE  CFDE FFF6          	movff	postinc2,tblptrl
 14083   0018F2  CFDD FFF7          	movff	postdec2,tblptrh
 14084   0018F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14085   0018F6  6AF8               	clrf	tblptru,c
 14086   0018F8                     	endif
 14087   0018F8                     	if	0	;tblptru may be non-zero
 14088   0018F8                     	endif
 14089   0018F8  0008               	tblrd		*
 14090   0018FA  50F5               	movf	tablat,w,c
 14091   0018FC  0FD0               	addlw	208
 14092   0018FE  6F72               	movwf	read_prec_or_width@c& (0+255),b
 14093   001900  0E09               	movlw	9
 14094   001902  6572               	cpfsgt	read_prec_or_width@c& (0+255),b
 14095   001904  EF86  F00C         	goto	u6101
 14096   001908  EF88  F00C         	goto	u6100
 14097   00190C                     u6101:
 14098   00190C  EF5F  F00C         	goto	l8288
 14099   001910                     u6100:
 14100   001910                     l3072:
 14101                           
 14102                           ; BSR set to: 0
 14103                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 14104   001910  C073  F06E         	movff	read_prec_or_width@n,?_read_prec_or_width
 14105   001914  C074  F06F         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 14106   001918                     
 14107                           ; BSR set to: 0
 14108   001918  0012               	return		;funcret
 14109   00191A                     __end_of_read_prec_or_width:
 14110                           	callstack 0
 14111                           
 14112 ;; *************** function _dtoa *****************
 14113 ;; Defined at:
 14114 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 14115 ;; Parameters:    Size  Location     Type
 14116 ;;  fp              1   38[BANK0 ] PTR struct _IO_FILE
 14117 ;;		 -> sprintf@f(11), NULL(0), 
 14118 ;;  d               4   39[BANK0 ] long 
 14119 ;; Auto vars:     Size  Location     Type
 14120 ;;  i               2   50[BANK0 ] int 
 14121 ;;  p               2   47[BANK0 ] int 
 14122 ;;  w               2   45[BANK0 ] int 
 14123 ;;  s               1   49[BANK0 ] unsigned char 
 14124 ;; Return value:  Size  Location     Type
 14125 ;;                  1    wreg      void 
 14126 ;; Registers used:
 14127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14128 ;; Tracked objects:
 14129 ;;		On entry : 0/0
 14130 ;;		On exit  : 0/0
 14131 ;;		Unchanged: 0/0
 14132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14133 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14134 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14136 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14137 ;;Total ram usage:       14 bytes
 14138 ;; Hardware stack levels used: 1
 14139 ;; Hardware stack levels required when called: 18
 14140 ;; This function calls:
 14141 ;;		___aldiv
 14142 ;;		___almod
 14143 ;;		_abs
 14144 ;;		_pad
 14145 ;; This function is called by:
 14146 ;;		_vfpfcnvrt
 14147 ;; This function uses a non-reentrant model
 14148 ;;
 14149                           
 14150                           	psect	text57
 14151   000ABE                     __ptext57:
 14152                           	callstack 0
 14153   000ABE                     _dtoa:
 14154                           	callstack 9
 14155   000ABE                     
 14156                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 14157   000ABE  0100               	movlb	0	; () banked
 14158   000AC0  BF8A               	btfsc	(dtoa@d+3)& (0+255),7,b
 14159   000AC2  EF65  F005         	goto	u5891
 14160   000AC6  EF68  F005         	goto	u5890
 14161   000ACA                     u5891:
 14162   000ACA  0E01               	movlw	1
 14163   000ACC  EF69  F005         	goto	u5900
 14164   000AD0                     u5890:
 14165   000AD0  0E00               	movlw	0
 14166   000AD2                     u5900:
 14167   000AD2  6F91               	movwf	dtoa@s& (0+255),b
 14168                           
 14169                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 14170   000AD4  BE3E               	btfsc	(_prec+1)^0,7,c
 14171   000AD6  EF71  F005         	goto	u5910
 14172   000ADA  EF6F  F005         	goto	u5911
 14173   000ADE                     u5911:
 14174   000ADE  EF77  F005         	goto	l3030
 14175   000AE2                     u5910:
 14176   000AE2                     
 14177                           ; BSR set to: 0
 14178   000AE2  0E00               	movlw	0
 14179   000AE4  6F90               	movwf	(dtoa@p+1)& (0+255),b
 14180   000AE6  0E01               	movlw	1
 14181   000AE8  6F8F               	movwf	dtoa@p& (0+255),b
 14182   000AEA  EF7B  F005         	goto	l3032
 14183   000AEE                     l3030:
 14184                           
 14185                           ; BSR set to: 0
 14186   000AEE  C03D  F08F         	movff	_prec,dtoa@p
 14187   000AF2  C03E  F090         	movff	_prec+1,dtoa@p+1
 14188   000AF6                     l3032:
 14189                           
 14190                           ; BSR set to: 0
 14191                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 14192   000AF6  C0BB  F08D         	movff	_width,dtoa@w
 14193   000AFA  C0BC  F08E         	movff	_width+1,dtoa@w+1
 14194   000AFE                     
 14195                           ; BSR set to: 0
 14196                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 14197   000AFE  5191               	movf	dtoa@s& (0+255),w,b
 14198   000B00  B4D8               	btfsc	status,2,c
 14199   000B02  EF85  F005         	goto	u5921
 14200   000B06  EF87  F005         	goto	u5920
 14201   000B0A                     u5921:
 14202   000B0A  EF9E  F005         	goto	l3033
 14203   000B0E                     u5920:
 14204   000B0E                     
 14205                           ; BSR set to: 0
 14206                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 14207   000B0E  078D               	decf	dtoa@w& (0+255),f,b
 14208   000B10  A0D8               	btfss	status,0,c
 14209   000B12  078E               	decf	(dtoa@w+1)& (0+255),f,b
 14210   000B14                     
 14211                           ; BSR set to: 0
 14212                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 14213   000B14  5191               	movf	dtoa@s& (0+255),w,b
 14214   000B16  A4D8               	btfss	status,2,c
 14215   000B18  EF90  F005         	goto	u5931
 14216   000B1C  EF92  F005         	goto	u5930
 14217   000B20                     u5931:
 14218   000B20  EF98  F005         	goto	l8198
 14219   000B24                     u5930:
 14220   000B24                     
 14221                           ; BSR set to: 0
 14222   000B24  0E00               	movlw	0
 14223   000B26  6F8C               	movwf	(_dtoa$5818+1)& (0+255),b
 14224   000B28  0E2B               	movlw	43
 14225   000B2A  6F8B               	movwf	_dtoa$5818& (0+255),b
 14226   000B2C  EF9C  F005         	goto	l8200
 14227   000B30                     l8198:
 14228                           
 14229                           ; BSR set to: 0
 14230   000B30  0E00               	movlw	0
 14231   000B32  6F8C               	movwf	(_dtoa$5818+1)& (0+255),b
 14232   000B34  0E2D               	movlw	45
 14233   000B36  6F8B               	movwf	_dtoa$5818& (0+255),b
 14234   000B38                     l8200:
 14235                           
 14236                           ; BSR set to: 0
 14237   000B38  C08B  F091         	movff	_dtoa$5818,dtoa@s
 14238   000B3C                     l3033:
 14239                           
 14240                           ; BSR set to: 0
 14241                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 14242   000B3C  0E00               	movlw	0
 14243   000B3E  6F93               	movwf	(dtoa@i+1)& (0+255),b
 14244   000B40  0E1F               	movlw	31
 14245   000B42  6F92               	movwf	dtoa@i& (0+255),b
 14246   000B44                     
 14247                           ; BSR set to: 0
 14248                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 14249   000B44  0101               	movlb	1	; () banked
 14250   000B46  6B83               	clrf	(_dbuf+31)& (0+255),b
 14251                           
 14252                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 14253   000B48  EFEB  F005         	goto	l8214
 14254   000B4C                     l8204:
 14255                           
 14256                           ; BSR set to: 0
 14257                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 14258   000B4C  0792               	decf	dtoa@i& (0+255),f,b
 14259   000B4E  A0D8               	btfss	status,0,c
 14260   000B50  0793               	decf	(dtoa@i+1)& (0+255),f,b
 14261   000B52                     
 14262                           ; BSR set to: 0
 14263                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 14264   000B52  0E64               	movlw	low _dbuf
 14265   000B54  2592               	addwf	dtoa@i& (0+255),w,b
 14266   000B56  6ED9               	movwf	fsr2l,c
 14267   000B58  0E01               	movlw	high _dbuf
 14268   000B5A  2193               	addwfc	(dtoa@i+1)& (0+255),w,b
 14269   000B5C  6EDA               	movwf	fsr2h,c
 14270   000B5E  C087  F06E         	movff	dtoa@d,___almod@dividend
 14271   000B62  C088  F06F         	movff	dtoa@d+1,___almod@dividend+1
 14272   000B66  C089  F070         	movff	dtoa@d+2,___almod@dividend+2
 14273   000B6A  C08A  F071         	movff	dtoa@d+3,___almod@dividend+3
 14274   000B6E  0E0A               	movlw	10
 14275   000B70  6F72               	movwf	___almod@divisor& (0+255),b
 14276   000B72  0E00               	movlw	0
 14277   000B74  6F73               	movwf	(___almod@divisor+1)& (0+255),b
 14278   000B76  0E00               	movlw	0
 14279   000B78  6F74               	movwf	(___almod@divisor+2)& (0+255),b
 14280   000B7A  0E00               	movlw	0
 14281   000B7C  6F75               	movwf	(___almod@divisor+3)& (0+255),b
 14282   000B7E  EC31  F00A         	call	___almod	;wreg free
 14283   000B82  C06E  F078         	movff	?___almod,abs@a
 14284   000B86  C06F  F079         	movff	?___almod+1,abs@a+1
 14285   000B8A  ECB1  F012         	call	_abs	;wreg free
 14286   000B8E  0100               	movlb	0	; () banked
 14287   000B90  5178               	movf	?_abs& (0+255),w,b
 14288   000B92  0F30               	addlw	48
 14289   000B94  6EDF               	movwf	indf2,c
 14290   000B96                     
 14291                           ; BSR set to: 0
 14292                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 567:         --p;
 14293   000B96  078F               	decf	dtoa@p& (0+255),f,b
 14294   000B98  A0D8               	btfss	status,0,c
 14295   000B9A  0790               	decf	(dtoa@p+1)& (0+255),f,b
 14296   000B9C                     
 14297                           ; BSR set to: 0
 14298                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 14299   000B9C  078D               	decf	dtoa@w& (0+255),f,b
 14300   000B9E  A0D8               	btfss	status,0,c
 14301   000BA0  078E               	decf	(dtoa@w+1)& (0+255),f,b
 14302   000BA2                     
 14303                           ; BSR set to: 0
 14304                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 14305   000BA2  C087  F06E         	movff	dtoa@d,___aldiv@dividend
 14306   000BA6  C088  F06F         	movff	dtoa@d+1,___aldiv@dividend+1
 14307   000BAA  C089  F070         	movff	dtoa@d+2,___aldiv@dividend+2
 14308   000BAE  C08A  F071         	movff	dtoa@d+3,___aldiv@dividend+3
 14309   000BB2  0E0A               	movlw	10
 14310   000BB4  6F72               	movwf	___aldiv@divisor& (0+255),b
 14311   000BB6  0E00               	movlw	0
 14312   000BB8  6F73               	movwf	(___aldiv@divisor+1)& (0+255),b
 14313   000BBA  0E00               	movlw	0
 14314   000BBC  6F74               	movwf	(___aldiv@divisor+2)& (0+255),b
 14315   000BBE  0E00               	movlw	0
 14316   000BC0  6F75               	movwf	(___aldiv@divisor+3)& (0+255),b
 14317   000BC2  ECA5  F008         	call	___aldiv	;wreg free
 14318   000BC6  C06E  F087         	movff	?___aldiv,dtoa@d
 14319   000BCA  C06F  F088         	movff	?___aldiv+1,dtoa@d+1
 14320   000BCE  C070  F089         	movff	?___aldiv+2,dtoa@d+2
 14321   000BD2  C071  F08A         	movff	?___aldiv+3,dtoa@d+3
 14322   000BD6                     l8214:
 14323                           
 14324                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 14325   000BD6  0100               	movlb	0	; () banked
 14326   000BD8  BF93               	btfsc	(dtoa@i+1)& (0+255),7,b
 14327   000BDA  EFF7  F005         	goto	u5941
 14328   000BDE  5193               	movf	(dtoa@i+1)& (0+255),w,b
 14329   000BE0  E108               	bnz	u5940
 14330   000BE2  0592               	decf	dtoa@i& (0+255),w,b
 14331   000BE4  A0D8               	btfss	status,0,c
 14332   000BE6  EFF7  F005         	goto	u5941
 14333   000BEA  EFF9  F005         	goto	u5940
 14334   000BEE                     u5941:
 14335   000BEE  EF11  F006         	goto	l8220
 14336   000BF2                     u5940:
 14337   000BF2                     
 14338                           ; BSR set to: 0
 14339   000BF2  5187               	movf	dtoa@d& (0+255),w,b
 14340   000BF4  1188               	iorwf	(dtoa@d+1)& (0+255),w,b
 14341   000BF6  1189               	iorwf	(dtoa@d+2)& (0+255),w,b
 14342   000BF8  118A               	iorwf	(dtoa@d+3)& (0+255),w,b
 14343   000BFA  A4D8               	btfss	status,2,c
 14344   000BFC  EF02  F006         	goto	u5951
 14345   000C00  EF04  F006         	goto	u5950
 14346   000C04                     u5951:
 14347   000C04  EFA6  F005         	goto	l8204
 14348   000C08                     u5950:
 14349   000C08                     
 14350                           ; BSR set to: 0
 14351   000C08  BF90               	btfsc	(dtoa@p+1)& (0+255),7,b
 14352   000C0A  EF11  F006         	goto	u5960
 14353   000C0E  5190               	movf	(dtoa@p+1)& (0+255),w,b
 14354   000C10  E106               	bnz	u5961
 14355   000C12  058F               	decf	dtoa@p& (0+255),w,b
 14356   000C14  B0D8               	btfsc	status,0,c
 14357   000C16  EF0F  F006         	goto	u5961
 14358   000C1A  EF11  F006         	goto	u5960
 14359   000C1E                     u5961:
 14360   000C1E  EFA6  F005         	goto	l8204
 14361   000C22                     u5960:
 14362   000C22                     l8220:
 14363                           
 14364                           ; BSR set to: 0
 14365                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 14366   000C22  5191               	movf	dtoa@s& (0+255),w,b
 14367   000C24  B4D8               	btfsc	status,2,c
 14368   000C26  EF17  F006         	goto	u5971
 14369   000C2A  EF19  F006         	goto	u5970
 14370   000C2E                     u5971:
 14371   000C2E  EF24  F006         	goto	l8226
 14372   000C32                     u5970:
 14373   000C32                     
 14374                           ; BSR set to: 0
 14375                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 14376   000C32  0792               	decf	dtoa@i& (0+255),f,b
 14377   000C34  A0D8               	btfss	status,0,c
 14378   000C36  0793               	decf	(dtoa@i+1)& (0+255),f,b
 14379   000C38                     
 14380                           ; BSR set to: 0
 14381                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 14382   000C38  0E64               	movlw	low _dbuf
 14383   000C3A  2592               	addwf	dtoa@i& (0+255),w,b
 14384   000C3C  6ED9               	movwf	fsr2l,c
 14385   000C3E  0E01               	movlw	high _dbuf
 14386   000C40  2193               	addwfc	(dtoa@i+1)& (0+255),w,b
 14387   000C42  6EDA               	movwf	fsr2h,c
 14388   000C44  C091  FFDF         	movff	dtoa@s,indf2
 14389   000C48                     l8226:
 14390                           
 14391                           ; BSR set to: 0
 14392                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 14393   000C48  C086  F07E         	movff	dtoa@fp,pad@fp
 14394   000C4C  0E64               	movlw	low _dbuf
 14395   000C4E  2592               	addwf	dtoa@i& (0+255),w,b
 14396   000C50  6F7F               	movwf	pad@buf& (0+255),b
 14397   000C52  0E01               	movlw	high _dbuf
 14398   000C54  2193               	addwfc	(dtoa@i+1)& (0+255),w,b
 14399   000C56  6F80               	movwf	(pad@buf+1)& (0+255),b
 14400   000C58  C08D  F081         	movff	dtoa@w,pad@p
 14401   000C5C  C08E  F082         	movff	dtoa@w+1,pad@p+1
 14402   000C60  EC97  F00F         	call	_pad	;wreg free
 14403   000C64  0012               	return		;funcret
 14404   000C66                     __end_of_dtoa:
 14405                           	callstack 0
 14406                           
 14407 ;; *************** function _pad *****************
 14408 ;; Defined at:
 14409 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 14410 ;; Parameters:    Size  Location     Type
 14411 ;;  fp              1   30[BANK0 ] PTR struct _IO_FILE
 14412 ;;		 -> sprintf@f(11), NULL(0), 
 14413 ;;  buf             2   31[BANK0 ] PTR unsigned char 
 14414 ;;		 -> dbuf(32), 
 14415 ;;  p               2   33[BANK0 ] int 
 14416 ;; Auto vars:     Size  Location     Type
 14417 ;;  i               2   36[BANK0 ] int 
 14418 ;; Return value:  Size  Location     Type
 14419 ;;                  1    wreg      void 
 14420 ;; Registers used:
 14421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14422 ;; Tracked objects:
 14423 ;;		On entry : 0/0
 14424 ;;		On exit  : 0/0
 14425 ;;		Unchanged: 0/0
 14426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14427 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14428 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14429 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14430 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14431 ;;Total ram usage:        8 bytes
 14432 ;; Hardware stack levels used: 1
 14433 ;; Hardware stack levels required when called: 17
 14434 ;; This function calls:
 14435 ;;		_fputc
 14436 ;;		_fputs
 14437 ;; This function is called by:
 14438 ;;		_dtoa
 14439 ;;		_utoa
 14440 ;; This function uses a non-reentrant model
 14441 ;;
 14442                           
 14443                           	psect	text58
 14444   001F2E                     __ptext58:
 14445                           	callstack 0
 14446   001F2E                     _pad:
 14447                           	callstack 9
 14448   001F2E                     
 14449                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 14450   001F2E  0100               	movlb	0	; () banked
 14451   001F30  BF82               	btfsc	(pad@p+1)& (0+255),7,b
 14452   001F32  EF9F  F00F         	goto	u5470
 14453   001F36  EF9D  F00F         	goto	u5471
 14454   001F3A                     u5471:
 14455   001F3A  EFA3  F00F         	goto	l3022
 14456   001F3E                     u5470:
 14457   001F3E                     
 14458                           ; BSR set to: 0
 14459                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 14460   001F3E  0E00               	movlw	0
 14461   001F40  6F82               	movwf	(pad@p+1)& (0+255),b
 14462   001F42  0E00               	movlw	0
 14463   001F44  6F81               	movwf	pad@p& (0+255),b
 14464   001F46                     l3022:
 14465                           
 14466                           ; BSR set to: 0
 14467                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 14468   001F46  0E00               	movlw	0
 14469   001F48  6F85               	movwf	(pad@i+1)& (0+255),b
 14470   001F4A  0E00               	movlw	0
 14471   001F4C  6F84               	movwf	pad@i& (0+255),b
 14472                           
 14473                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 14474   001F4E  EFB4  F00F         	goto	l7906
 14475   001F52                     l7902:
 14476                           
 14477                           ; BSR set to: 0
 14478                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 14479   001F52  0E00               	movlw	0
 14480   001F54  6F71               	movwf	(fputc@c+1)& (0+255),b
 14481   001F56  0E20               	movlw	32
 14482   001F58  6F70               	movwf	fputc@c& (0+255),b
 14483   001F5A  C07E  F072         	movff	pad@fp,fputc@fp
 14484   001F5E  EC1C  F00B         	call	_fputc	;wreg free
 14485   001F62                     
 14486                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 14487   001F62  0100               	movlb	0	; () banked
 14488   001F64  4B84               	infsnz	pad@i& (0+255),f,b
 14489   001F66  2B85               	incf	(pad@i+1)& (0+255),f,b
 14490   001F68                     l7906:
 14491                           
 14492                           ; BSR set to: 0
 14493                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 14494   001F68  5181               	movf	pad@p& (0+255),w,b
 14495   001F6A  5D84               	subwf	pad@i& (0+255),w,b
 14496   001F6C  5185               	movf	(pad@i+1)& (0+255),w,b
 14497   001F6E  0A80               	xorlw	128
 14498   001F70  6F83               	movwf	??_pad& (0+255),b
 14499   001F72  5182               	movf	(pad@p+1)& (0+255),w,b
 14500   001F74  0A80               	xorlw	128
 14501   001F76  5983               	subwfb	??_pad& (0+255),w,b
 14502   001F78  A0D8               	btfss	status,0,c
 14503   001F7A  EFC1  F00F         	goto	u5481
 14504   001F7E  EFC3  F00F         	goto	u5480
 14505   001F82                     u5481:
 14506   001F82  EFA9  F00F         	goto	l7902
 14507   001F86                     u5480:
 14508   001F86                     
 14509                           ; BSR set to: 0
 14510                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 14511   001F86  C07F  F078         	movff	pad@buf,fputs@s
 14512   001F8A  C080  F079         	movff	pad@buf+1,fputs@s+1
 14513   001F8E  C07E  F07A         	movff	pad@fp,fputs@fp
 14514   001F92  EC93  F011         	call	_fputs	;wreg free
 14515   001F96  0012               	return		;funcret
 14516   001F98                     __end_of_pad:
 14517                           	callstack 0
 14518                           
 14519 ;; *************** function _fputs *****************
 14520 ;; Defined at:
 14521 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 14522 ;; Parameters:    Size  Location     Type
 14523 ;;  s               2   24[BANK0 ] PTR const unsigned char 
 14524 ;;		 -> dbuf(32), 
 14525 ;;  fp              1   26[BANK0 ] PTR struct _IO_FILE
 14526 ;;		 -> sprintf@f(11), NULL(0), 
 14527 ;; Auto vars:     Size  Location     Type
 14528 ;;  i               2   28[BANK0 ] int 
 14529 ;;  c               1   27[BANK0 ] unsigned char 
 14530 ;; Return value:  Size  Location     Type
 14531 ;;                  2   24[BANK0 ] int 
 14532 ;; Registers used:
 14533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14534 ;; Tracked objects:
 14535 ;;		On entry : 0/0
 14536 ;;		On exit  : 0/0
 14537 ;;		Unchanged: 0/0
 14538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14539 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14540 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14542 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14543 ;;Total ram usage:        6 bytes
 14544 ;; Hardware stack levels used: 1
 14545 ;; Hardware stack levels required when called: 16
 14546 ;; This function calls:
 14547 ;;		_fputc
 14548 ;; This function is called by:
 14549 ;;		_pad
 14550 ;; This function uses a non-reentrant model
 14551 ;;
 14552                           
 14553                           	psect	text59
 14554   002326                     __ptext59:
 14555                           	callstack 0
 14556   002326                     _fputs:
 14557                           	callstack 9
 14558   002326  0E00               	movlw	0
 14559   002328  0100               	movlb	0	; () banked
 14560   00232A  6F7D               	movwf	(fputs@i+1)& (0+255),b
 14561   00232C  0E00               	movlw	0
 14562   00232E  6F7C               	movwf	fputs@i& (0+255),b
 14563   002330  EFA4  F011         	goto	l7670
 14564   002334                     l7666:
 14565                           
 14566                           ; BSR set to: 0
 14567   002334  C07B  F070         	movff	fputs@c,fputc@c
 14568   002338  6B71               	clrf	(fputc@c+1)& (0+255),b
 14569   00233A  C07A  F072         	movff	fputs@fp,fputc@fp
 14570   00233E  EC1C  F00B         	call	_fputc	;wreg free
 14571   002342  0100               	movlb	0	; () banked
 14572   002344  4B7C               	infsnz	fputs@i& (0+255),f,b
 14573   002346  2B7D               	incf	(fputs@i+1)& (0+255),f,b
 14574   002348                     l7670:
 14575                           
 14576                           ; BSR set to: 0
 14577   002348  517C               	movf	fputs@i& (0+255),w,b
 14578   00234A  2578               	addwf	fputs@s& (0+255),w,b
 14579   00234C  6ED9               	movwf	fsr2l,c
 14580   00234E  517D               	movf	(fputs@i+1)& (0+255),w,b
 14581   002350  2179               	addwfc	(fputs@s+1)& (0+255),w,b
 14582   002352  6EDA               	movwf	fsr2h,c
 14583   002354  50DF               	movf	indf2,w,c
 14584   002356  6F7B               	movwf	fputs@c& (0+255),b
 14585   002358  517B               	movf	fputs@c& (0+255),w,b
 14586   00235A  A4D8               	btfss	status,2,c
 14587   00235C  EFB2  F011         	goto	u5131
 14588   002360  EFB4  F011         	goto	u5130
 14589   002364                     u5131:
 14590   002364  EF9A  F011         	goto	l7666
 14591   002368                     u5130:
 14592   002368                     
 14593                           ; BSR set to: 0
 14594   002368  0012               	return		;funcret
 14595   00236A                     __end_of_fputs:
 14596                           	callstack 0
 14597                           
 14598 ;; *************** function _fputc *****************
 14599 ;; Defined at:
 14600 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 14601 ;; Parameters:    Size  Location     Type
 14602 ;;  c               2   16[BANK0 ] int 
 14603 ;;  fp              1   18[BANK0 ] PTR struct _IO_FILE
 14604 ;;		 -> sprintf@f(11), NULL(0), 
 14605 ;; Auto vars:     Size  Location     Type
 14606 ;;		None
 14607 ;; Return value:  Size  Location     Type
 14608 ;;                  2   16[BANK0 ] int 
 14609 ;; Registers used:
 14610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14611 ;; Tracked objects:
 14612 ;;		On entry : 0/0
 14613 ;;		On exit  : 0/0
 14614 ;;		Unchanged: 0/0
 14615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14616 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14618 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14619 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14620 ;;Total ram usage:        8 bytes
 14621 ;; Hardware stack levels used: 1
 14622 ;; Hardware stack levels required when called: 15
 14623 ;; This function calls:
 14624 ;;		_putch
 14625 ;; This function is called by:
 14626 ;;		_pad
 14627 ;;		_stoa
 14628 ;;		_vfpfcnvrt
 14629 ;;		_fputs
 14630 ;; This function uses a non-reentrant model
 14631 ;;
 14632                           
 14633                           	psect	text60
 14634   001638                     __ptext60:
 14635                           	callstack 0
 14636   001638                     _fputc:
 14637                           	callstack 9
 14638   001638  0100               	movlb	0	; () banked
 14639   00163A  5172               	movf	fputc@fp& (0+255),w,b
 14640   00163C  B4D8               	btfsc	status,2,c
 14641   00163E  EF23  F00B         	goto	u5051
 14642   001642  EF25  F00B         	goto	u5050
 14643   001646                     u5051:
 14644   001646  EF2D  F00B         	goto	l7640
 14645   00164A                     u5050:
 14646   00164A                     
 14647                           ; BSR set to: 0
 14648   00164A  5172               	movf	fputc@fp& (0+255),w,b
 14649   00164C  A4D8               	btfss	status,2,c
 14650   00164E  EF2B  F00B         	goto	u5061
 14651   001652  EF2D  F00B         	goto	u5060
 14652   001656                     u5061:
 14653   001656  EF32  F00B         	goto	l7642
 14654   00165A                     u5060:
 14655   00165A                     l7640:
 14656                           
 14657                           ; BSR set to: 0
 14658   00165A  5170               	movf	fputc@c& (0+255),w,b
 14659   00165C  ECEE  F014         	call	_putch
 14660   001660  EF79  F00B         	goto	l3134
 14661   001664                     l7642:
 14662                           
 14663                           ; BSR set to: 0
 14664   001664  5172               	movf	fputc@fp& (0+255),w,b
 14665   001666  6ED9               	movwf	fsr2l,c
 14666   001668  6ADA               	clrf	fsr2h,c
 14667   00166A  0E09               	movlw	9
 14668   00166C  26D9               	addwf	fsr2l,f,c
 14669   00166E  50DE               	movf	postinc2,w,c
 14670   001670  10DE               	iorwf	postinc2,w,c
 14671   001672  B4D8               	btfsc	status,2,c
 14672   001674  EF3E  F00B         	goto	u5071
 14673   001678  EF40  F00B         	goto	u5070
 14674   00167C                     u5071:
 14675   00167C  EF59  F00B         	goto	l7646
 14676   001680                     u5070:
 14677   001680                     
 14678                           ; BSR set to: 0
 14679   001680  5172               	movf	fputc@fp& (0+255),w,b
 14680   001682  6ED9               	movwf	fsr2l,c
 14681   001684  6ADA               	clrf	fsr2h,c
 14682   001686  0E09               	movlw	9
 14683   001688  26D9               	addwf	fsr2l,f,c
 14684   00168A  5172               	movf	fputc@fp& (0+255),w,b
 14685   00168C  6EE1               	movwf	fsr1l,c
 14686   00168E  6AE2               	clrf	fsr1h,c
 14687   001690  0E02               	movlw	2
 14688   001692  26E1               	addwf	fsr1l,f,c
 14689   001694  50DE               	movf	postinc2,w,c
 14690   001696  5CE6               	subwf	postinc1,w,c
 14691   001698  50E6               	movf	postinc1,w,c
 14692   00169A  0A80               	xorlw	128
 14693   00169C  6F77               	movwf	(??_fputc+4)& (0+255),b
 14694   00169E  50DE               	movf	postinc2,w,c
 14695   0016A0  0A80               	xorlw	128
 14696   0016A2  5977               	subwfb	(??_fputc+4)& (0+255),w,b
 14697   0016A4  B0D8               	btfsc	status,0,c
 14698   0016A6  EF57  F00B         	goto	u5081
 14699   0016AA  EF59  F00B         	goto	u5080
 14700   0016AE                     u5081:
 14701   0016AE  EF79  F00B         	goto	l3134
 14702   0016B2                     u5080:
 14703   0016B2                     l7646:
 14704                           
 14705                           ; BSR set to: 0
 14706   0016B2  5172               	movf	fputc@fp& (0+255),w,b
 14707   0016B4  6ED9               	movwf	fsr2l,c
 14708   0016B6  6ADA               	clrf	fsr2h,c
 14709   0016B8  0E02               	movlw	2
 14710   0016BA  26D9               	addwf	fsr2l,f,c
 14711   0016BC  CFDE F073          	movff	postinc2,??_fputc
 14712   0016C0  CFDD F074          	movff	postdec2,??_fputc+1
 14713   0016C4  5172               	movf	fputc@fp& (0+255),w,b
 14714   0016C6  6ED9               	movwf	fsr2l,c
 14715   0016C8  6ADA               	clrf	fsr2h,c
 14716   0016CA  CFDE F075          	movff	postinc2,??_fputc+2
 14717   0016CE  CFDD F076          	movff	postdec2,??_fputc+3
 14718   0016D2  5173               	movf	??_fputc& (0+255),w,b
 14719   0016D4  2575               	addwf	(??_fputc+2)& (0+255),w,b
 14720   0016D6  6ED9               	movwf	fsr2l,c
 14721   0016D8  5174               	movf	(??_fputc+1)& (0+255),w,b
 14722   0016DA  2176               	addwfc	(??_fputc+3)& (0+255),w,b
 14723   0016DC  6EDA               	movwf	fsr2h,c
 14724   0016DE  C070  FFDF         	movff	fputc@c,indf2
 14725   0016E2  5172               	movf	fputc@fp& (0+255),w,b
 14726   0016E4  6ED9               	movwf	fsr2l,c
 14727   0016E6  6ADA               	clrf	fsr2h,c
 14728   0016E8  0E02               	movlw	2
 14729   0016EA  26D9               	addwf	fsr2l,f,c
 14730   0016EC  2ADE               	incf	postinc2,f,c
 14731   0016EE  0E00               	movlw	0
 14732   0016F0  22DD               	addwfc	postdec2,f,c
 14733   0016F2                     l3134:
 14734   0016F2  0012               	return		;funcret
 14735   0016F4                     __end_of_fputc:
 14736                           	callstack 0
 14737                           
 14738 ;; *************** function _putch *****************
 14739 ;; Defined at:
 14740 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 14741 ;; Parameters:    Size  Location     Type
 14742 ;;  txData          1    wreg     unsigned char 
 14743 ;; Auto vars:     Size  Location     Type
 14744 ;;  txData          1   15[BANK0 ] unsigned char 
 14745 ;; Return value:  Size  Location     Type
 14746 ;;                  1    wreg      void 
 14747 ;; Registers used:
 14748 ;;		wreg, status,2, cstack
 14749 ;; Tracked objects:
 14750 ;;		On entry : 0/0
 14751 ;;		On exit  : 0/0
 14752 ;;		Unchanged: 0/0
 14753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14755 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14757 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14758 ;;Total ram usage:        1 bytes
 14759 ;; Hardware stack levels used: 1
 14760 ;; Hardware stack levels required when called: 14
 14761 ;; This function calls:
 14762 ;;		_EUSART1_Write
 14763 ;; This function is called by:
 14764 ;;		_fputc
 14765 ;; This function uses a non-reentrant model
 14766 ;;
 14767                           
 14768                           	psect	text61
 14769   0029DC                     __ptext61:
 14770                           	callstack 0
 14771   0029DC                     _putch:
 14772                           	callstack 9
 14773                           
 14774                           ;incstack = 0
 14775                           ;putch@txData stored from wreg
 14776   0029DC  0100               	movlb	0	; () banked
 14777   0029DE  6F6F               	movwf	putch@txData& (0+255),b
 14778   0029E0                     
 14779                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 14780   0029E0  0100               	movlb	0	; () banked
 14781   0029E2  516F               	movf	putch@txData& (0+255),w,b
 14782   0029E4  EC8A  F014         	call	_EUSART1_Write
 14783   0029E8  0012               	return		;funcret
 14784   0029EA                     __end_of_putch:
 14785                           	callstack 0
 14786                           
 14787 ;; *************** function _EUSART1_Write *****************
 14788 ;; Defined at:
 14789 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 14790 ;; Parameters:    Size  Location     Type
 14791 ;;  txData          1    wreg     unsigned char 
 14792 ;; Auto vars:     Size  Location     Type
 14793 ;;  txData          1   14[BANK0 ] unsigned char 
 14794 ;; Return value:  Size  Location     Type
 14795 ;;                  1    wreg      void 
 14796 ;; Registers used:
 14797 ;;		wreg
 14798 ;; Tracked objects:
 14799 ;;		On entry : 0/0
 14800 ;;		On exit  : 0/0
 14801 ;;		Unchanged: 0/0
 14802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14804 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14806 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14807 ;;Total ram usage:        1 bytes
 14808 ;; Hardware stack levels used: 1
 14809 ;; Hardware stack levels required when called: 13
 14810 ;; This function calls:
 14811 ;;		Nothing
 14812 ;; This function is called by:
 14813 ;;		_putch
 14814 ;; This function uses a non-reentrant model
 14815 ;;
 14816                           
 14817                           	psect	text62
 14818   002914                     __ptext62:
 14819                           	callstack 0
 14820   002914                     _EUSART1_Write:
 14821                           	callstack 9
 14822                           
 14823                           ;incstack = 0
 14824                           ;EUSART1_Write@txData stored from wreg
 14825   002914  0100               	movlb	0	; () banked
 14826   002916  6F6E               	movwf	EUSART1_Write@txData& (0+255),b
 14827   002918                     l1922:
 14828                           
 14829                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR3bits.TX1IF)
 14830   002918  010E               	movlb	14	; () banked
 14831   00291A  A9CD               	btfss	205,4,b	;volatile
 14832   00291C  EF92  F014         	goto	u5031
 14833   002920  EF94  F014         	goto	u5030
 14834   002924                     u5031:
 14835   002924  EF8C  F014         	goto	l1922
 14836   002928                     u5030:
 14837   002928                     
 14838                           ; BSR set to: 14
 14839                           ;mcc_generated_files/eusart1.c: 138:     TX1REG = txData;
 14840   002928  C06E  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 14841   00292C                     
 14842                           ; BSR set to: 14
 14843   00292C  0012               	return		;funcret
 14844   00292E                     __end_of_EUSART1_Write:
 14845                           	callstack 0
 14846                           
 14847 ;; *************** function _abs *****************
 14848 ;; Defined at:
 14849 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 14850 ;; Parameters:    Size  Location     Type
 14851 ;;  a               2   24[BANK0 ] int 
 14852 ;; Auto vars:     Size  Location     Type
 14853 ;;		None
 14854 ;; Return value:  Size  Location     Type
 14855 ;;                  2   24[BANK0 ] int 
 14856 ;; Registers used:
 14857 ;;		wreg, status,2, status,0
 14858 ;; Tracked objects:
 14859 ;;		On entry : 0/0
 14860 ;;		On exit  : 0/0
 14861 ;;		Unchanged: 0/0
 14862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14863 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14865 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14866 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14867 ;;Total ram usage:        4 bytes
 14868 ;; Hardware stack levels used: 1
 14869 ;; Hardware stack levels required when called: 13
 14870 ;; This function calls:
 14871 ;;		Nothing
 14872 ;; This function is called by:
 14873 ;;		_dtoa
 14874 ;; This function uses a non-reentrant model
 14875 ;;
 14876                           
 14877                           	psect	text63
 14878   002562                     __ptext63:
 14879                           	callstack 0
 14880   002562                     _abs:
 14881                           	callstack 13
 14882   002562  0100               	movlb	0	; () banked
 14883   002564  BF79               	btfsc	(abs@a+1)& (0+255),7,b
 14884   002566  EFB7  F012         	goto	u5491
 14885   00256A  EFB9  F012         	goto	u5490
 14886   00256E                     u5491:
 14887   00256E  EFBF  F012         	goto	l3119
 14888   002572                     u5490:
 14889   002572                     
 14890                           ; BSR set to: 0
 14891   002572  C078  F078         	movff	abs@a,?_abs
 14892   002576  C079  F079         	movff	abs@a+1,?_abs+1
 14893   00257A  EFCB  F012         	goto	l3122
 14894   00257E                     l3119:
 14895                           
 14896                           ; BSR set to: 0
 14897   00257E  C078  F07A         	movff	abs@a,??_abs
 14898   002582  C079  F07B         	movff	abs@a+1,??_abs+1
 14899   002586  1F7A               	comf	??_abs& (0+255),f,b
 14900   002588  1F7B               	comf	(??_abs+1)& (0+255),f,b
 14901   00258A  4B7A               	infsnz	??_abs& (0+255),f,b
 14902   00258C  2B7B               	incf	(??_abs+1)& (0+255),f,b
 14903   00258E  C07A  F078         	movff	??_abs,?_abs
 14904   002592  C07B  F079         	movff	??_abs+1,?_abs+1
 14905   002596                     l3122:
 14906                           
 14907                           ; BSR set to: 0
 14908   002596  0012               	return		;funcret
 14909   002598                     __end_of_abs:
 14910                           	callstack 0
 14911                           
 14912 ;; *************** function ___almod *****************
 14913 ;; Defined at:
 14914 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\almod.c"
 14915 ;; Parameters:    Size  Location     Type
 14916 ;;  dividend        4   14[BANK0 ] long 
 14917 ;;  divisor         4   18[BANK0 ] long 
 14918 ;; Auto vars:     Size  Location     Type
 14919 ;;  sign            1   23[BANK0 ] unsigned char 
 14920 ;;  counter         1   22[BANK0 ] unsigned char 
 14921 ;; Return value:  Size  Location     Type
 14922 ;;                  4   14[BANK0 ] long 
 14923 ;; Registers used:
 14924 ;;		wreg, status,2, status,0
 14925 ;; Tracked objects:
 14926 ;;		On entry : 0/0
 14927 ;;		On exit  : 0/0
 14928 ;;		Unchanged: 0/0
 14929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14930 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14931 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14933 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14934 ;;Total ram usage:       10 bytes
 14935 ;; Hardware stack levels used: 1
 14936 ;; Hardware stack levels required when called: 13
 14937 ;; This function calls:
 14938 ;;		Nothing
 14939 ;; This function is called by:
 14940 ;;		_dtoa
 14941 ;;		___secs_to_tm
 14942 ;; This function uses a non-reentrant model
 14943 ;;
 14944                           
 14945                           	psect	text64
 14946   001462                     __ptext64:
 14947                           	callstack 0
 14948   001462                     ___almod:
 14949                           	callstack 13
 14950   001462  0100               	movlb	0	; () banked
 14951   001464  6B77               	clrf	___almod@sign& (0+255),b
 14952   001466                     
 14953                           ; BSR set to: 0
 14954   001466  BF71               	btfsc	(___almod@dividend+3)& (0+255),7,b
 14955   001468  EF3A  F00A         	goto	u5380
 14956   00146C  EF38  F00A         	goto	u5381
 14957   001470                     u5381:
 14958   001470  EF44  F00A         	goto	l7854
 14959   001474                     u5380:
 14960   001474                     
 14961                           ; BSR set to: 0
 14962   001474  1F71               	comf	(___almod@dividend+3)& (0+255),f,b
 14963   001476  1F70               	comf	(___almod@dividend+2)& (0+255),f,b
 14964   001478  1F6F               	comf	(___almod@dividend+1)& (0+255),f,b
 14965   00147A  6D6E               	negf	___almod@dividend& (0+255),b
 14966   00147C  0E00               	movlw	0
 14967   00147E  236F               	addwfc	(___almod@dividend+1)& (0+255),f,b
 14968   001480  2370               	addwfc	(___almod@dividend+2)& (0+255),f,b
 14969   001482  2371               	addwfc	(___almod@dividend+3)& (0+255),f,b
 14970   001484                     
 14971                           ; BSR set to: 0
 14972   001484  0E01               	movlw	1
 14973   001486  6F77               	movwf	___almod@sign& (0+255),b
 14974   001488                     l7854:
 14975                           
 14976                           ; BSR set to: 0
 14977   001488  BF75               	btfsc	(___almod@divisor+3)& (0+255),7,b
 14978   00148A  EF4B  F00A         	goto	u5390
 14979   00148E  EF49  F00A         	goto	u5391
 14980   001492                     u5391:
 14981   001492  EF53  F00A         	goto	l7858
 14982   001496                     u5390:
 14983   001496                     
 14984                           ; BSR set to: 0
 14985   001496  1F75               	comf	(___almod@divisor+3)& (0+255),f,b
 14986   001498  1F74               	comf	(___almod@divisor+2)& (0+255),f,b
 14987   00149A  1F73               	comf	(___almod@divisor+1)& (0+255),f,b
 14988   00149C  6D72               	negf	___almod@divisor& (0+255),b
 14989   00149E  0E00               	movlw	0
 14990   0014A0  2373               	addwfc	(___almod@divisor+1)& (0+255),f,b
 14991   0014A2  2374               	addwfc	(___almod@divisor+2)& (0+255),f,b
 14992   0014A4  2375               	addwfc	(___almod@divisor+3)& (0+255),f,b
 14993   0014A6                     l7858:
 14994                           
 14995                           ; BSR set to: 0
 14996   0014A6  5172               	movf	___almod@divisor& (0+255),w,b
 14997   0014A8  1173               	iorwf	(___almod@divisor+1)& (0+255),w,b
 14998   0014AA  1174               	iorwf	(___almod@divisor+2)& (0+255),w,b
 14999   0014AC  1175               	iorwf	(___almod@divisor+3)& (0+255),w,b
 15000   0014AE  B4D8               	btfsc	status,2,c
 15001   0014B0  EF5C  F00A         	goto	u5401
 15002   0014B4  EF5E  F00A         	goto	u5400
 15003   0014B8                     u5401:
 15004   0014B8  EF8E  F00A         	goto	l7874
 15005   0014BC                     u5400:
 15006   0014BC                     
 15007                           ; BSR set to: 0
 15008   0014BC  0E01               	movlw	1
 15009   0014BE  6F76               	movwf	___almod@counter& (0+255),b
 15010   0014C0  EF68  F00A         	goto	l7864
 15011   0014C4                     l7862:
 15012                           
 15013                           ; BSR set to: 0
 15014   0014C4  90D8               	bcf	status,0,c
 15015   0014C6  3772               	rlcf	___almod@divisor& (0+255),f,b
 15016   0014C8  3773               	rlcf	(___almod@divisor+1)& (0+255),f,b
 15017   0014CA  3774               	rlcf	(___almod@divisor+2)& (0+255),f,b
 15018   0014CC  3775               	rlcf	(___almod@divisor+3)& (0+255),f,b
 15019   0014CE  2B76               	incf	___almod@counter& (0+255),f,b
 15020   0014D0                     l7864:
 15021                           
 15022                           ; BSR set to: 0
 15023   0014D0  AF75               	btfss	(___almod@divisor+3)& (0+255),7,b
 15024   0014D2  EF6D  F00A         	goto	u5411
 15025   0014D6  EF6F  F00A         	goto	u5410
 15026   0014DA                     u5411:
 15027   0014DA  EF62  F00A         	goto	l7862
 15028   0014DE                     u5410:
 15029   0014DE                     l7866:
 15030                           
 15031                           ; BSR set to: 0
 15032   0014DE  5172               	movf	___almod@divisor& (0+255),w,b
 15033   0014E0  5D6E               	subwf	___almod@dividend& (0+255),w,b
 15034   0014E2  5173               	movf	(___almod@divisor+1)& (0+255),w,b
 15035   0014E4  596F               	subwfb	(___almod@dividend+1)& (0+255),w,b
 15036   0014E6  5174               	movf	(___almod@divisor+2)& (0+255),w,b
 15037   0014E8  5970               	subwfb	(___almod@dividend+2)& (0+255),w,b
 15038   0014EA  5175               	movf	(___almod@divisor+3)& (0+255),w,b
 15039   0014EC  5971               	subwfb	(___almod@dividend+3)& (0+255),w,b
 15040   0014EE  A0D8               	btfss	status,0,c
 15041   0014F0  EF7C  F00A         	goto	u5421
 15042   0014F4  EF7E  F00A         	goto	u5420
 15043   0014F8                     u5421:
 15044   0014F8  EF86  F00A         	goto	l7870
 15045   0014FC                     u5420:
 15046   0014FC                     
 15047                           ; BSR set to: 0
 15048   0014FC  5172               	movf	___almod@divisor& (0+255),w,b
 15049   0014FE  5F6E               	subwf	___almod@dividend& (0+255),f,b
 15050   001500  5173               	movf	(___almod@divisor+1)& (0+255),w,b
 15051   001502  5B6F               	subwfb	(___almod@dividend+1)& (0+255),f,b
 15052   001504  5174               	movf	(___almod@divisor+2)& (0+255),w,b
 15053   001506  5B70               	subwfb	(___almod@dividend+2)& (0+255),f,b
 15054   001508  5175               	movf	(___almod@divisor+3)& (0+255),w,b
 15055   00150A  5B71               	subwfb	(___almod@dividend+3)& (0+255),f,b
 15056   00150C                     l7870:
 15057                           
 15058                           ; BSR set to: 0
 15059   00150C  90D8               	bcf	status,0,c
 15060   00150E  3375               	rrcf	(___almod@divisor+3)& (0+255),f,b
 15061   001510  3374               	rrcf	(___almod@divisor+2)& (0+255),f,b
 15062   001512  3373               	rrcf	(___almod@divisor+1)& (0+255),f,b
 15063   001514  3372               	rrcf	___almod@divisor& (0+255),f,b
 15064   001516                     
 15065                           ; BSR set to: 0
 15066   001516  2F76               	decfsz	___almod@counter& (0+255),f,b
 15067   001518  EF6F  F00A         	goto	l7866
 15068   00151C                     l7874:
 15069                           
 15070                           ; BSR set to: 0
 15071   00151C  5177               	movf	___almod@sign& (0+255),w,b
 15072   00151E  B4D8               	btfsc	status,2,c
 15073   001520  EF94  F00A         	goto	u5431
 15074   001524  EF96  F00A         	goto	u5430
 15075   001528                     u5431:
 15076   001528  EF9E  F00A         	goto	l7878
 15077   00152C                     u5430:
 15078   00152C                     
 15079                           ; BSR set to: 0
 15080   00152C  1F71               	comf	(___almod@dividend+3)& (0+255),f,b
 15081   00152E  1F70               	comf	(___almod@dividend+2)& (0+255),f,b
 15082   001530  1F6F               	comf	(___almod@dividend+1)& (0+255),f,b
 15083   001532  6D6E               	negf	___almod@dividend& (0+255),b
 15084   001534  0E00               	movlw	0
 15085   001536  236F               	addwfc	(___almod@dividend+1)& (0+255),f,b
 15086   001538  2370               	addwfc	(___almod@dividend+2)& (0+255),f,b
 15087   00153A  2371               	addwfc	(___almod@dividend+3)& (0+255),f,b
 15088   00153C                     l7878:
 15089                           
 15090                           ; BSR set to: 0
 15091   00153C  C06E  F06E         	movff	___almod@dividend,?___almod
 15092   001540  C06F  F06F         	movff	___almod@dividend+1,?___almod+1
 15093   001544  C070  F070         	movff	___almod@dividend+2,?___almod+2
 15094   001548  C071  F071         	movff	___almod@dividend+3,?___almod+3
 15095   00154C                     
 15096                           ; BSR set to: 0
 15097   00154C  0012               	return		;funcret
 15098   00154E                     __end_of___almod:
 15099                           	callstack 0
 15100                           
 15101 ;; *************** function ___aldiv *****************
 15102 ;; Defined at:
 15103 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
 15104 ;; Parameters:    Size  Location     Type
 15105 ;;  dividend        4   14[BANK0 ] long 
 15106 ;;  divisor         4   18[BANK0 ] long 
 15107 ;; Auto vars:     Size  Location     Type
 15108 ;;  quotient        4   24[BANK0 ] long 
 15109 ;;  sign            1   23[BANK0 ] unsigned char 
 15110 ;;  counter         1   22[BANK0 ] unsigned char 
 15111 ;; Return value:  Size  Location     Type
 15112 ;;                  4   14[BANK0 ] long 
 15113 ;; Registers used:
 15114 ;;		wreg, status,2, status,0
 15115 ;; Tracked objects:
 15116 ;;		On entry : 0/0
 15117 ;;		On exit  : 0/0
 15118 ;;		Unchanged: 0/0
 15119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15120 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15121 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15123 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15124 ;;Total ram usage:       14 bytes
 15125 ;; Hardware stack levels used: 1
 15126 ;; Hardware stack levels required when called: 13
 15127 ;; This function calls:
 15128 ;;		Nothing
 15129 ;; This function is called by:
 15130 ;;		_dtoa
 15131 ;;		___secs_to_tm
 15132 ;; This function uses a non-reentrant model
 15133 ;;
 15134                           
 15135                           	psect	text65
 15136   00114A                     __ptext65:
 15137                           	callstack 0
 15138   00114A                     ___aldiv:
 15139                           	callstack 13
 15140   00114A  0100               	movlb	0	; () banked
 15141   00114C  6B77               	clrf	___aldiv@sign& (0+255),b
 15142   00114E                     
 15143                           ; BSR set to: 0
 15144   00114E  BF75               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
 15145   001150  EFAE  F008         	goto	u5320
 15146   001154  EFAC  F008         	goto	u5321
 15147   001158                     u5321:
 15148   001158  EFB8  F008         	goto	l7810
 15149   00115C                     u5320:
 15150   00115C                     
 15151                           ; BSR set to: 0
 15152   00115C  1F75               	comf	(___aldiv@divisor+3)& (0+255),f,b
 15153   00115E  1F74               	comf	(___aldiv@divisor+2)& (0+255),f,b
 15154   001160  1F73               	comf	(___aldiv@divisor+1)& (0+255),f,b
 15155   001162  6D72               	negf	___aldiv@divisor& (0+255),b
 15156   001164  0E00               	movlw	0
 15157   001166  2373               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 15158   001168  2374               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 15159   00116A  2375               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 15160   00116C                     
 15161                           ; BSR set to: 0
 15162   00116C  0E01               	movlw	1
 15163   00116E  6F77               	movwf	___aldiv@sign& (0+255),b
 15164   001170                     l7810:
 15165                           
 15166                           ; BSR set to: 0
 15167   001170  BF71               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
 15168   001172  EFBF  F008         	goto	u5330
 15169   001176  EFBD  F008         	goto	u5331
 15170   00117A                     u5331:
 15171   00117A  EFC9  F008         	goto	l7816
 15172   00117E                     u5330:
 15173   00117E                     
 15174                           ; BSR set to: 0
 15175   00117E  1F71               	comf	(___aldiv@dividend+3)& (0+255),f,b
 15176   001180  1F70               	comf	(___aldiv@dividend+2)& (0+255),f,b
 15177   001182  1F6F               	comf	(___aldiv@dividend+1)& (0+255),f,b
 15178   001184  6D6E               	negf	___aldiv@dividend& (0+255),b
 15179   001186  0E00               	movlw	0
 15180   001188  236F               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 15181   00118A  2370               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 15182   00118C  2371               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 15183   00118E                     
 15184                           ; BSR set to: 0
 15185   00118E  0E01               	movlw	1
 15186   001190  1B77               	xorwf	___aldiv@sign& (0+255),f,b
 15187   001192                     l7816:
 15188                           
 15189                           ; BSR set to: 0
 15190   001192  0E00               	movlw	0
 15191   001194  6F78               	movwf	___aldiv@quotient& (0+255),b
 15192   001196  0E00               	movlw	0
 15193   001198  6F79               	movwf	(___aldiv@quotient+1)& (0+255),b
 15194   00119A  0E00               	movlw	0
 15195   00119C  6F7A               	movwf	(___aldiv@quotient+2)& (0+255),b
 15196   00119E  0E00               	movlw	0
 15197   0011A0  6F7B               	movwf	(___aldiv@quotient+3)& (0+255),b
 15198   0011A2                     
 15199                           ; BSR set to: 0
 15200   0011A2  5172               	movf	___aldiv@divisor& (0+255),w,b
 15201   0011A4  1173               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 15202   0011A6  1174               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 15203   0011A8  1175               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 15204   0011AA  B4D8               	btfsc	status,2,c
 15205   0011AC  EFDA  F008         	goto	u5341
 15206   0011B0  EFDC  F008         	goto	u5340
 15207   0011B4                     u5341:
 15208   0011B4  EF12  F009         	goto	l7838
 15209   0011B8                     u5340:
 15210   0011B8                     
 15211                           ; BSR set to: 0
 15212   0011B8  0E01               	movlw	1
 15213   0011BA  6F76               	movwf	___aldiv@counter& (0+255),b
 15214   0011BC  EFE6  F008         	goto	l7824
 15215   0011C0                     l7822:
 15216                           
 15217                           ; BSR set to: 0
 15218   0011C0  90D8               	bcf	status,0,c
 15219   0011C2  3772               	rlcf	___aldiv@divisor& (0+255),f,b
 15220   0011C4  3773               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 15221   0011C6  3774               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 15222   0011C8  3775               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 15223   0011CA  2B76               	incf	___aldiv@counter& (0+255),f,b
 15224   0011CC                     l7824:
 15225                           
 15226                           ; BSR set to: 0
 15227   0011CC  AF75               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 15228   0011CE  EFEB  F008         	goto	u5351
 15229   0011D2  EFED  F008         	goto	u5350
 15230   0011D6                     u5351:
 15231   0011D6  EFE0  F008         	goto	l7822
 15232   0011DA                     u5350:
 15233   0011DA                     l7826:
 15234                           
 15235                           ; BSR set to: 0
 15236   0011DA  90D8               	bcf	status,0,c
 15237   0011DC  3778               	rlcf	___aldiv@quotient& (0+255),f,b
 15238   0011DE  3779               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 15239   0011E0  377A               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 15240   0011E2  377B               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 15241   0011E4                     
 15242                           ; BSR set to: 0
 15243   0011E4  5172               	movf	___aldiv@divisor& (0+255),w,b
 15244   0011E6  5D6E               	subwf	___aldiv@dividend& (0+255),w,b
 15245   0011E8  5173               	movf	(___aldiv@divisor+1)& (0+255),w,b
 15246   0011EA  596F               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 15247   0011EC  5174               	movf	(___aldiv@divisor+2)& (0+255),w,b
 15248   0011EE  5970               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 15249   0011F0  5175               	movf	(___aldiv@divisor+3)& (0+255),w,b
 15250   0011F2  5971               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 15251   0011F4  A0D8               	btfss	status,0,c
 15252   0011F6  EFFF  F008         	goto	u5361
 15253   0011FA  EF01  F009         	goto	u5360
 15254   0011FE                     u5361:
 15255   0011FE  EF0A  F009         	goto	l7834
 15256   001202                     u5360:
 15257   001202                     
 15258                           ; BSR set to: 0
 15259   001202  5172               	movf	___aldiv@divisor& (0+255),w,b
 15260   001204  5F6E               	subwf	___aldiv@dividend& (0+255),f,b
 15261   001206  5173               	movf	(___aldiv@divisor+1)& (0+255),w,b
 15262   001208  5B6F               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 15263   00120A  5174               	movf	(___aldiv@divisor+2)& (0+255),w,b
 15264   00120C  5B70               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 15265   00120E  5175               	movf	(___aldiv@divisor+3)& (0+255),w,b
 15266   001210  5B71               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 15267   001212                     
 15268                           ; BSR set to: 0
 15269   001212  8178               	bsf	___aldiv@quotient& (0+255),0,b
 15270   001214                     l7834:
 15271                           
 15272                           ; BSR set to: 0
 15273   001214  90D8               	bcf	status,0,c
 15274   001216  3375               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 15275   001218  3374               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 15276   00121A  3373               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 15277   00121C  3372               	rrcf	___aldiv@divisor& (0+255),f,b
 15278   00121E                     
 15279                           ; BSR set to: 0
 15280   00121E  2F76               	decfsz	___aldiv@counter& (0+255),f,b
 15281   001220  EFED  F008         	goto	l7826
 15282   001224                     l7838:
 15283                           
 15284                           ; BSR set to: 0
 15285   001224  5177               	movf	___aldiv@sign& (0+255),w,b
 15286   001226  B4D8               	btfsc	status,2,c
 15287   001228  EF18  F009         	goto	u5371
 15288   00122C  EF1A  F009         	goto	u5370
 15289   001230                     u5371:
 15290   001230  EF22  F009         	goto	l7842
 15291   001234                     u5370:
 15292   001234                     
 15293                           ; BSR set to: 0
 15294   001234  1F7B               	comf	(___aldiv@quotient+3)& (0+255),f,b
 15295   001236  1F7A               	comf	(___aldiv@quotient+2)& (0+255),f,b
 15296   001238  1F79               	comf	(___aldiv@quotient+1)& (0+255),f,b
 15297   00123A  6D78               	negf	___aldiv@quotient& (0+255),b
 15298   00123C  0E00               	movlw	0
 15299   00123E  2379               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 15300   001240  237A               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 15301   001242  237B               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 15302   001244                     l7842:
 15303                           
 15304                           ; BSR set to: 0
 15305   001244  C078  F06E         	movff	___aldiv@quotient,?___aldiv
 15306   001248  C079  F06F         	movff	___aldiv@quotient+1,?___aldiv+1
 15307   00124C  C07A  F070         	movff	___aldiv@quotient+2,?___aldiv+2
 15308   001250  C07B  F071         	movff	___aldiv@quotient+3,?___aldiv+3
 15309   001254                     
 15310                           ; BSR set to: 0
 15311   001254  0012               	return		;funcret
 15312   001256                     __end_of___aldiv:
 15313                           	callstack 0
 15314                           
 15315 ;; *************** function _ADCC_StartConversion *****************
 15316 ;; Defined at:
 15317 ;;		line 107 in file "mcc_generated_files/adcc.c"
 15318 ;; Parameters:    Size  Location     Type
 15319 ;;  channel         1    wreg     enum E9576
 15320 ;; Auto vars:     Size  Location     Type
 15321 ;;  channel         1   14[BANK0 ] enum E9576
 15322 ;; Return value:  Size  Location     Type
 15323 ;;                  1    wreg      void 
 15324 ;; Registers used:
 15325 ;;		wreg
 15326 ;; Tracked objects:
 15327 ;;		On entry : 0/0
 15328 ;;		On exit  : 0/0
 15329 ;;		Unchanged: 0/0
 15330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15332 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15334 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15335 ;;Total ram usage:        1 bytes
 15336 ;; Hardware stack levels used: 1
 15337 ;; Hardware stack levels required when called: 13
 15338 ;; This function calls:
 15339 ;;		Nothing
 15340 ;; This function is called by:
 15341 ;;		_ReadADCChannels
 15342 ;; This function uses a non-reentrant model
 15343 ;;
 15344                           
 15345                           	psect	text66
 15346   0029EA                     __ptext66:
 15347                           	callstack 0
 15348   0029EA                     _ADCC_StartConversion:
 15349                           	callstack 16
 15350                           
 15351                           ; BSR set to: 0
 15352                           ;incstack = 0
 15353                           ;ADCC_StartConversion@channel stored from wreg
 15354   0029EA  0100               	movlb	0	; () banked
 15355   0029EC  6F6E               	movwf	ADCC_StartConversion@channel& (0+255),b
 15356   0029EE                     
 15357                           ;mcc_generated_files/adcc.c: 107: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 108: {;mcc_generated_files/adcc.c: 110:     ADPCH = channel;
 15358   0029EE  C06E  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 15359   0029F2                     
 15360                           ;mcc_generated_files/adcc.c: 113:     ADCON0bits.ADON = 1;
 15361   0029F2  8E60               	bsf	96,7,c	;volatile
 15362   0029F4                     
 15363                           ;mcc_generated_files/adcc.c: 116:     ADCON0bits.ADGO = 1;
 15364   0029F4  8060               	bsf	96,0,c	;volatile
 15365   0029F6  0012               	return		;funcret
 15366   0029F8                     __end_of_ADCC_StartConversion:
 15367                           	callstack 0
 15368                           
 15369 ;; *************** function _ADCC_IsConversionDone *****************
 15370 ;; Defined at:
 15371 ;;		line 119 in file "mcc_generated_files/adcc.c"
 15372 ;; Parameters:    Size  Location     Type
 15373 ;;		None
 15374 ;; Auto vars:     Size  Location     Type
 15375 ;;		None
 15376 ;; Return value:  Size  Location     Type
 15377 ;;                  1    wreg      _Bool 
 15378 ;; Registers used:
 15379 ;;		wreg
 15380 ;; Tracked objects:
 15381 ;;		On entry : 0/0
 15382 ;;		On exit  : 0/0
 15383 ;;		Unchanged: 0/0
 15384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15389 ;;Total ram usage:        0 bytes
 15390 ;; Hardware stack levels used: 1
 15391 ;; Hardware stack levels required when called: 13
 15392 ;; This function calls:
 15393 ;;		Nothing
 15394 ;; This function is called by:
 15395 ;;		_ReadADCChannels
 15396 ;; This function uses a non-reentrant model
 15397 ;;
 15398                           
 15399                           	psect	text67
 15400   002974                     __ptext67:
 15401                           	callstack 0
 15402   002974                     _ADCC_IsConversionDone:
 15403                           	callstack 16
 15404   002974                     
 15405                           ;mcc_generated_files/adcc.c: 122:     return ((unsigned char)(!ADCON0bits.ADGO));
 15406   002974  A060               	btfss	96,0,c	;volatile
 15407   002976  EFBF  F014         	goto	u7031
 15408   00297A  EFC2  F014         	goto	u7030
 15409   00297E                     u7031:
 15410   00297E  0E01               	movlw	1
 15411   002980  EFC3  F014         	goto	u7040
 15412   002984                     u7030:
 15413   002984  0E00               	movlw	0
 15414   002986                     u7040:
 15415   002986  0012               	return		;funcret
 15416   002988                     __end_of_ADCC_IsConversionDone:
 15417                           	callstack 0
 15418                           
 15419 ;; *************** function _ADCC_GetConversionResult *****************
 15420 ;; Defined at:
 15421 ;;		line 125 in file "mcc_generated_files/adcc.c"
 15422 ;; Parameters:    Size  Location     Type
 15423 ;;		None
 15424 ;; Auto vars:     Size  Location     Type
 15425 ;;		None
 15426 ;; Return value:  Size  Location     Type
 15427 ;;                  2   14[BANK0 ] unsigned short 
 15428 ;; Registers used:
 15429 ;;		wreg, status,2, status,0
 15430 ;; Tracked objects:
 15431 ;;		On entry : 0/0
 15432 ;;		On exit  : 0/0
 15433 ;;		Unchanged: 0/0
 15434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15435 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15437 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15438 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15439 ;;Total ram usage:        4 bytes
 15440 ;; Hardware stack levels used: 1
 15441 ;; Hardware stack levels required when called: 13
 15442 ;; This function calls:
 15443 ;;		Nothing
 15444 ;; This function is called by:
 15445 ;;		_ReadADCChannels
 15446 ;; This function uses a non-reentrant model
 15447 ;;
 15448                           
 15449                           	psect	text68
 15450   00295E                     __ptext68:
 15451                           	callstack 0
 15452   00295E                     _ADCC_GetConversionResult:
 15453                           	callstack 16
 15454   00295E                     
 15455                           ;mcc_generated_files/adcc.c: 128:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 15456   00295E  5064               	movf	100,w,c	;volatile
 15457   002960  0100               	movlb	0	; () banked
 15458   002962  6F71               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),b
 15459   002964  6B70               	clrf	??_ADCC_GetConversionResult& (0+255),b
 15460   002966  5063               	movf	99,w,c	;volatile
 15461   002968  2570               	addwf	??_ADCC_GetConversionResult& (0+255),w,b
 15462   00296A  6F6E               	movwf	?_ADCC_GetConversionResult& (0+255),b
 15463   00296C  0E00               	movlw	0
 15464   00296E  2171               	addwfc	(??_ADCC_GetConversionResult+1)& (0+255),w,b
 15465   002970  6F6F               	movwf	(?_ADCC_GetConversionResult+1)& (0+255),b
 15466   002972                     
 15467                           ; BSR set to: 0
 15468   002972  0012               	return		;funcret
 15469   002974                     __end_of_ADCC_GetConversionResult:
 15470                           	callstack 0
 15471                           
 15472 ;; *************** function _INTERRUPT_InterruptManager *****************
 15473 ;; Defined at:
 15474 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 15475 ;; Parameters:    Size  Location     Type
 15476 ;;		None
 15477 ;; Auto vars:     Size  Location     Type
 15478 ;;		None
 15479 ;; Return value:  Size  Location     Type
 15480 ;;                  1    wreg      void 
 15481 ;; Registers used:
 15482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 15483 ;; Tracked objects:
 15484 ;;		On entry : 0/0
 15485 ;;		On exit  : 0/0
 15486 ;;		Unchanged: 0/0
 15487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15490 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15491 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15492 ;;Total ram usage:       14 bytes
 15493 ;; Hardware stack levels used: 1
 15494 ;; Hardware stack levels required when called: 12
 15495 ;; This function calls:
 15496 ;;		_TMR0_ISR
 15497 ;;		_TMR1_ISR
 15498 ;; This function is called by:
 15499 ;;		Interrupt level 2
 15500 ;; This function uses a non-reentrant model
 15501 ;;
 15502                           
 15503                           	psect	intcode
 15504   000008                     __pintcode:
 15505                           	callstack 0
 15506   000008                     _INTERRUPT_InterruptManager:
 15507                           	callstack 6
 15508                           
 15509                           ; BSR set to: 0
 15510                           ;incstack = 0
 15511   000008  8254               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15512   00000A  CFFA F060          	movff	pclath,??_INTERRUPT_InterruptManager
 15513   00000E  CFFB F061          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 15514   000012  CFE9 F062          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 15515   000016  CFEA F063          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 15516   00001A  CFE1 F064          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 15517   00001E  CFE2 F065          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 15518   000022  CFD9 F066          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 15519   000026  CFDA F067          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 15520   00002A  CFF3 F068          	movff	prodl,??_INTERRUPT_InterruptManager+8
 15521   00002E  CFF4 F069          	movff	prodh,??_INTERRUPT_InterruptManager+9
 15522   000032  CFF6 F06A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 15523   000036  CFF7 F06B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 15524   00003A  CFF8 F06C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 15525   00003E  CFF5 F06D          	movff	tablat,??_INTERRUPT_InterruptManager+13
 15526   000042                     
 15527                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 15528   000042  010E               	movlb	14	; () banked
 15529   000044  ABC2               	btfss	194,5,b	;volatile
 15530   000046  EF27  F000         	goto	i2u1032_41
 15531   00004A  EF29  F000         	goto	i2u1032_40
 15532   00004E                     i2u1032_41:
 15533   00004E  EF34  F000         	goto	i2l2035
 15534   000052                     i2u1032_40:
 15535   000052                     
 15536                           ; BSR set to: 14
 15537   000052  ABCA               	btfss	202,5,b	;volatile
 15538   000054  EF2E  F000         	goto	i2u1033_41
 15539   000058  EF30  F000         	goto	i2u1033_40
 15540   00005C                     i2u1033_41:
 15541   00005C  EF34  F000         	goto	i2l2035
 15542   000060                     i2u1033_40:
 15543   000060                     
 15544                           ; BSR set to: 14
 15545                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 15546   000060  ECFF  F012         	call	_TMR0_ISR	;wreg free
 15547                           
 15548                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 15549   000064  EF4D  F000         	goto	i2l2041
 15550   000068                     i2l2035:
 15551                           
 15552                           ; BSR set to: 14
 15553   000068  ACF2               	btfss	242,6,c	;volatile
 15554   00006A  EF39  F000         	goto	i2u1034_41
 15555   00006E  EF3B  F000         	goto	i2u1034_40
 15556   000072                     i2u1034_41:
 15557   000072  EF4D  F000         	goto	i2l2041
 15558   000076                     i2u1034_40:
 15559   000076                     
 15560                           ; BSR set to: 14
 15561                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 15562   000076  A1C6               	btfss	198,0,b	;volatile
 15563   000078  EF40  F000         	goto	i2u1035_41
 15564   00007C  EF42  F000         	goto	i2u1035_40
 15565   000080                     i2u1035_41:
 15566   000080  EF4D  F000         	goto	i2l2040
 15567   000084                     i2u1035_40:
 15568   000084                     
 15569                           ; BSR set to: 14
 15570   000084  A1CE               	btfss	206,0,b	;volatile
 15571   000086  EF47  F000         	goto	i2u1036_41
 15572   00008A  EF49  F000         	goto	i2u1036_40
 15573   00008E                     i2u1036_41:
 15574   00008E  EF4D  F000         	goto	i2l2040
 15575   000092                     i2u1036_40:
 15576   000092                     
 15577                           ; BSR set to: 14
 15578                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR1_ISR();
 15579   000092  EC78  F012         	call	_TMR1_ISR	;wreg free
 15580                           
 15581                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 15582   000096  EF4D  F000         	goto	i2l2041
 15583   00009A                     i2l2040:
 15584   00009A                     i2l2041:
 15585   00009A  C06D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 15586   00009E  C06C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 15587   0000A2  C06B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 15588   0000A6  C06A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 15589   0000AA  C069  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 15590   0000AE  C068  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 15591   0000B2  C067  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 15592   0000B6  C066  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 15593   0000BA  C065  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 15594   0000BE  C064  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 15595   0000C2  C063  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 15596   0000C6  C062  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 15597   0000CA  C061  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 15598   0000CE  C060  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 15599   0000D2  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15600   0000D4  0011               	retfie		f
 15601   0000D6                     __end_of_INTERRUPT_InterruptManager:
 15602                           	callstack 0
 15603                           
 15604 ;; *************** function _TMR1_ISR *****************
 15605 ;; Defined at:
 15606 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 15607 ;; Parameters:    Size  Location     Type
 15608 ;;		None
 15609 ;; Auto vars:     Size  Location     Type
 15610 ;;		None
 15611 ;; Return value:  Size  Location     Type
 15612 ;;                  1    wreg      void 
 15613 ;; Registers used:
 15614 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 15615 ;; Tracked objects:
 15616 ;;		On entry : 0/0
 15617 ;;		On exit  : 0/0
 15618 ;;		Unchanged: 0/0
 15619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15624 ;;Total ram usage:        0 bytes
 15625 ;; Hardware stack levels used: 1
 15626 ;; Hardware stack levels required when called: 2
 15627 ;; This function calls:
 15628 ;;		_TMR1_CallBack
 15629 ;;		_TMR1_WriteTimer
 15630 ;; This function is called by:
 15631 ;;		_INTERRUPT_InterruptManager
 15632 ;; This function uses a non-reentrant model
 15633 ;;
 15634                           
 15635                           	psect	text70
 15636   0024F0                     __ptext70:
 15637                           	callstack 0
 15638   0024F0                     _TMR1_ISR:
 15639                           	callstack 15
 15640   0024F0                     
 15641                           ;mcc_generated_files/tmr1.c: 166:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr1.c: 169:     PIR4bits.TMR1IF = 0;
 15642   0024F0  010E               	movlb	14	; () banked
 15643   0024F2  91CE               	bcf	206,0,b	;volatile
 15644   0024F4                     
 15645                           ; BSR set to: 14
 15646                           ;mcc_generated_files/tmr1.c: 170:     TMR1_WriteTimer(timer1ReloadVal);
 15647   0024F4  C0C9  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 15648   0024F8  C0CA  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 15649   0024FC  ECAE  F013         	call	_TMR1_WriteTimer	;wreg free
 15650   002500                     
 15651                           ;mcc_generated_files/tmr1.c: 173:     if (++CountCallBack >= 25)
 15652   002500  0100               	movlb	0	; () banked
 15653   002502  4BC7               	infsnz	TMR1_ISR@CountCallBack& (0+255),f,b	;volatile
 15654   002504  2BC8               	incf	(TMR1_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 15655   002506  51C8               	movf	(TMR1_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 15656   002508  E109               	bnz	i2u736_40
 15657   00250A  0E19               	movlw	25
 15658   00250C  5DC7               	subwf	TMR1_ISR@CountCallBack& (0+255),w,b	;volatile
 15659   00250E  A0D8               	btfss	status,0,c
 15660   002510  EF8C  F012         	goto	i2u736_41
 15661   002514  EF8E  F012         	goto	i2u736_40
 15662   002518                     i2u736_41:
 15663   002518  EF95  F012         	goto	i2l363
 15664   00251C                     i2u736_40:
 15665   00251C                     
 15666                           ; BSR set to: 0
 15667                           ;mcc_generated_files/tmr1.c: 174:     {;mcc_generated_files/tmr1.c: 176:         TMR1_Ca
      +                          llBack();
 15668   00251C  EC2E  F013         	call	_TMR1_CallBack	;wreg free
 15669   002520                     
 15670                           ;mcc_generated_files/tmr1.c: 179:         CountCallBack = 0;
 15671   002520  0E00               	movlw	0
 15672   002522  0100               	movlb	0	; () banked
 15673   002524  6FC8               	movwf	(TMR1_ISR@CountCallBack+1)& (0+255),b	;volatile
 15674   002526  0E00               	movlw	0
 15675   002528  6FC7               	movwf	TMR1_ISR@CountCallBack& (0+255),b	;volatile
 15676   00252A                     i2l363:
 15677                           
 15678                           ; BSR set to: 0
 15679   00252A  0012               	return		;funcret
 15680   00252C                     __end_of_TMR1_ISR:
 15681                           	callstack 0
 15682                           
 15683 ;; *************** function _TMR1_WriteTimer *****************
 15684 ;; Defined at:
 15685 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 15686 ;; Parameters:    Size  Location     Type
 15687 ;;  timerVal        2    0[COMRAM] unsigned short 
 15688 ;; Auto vars:     Size  Location     Type
 15689 ;;		None
 15690 ;; Return value:  Size  Location     Type
 15691 ;;                  1    wreg      void 
 15692 ;; Registers used:
 15693 ;;		wreg, status,2
 15694 ;; Tracked objects:
 15695 ;;		On entry : 0/0
 15696 ;;		On exit  : 0/0
 15697 ;;		Unchanged: 0/0
 15698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15699 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15702 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15703 ;;Total ram usage:        2 bytes
 15704 ;; Hardware stack levels used: 1
 15705 ;; This function calls:
 15706 ;;		Nothing
 15707 ;; This function is called by:
 15708 ;;		_TMR1_ISR
 15709 ;;		_TMR1_Reload
 15710 ;; This function uses a non-reentrant model
 15711 ;;
 15712                           
 15713                           	psect	text71
 15714   00275C                     __ptext71:
 15715                           	callstack 0
 15716   00275C                     _TMR1_WriteTimer:
 15717                           	callstack 16
 15718   00275C                     
 15719                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 15720   00275C  A4CF               	btfss	207,2,c	;volatile
 15721   00275E  EFB3  F013         	goto	i2u719_41
 15722   002762  EFB5  F013         	goto	i2u719_40
 15723   002766                     i2u719_41:
 15724   002766  EFBD  F013         	goto	i2l9634
 15725   00276A                     i2u719_40:
 15726   00276A                     
 15727                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 15728   00276A  90CF               	bcf	207,0,c	;volatile
 15729   00276C                     
 15730                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
 15731   00276C  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
 15732   00276E  6ECE               	movwf	206,c	;volatile
 15733   002770                     
 15734                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
 15735   002770  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 15736   002774                     
 15737                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 15738   002774  80CF               	bsf	207,0,c	;volatile
 15739                           
 15740                           ;mcc_generated_files/tmr1.c: 140:     }
 15741   002776  EFC1  F013         	goto	i2l348
 15742   00277A                     i2l9634:
 15743                           
 15744                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 15745   00277A  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
 15746   00277C  6ECE               	movwf	206,c	;volatile
 15747   00277E                     
 15748                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
 15749   00277E  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 15750   002782                     i2l348:
 15751   002782  0012               	return		;funcret
 15752   002784                     __end_of_TMR1_WriteTimer:
 15753                           	callstack 0
 15754                           
 15755 ;; *************** function _TMR1_CallBack *****************
 15756 ;; Defined at:
 15757 ;;		line 183 in file "mcc_generated_files/tmr1.c"
 15758 ;; Parameters:    Size  Location     Type
 15759 ;;		None
 15760 ;; Auto vars:     Size  Location     Type
 15761 ;;		None
 15762 ;; Return value:  Size  Location     Type
 15763 ;;                  1    wreg      void 
 15764 ;; Registers used:
 15765 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 15766 ;; Tracked objects:
 15767 ;;		On entry : 0/0
 15768 ;;		On exit  : 0/0
 15769 ;;		Unchanged: 0/0
 15770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15775 ;;Total ram usage:        0 bytes
 15776 ;; Hardware stack levels used: 1
 15777 ;; Hardware stack levels required when called: 1
 15778 ;; This function calls:
 15779 ;;		NULL
 15780 ;;		_TMR1_DefaultInterruptHandler
 15781 ;;		_rtcc_handler
 15782 ;; This function is called by:
 15783 ;;		_TMR1_ISR
 15784 ;; This function uses a non-reentrant model
 15785 ;;
 15786                           
 15787                           	psect	text72
 15788   00265C                     __ptext72:
 15789                           	callstack 0
 15790   00265C                     _TMR1_CallBack:
 15791                           	callstack 15
 15792   00265C                     
 15793                           ;mcc_generated_files/tmr1.c: 186:     if(TMR1_InterruptHandler)
 15794   00265C  0101               	movlb	1	; () banked
 15795   00265E  51F5               	movf	_TMR1_InterruptHandler& (0+255),w,b
 15796   002660  11F6               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 15797   002662  B4D8               	btfsc	status,2,c
 15798   002664  EF36  F013         	goto	i2u720_41
 15799   002668  EF38  F013         	goto	i2u720_40
 15800   00266C                     i2u720_41:
 15801   00266C  EF44  F013         	goto	i2l367
 15802   002670                     i2u720_40:
 15803   002670                     
 15804                           ; BSR set to: 1
 15805                           ;mcc_generated_files/tmr1.c: 187:     {;mcc_generated_files/tmr1.c: 188:         TMR1_In
      +                          terruptHandler();
 15806   002670  D802               	call	i2u721_48
 15807   002672  EF44  F013         	goto	i2u721_49
 15808   002676                     i2u721_48:
 15809   002676  0005               	push	
 15810   002678  6EFA               	movwf	pclath,c
 15811   00267A  51F5               	movf	_TMR1_InterruptHandler& (0+255),w,b
 15812   00267C  6EFD               	movwf	tosl,c
 15813   00267E  51F6               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 15814   002680  6EFE               	movwf	tosh,c
 15815   002682  6AFF               	clrf	tosu,c
 15816   002684  50FA               	movf	pclath,w,c
 15817   002686  0012               	return		;indir
 15818   002688                     i2u721_49:
 15819   002688                     i2l367:
 15820   002688  0012               	return		;funcret
 15821   00268A                     __end_of_TMR1_CallBack:
 15822                           	callstack 0
 15823                           
 15824 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 15825 ;; Defined at:
 15826 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 15827 ;; Parameters:    Size  Location     Type
 15828 ;;		None
 15829 ;; Auto vars:     Size  Location     Type
 15830 ;;		None
 15831 ;; Return value:  Size  Location     Type
 15832 ;;                  1    wreg      void 
 15833 ;; Registers used:
 15834 ;;		None
 15835 ;; Tracked objects:
 15836 ;;		On entry : 0/0
 15837 ;;		On exit  : 0/0
 15838 ;;		Unchanged: 0/0
 15839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15844 ;;Total ram usage:        0 bytes
 15845 ;; Hardware stack levels used: 1
 15846 ;; This function calls:
 15847 ;;		Nothing
 15848 ;; This function is called by:
 15849 ;;		_TMR1_Initialize
 15850 ;;		_TMR1_CallBack
 15851 ;; This function uses a non-reentrant model
 15852 ;;
 15853                           
 15854                           	psect	text73
 15855   002A66                     __ptext73:
 15856                           	callstack 0
 15857   002A66                     _TMR1_DefaultInterruptHandler:
 15858                           	callstack 15
 15859   002A66  0012               	return		;funcret
 15860   002A68                     __end_of_TMR1_DefaultInterruptHandler:
 15861                           	callstack 0
 15862                           
 15863 ;; *************** function _rtcc_handler *****************
 15864 ;; Defined at:
 15865 ;;		line 93 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
 15866 ;; Parameters:    Size  Location     Type
 15867 ;;		None
 15868 ;; Auto vars:     Size  Location     Type
 15869 ;;		None
 15870 ;; Return value:  Size  Location     Type
 15871 ;;                  1    wreg      void 
 15872 ;; Registers used:
 15873 ;;		wreg, status,2, status,0
 15874 ;; Tracked objects:
 15875 ;;		On entry : 0/0
 15876 ;;		On exit  : 0/0
 15877 ;;		Unchanged: 0/0
 15878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15883 ;;Total ram usage:        0 bytes
 15884 ;; Hardware stack levels used: 1
 15885 ;; This function calls:
 15886 ;;		Nothing
 15887 ;; This function is called by:
 15888 ;;		_rtcc_init
 15889 ;;		_TMR1_CallBack
 15890 ;; This function uses a non-reentrant model
 15891 ;;
 15892                           
 15893                           	psect	text74
 15894   0029CC                     __ptext74:
 15895                           	callstack 0
 15896   0029CC                     _rtcc_handler:
 15897                           	callstack 15
 15898   0029CC                     
 15899                           ;mcc_generated_files/TCPIPLibrary/rtcc.c: 95:  deviceTime++;
 15900   0029CC  0E01               	movlw	1
 15901   0029CE  0101               	movlb	1	; () banked
 15902   0029D0  2738               	addwf	_deviceTime& (0+255),f,b	;volatile
 15903   0029D2  0E00               	movlw	0
 15904   0029D4  2339               	addwfc	(_deviceTime+1)& (0+255),f,b	;volatile
 15905   0029D6  233A               	addwfc	(_deviceTime+2)& (0+255),f,b	;volatile
 15906   0029D8  233B               	addwfc	(_deviceTime+3)& (0+255),f,b	;volatile
 15907   0029DA                     
 15908                           ; BSR set to: 1
 15909   0029DA  0012               	return		;funcret
 15910   0029DC                     __end_of_rtcc_handler:
 15911                           	callstack 0
 15912                           
 15913 ;; *************** function _TMR0_ISR *****************
 15914 ;; Defined at:
 15915 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 15916 ;; Parameters:    Size  Location     Type
 15917 ;;		None
 15918 ;; Auto vars:     Size  Location     Type
 15919 ;;		None
 15920 ;; Return value:  Size  Location     Type
 15921 ;;                  1    wreg      void 
 15922 ;; Registers used:
 15923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 15924 ;; Tracked objects:
 15925 ;;		On entry : 0/0
 15926 ;;		On exit  : 0/0
 15927 ;;		Unchanged: 0/0
 15928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15933 ;;Total ram usage:        0 bytes
 15934 ;; Hardware stack levels used: 1
 15935 ;; Hardware stack levels required when called: 11
 15936 ;; This function calls:
 15937 ;;		_TMR0_CallBack
 15938 ;; This function is called by:
 15939 ;;		_INTERRUPT_InterruptManager
 15940 ;; This function uses a non-reentrant model
 15941 ;;
 15942                           
 15943                           	psect	text75
 15944   0025FE                     __ptext75:
 15945                           	callstack 0
 15946   0025FE                     _TMR0_ISR:
 15947                           	callstack 6
 15948   0025FE                     
 15949                           ;mcc_generated_files/tmr0.c: 123:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 126:     PIR0bits.TMR0IF = 0;
 15950   0025FE  010E               	movlb	14	; () banked
 15951   002600  9BCA               	bcf	202,5,b	;volatile
 15952   002602                     
 15953                           ; BSR set to: 14
 15954                           ;mcc_generated_files/tmr0.c: 128:     if (++CountCallBack >= 10)
 15955   002602  0100               	movlb	0	; () banked
 15956   002604  4BBD               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
 15957   002606  2BBE               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 15958   002608  51BE               	movf	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 15959   00260A  E109               	bnz	i2u881_40
 15960   00260C  0E0A               	movlw	10
 15961   00260E  5DBD               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
 15962   002610  A0D8               	btfss	status,0,c
 15963   002612  EF0D  F013         	goto	i2u881_41
 15964   002616  EF0F  F013         	goto	i2u881_40
 15965   00261A                     i2u881_41:
 15966   00261A  EF16  F013         	goto	i2l2241
 15967   00261E                     i2u881_40:
 15968   00261E                     
 15969                           ; BSR set to: 0
 15970                           ;mcc_generated_files/tmr0.c: 129:     {;mcc_generated_files/tmr0.c: 131:         TMR0_Ca
      +                          llBack();
 15971   00261E  EC45  F013         	call	_TMR0_CallBack	;wreg free
 15972   002622                     
 15973                           ;mcc_generated_files/tmr0.c: 134:         CountCallBack = 0;
 15974   002622  0E00               	movlw	0
 15975   002624  0100               	movlb	0	; () banked
 15976   002626  6FBE               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
 15977   002628  0E00               	movlw	0
 15978   00262A  6FBD               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
 15979   00262C                     i2l2241:
 15980                           
 15981                           ; BSR set to: 0
 15982   00262C  0012               	return		;funcret
 15983   00262E                     __end_of_TMR0_ISR:
 15984                           	callstack 0
 15985                           
 15986 ;; *************** function _TMR0_CallBack *****************
 15987 ;; Defined at:
 15988 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 15989 ;; Parameters:    Size  Location     Type
 15990 ;;		None
 15991 ;; Auto vars:     Size  Location     Type
 15992 ;;		None
 15993 ;; Return value:  Size  Location     Type
 15994 ;;                  1    wreg      void 
 15995 ;; Registers used:
 15996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 15997 ;; Tracked objects:
 15998 ;;		On entry : 0/0
 15999 ;;		On exit  : 0/0
 16000 ;;		Unchanged: 0/0
 16001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16006 ;;Total ram usage:        0 bytes
 16007 ;; Hardware stack levels used: 1
 16008 ;; Hardware stack levels required when called: 10
 16009 ;; This function calls:
 16010 ;;		NULL
 16011 ;;		_TMR0_DefaultInterruptHandler
 16012 ;;		_my_tmr0_callback
 16013 ;; This function is called by:
 16014 ;;		_TMR0_ISR
 16015 ;; This function uses a non-reentrant model
 16016 ;;
 16017                           
 16018                           	psect	text76
 16019   00268A                     __ptext76:
 16020                           	callstack 0
 16021   00268A                     _TMR0_CallBack:
 16022                           	callstack 6
 16023   00268A                     
 16024                           ;mcc_generated_files/tmr0.c: 144:     if(TMR0_InterruptHandler)
 16025   00268A  0101               	movlb	1	; () banked
 16026   00268C  51ED               	movf	_TMR0_InterruptHandler& (0+255),w,b
 16027   00268E  11EE               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 16028   002690  B4D8               	btfsc	status,2,c
 16029   002692  EF4D  F013         	goto	i2u727_41
 16030   002696  EF4F  F013         	goto	i2u727_40
 16031   00269A                     i2u727_41:
 16032   00269A  EF5B  F013         	goto	i2l2245
 16033   00269E                     i2u727_40:
 16034   00269E                     
 16035                           ; BSR set to: 1
 16036                           ;mcc_generated_files/tmr0.c: 145:     {;mcc_generated_files/tmr0.c: 146:         TMR0_In
      +                          terruptHandler();
 16037   00269E  D802               	call	i2u728_48
 16038   0026A0  EF5B  F013         	goto	i2u728_49
 16039   0026A4                     i2u728_48:
 16040   0026A4  0005               	push	
 16041   0026A6  6EFA               	movwf	pclath,c
 16042   0026A8  51ED               	movf	_TMR0_InterruptHandler& (0+255),w,b
 16043   0026AA  6EFD               	movwf	tosl,c
 16044   0026AC  51EE               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 16045   0026AE  6EFE               	movwf	tosh,c
 16046   0026B0  6AFF               	clrf	tosu,c
 16047   0026B2  50FA               	movf	pclath,w,c
 16048   0026B4  0012               	return		;indir
 16049   0026B6                     i2u728_49:
 16050   0026B6                     i2l2245:
 16051   0026B6  0012               	return		;funcret
 16052   0026B8                     __end_of_TMR0_CallBack:
 16053                           	callstack 0
 16054                           
 16055 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 16056 ;; Defined at:
 16057 ;;		line 154 in file "mcc_generated_files/tmr0.c"
 16058 ;; Parameters:    Size  Location     Type
 16059 ;;		None
 16060 ;; Auto vars:     Size  Location     Type
 16061 ;;		None
 16062 ;; Return value:  Size  Location     Type
 16063 ;;                  1    wreg      void 
 16064 ;; Registers used:
 16065 ;;		None
 16066 ;; Tracked objects:
 16067 ;;		On entry : 0/0
 16068 ;;		On exit  : 0/0
 16069 ;;		Unchanged: 0/0
 16070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16075 ;;Total ram usage:        0 bytes
 16076 ;; Hardware stack levels used: 1
 16077 ;; This function calls:
 16078 ;;		Nothing
 16079 ;; This function is called by:
 16080 ;;		_TMR0_Initialize
 16081 ;;		_TMR0_CallBack
 16082 ;; This function uses a non-reentrant model
 16083 ;;
 16084                           
 16085                           	psect	text77
 16086   002A68                     __ptext77:
 16087                           	callstack 0
 16088   002A68                     _TMR0_DefaultInterruptHandler:
 16089                           	callstack 15
 16090   002A68  0012               	return		;funcret
 16091   002A6A                     __end_of_TMR0_DefaultInterruptHandler:
 16092                           	callstack 0
 16093                           
 16094 ;; *************** function _my_tmr0_callback *****************
 16095 ;; Defined at:
 16096 ;;		line 86 in file "main.c"
 16097 ;; Parameters:    Size  Location     Type
 16098 ;;		None
 16099 ;; Auto vars:     Size  Location     Type
 16100 ;;		None
 16101 ;; Return value:  Size  Location     Type
 16102 ;;                  1    wreg      void 
 16103 ;; Registers used:
 16104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16105 ;; Tracked objects:
 16106 ;;		On entry : 0/0
 16107 ;;		On exit  : 0/0
 16108 ;;		Unchanged: 0/0
 16109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16114 ;;Total ram usage:        0 bytes
 16115 ;; Hardware stack levels used: 1
 16116 ;; Hardware stack levels required when called: 9
 16117 ;; This function calls:
 16118 ;;		i2_printf
 16119 ;; This function is called by:
 16120 ;;		_main
 16121 ;;		_TMR0_CallBack
 16122 ;; This function uses a non-reentrant model
 16123 ;;
 16124                           
 16125                           	psect	text78
 16126   00299A                     __ptext78:
 16127                           	callstack 0
 16128   00299A                     _my_tmr0_callback:
 16129                           	callstack 6
 16130   00299A                     
 16131                           ;main.c: 87:     printf("TMR0 Interrupt occurred!\n\r");
 16132   00299A  0E36               	movlw	low STR_15
 16133   00299C  6E3A               	movwf	i2printf@fmt^0,c
 16134   00299E  0EFE               	movlw	high STR_15
 16135   0029A0  6E3B               	movwf	(i2printf@fmt+1)^0,c
 16136   0029A2  EC7C  F014         	call	i2_printf	;wreg free
 16137   0029A6                     
 16138                           ;main.c: 89:     adc_flag = 1;
 16139   0029A6  0E01               	movlw	1
 16140   0029A8  6E4F               	movwf	_adc_flag^0,c
 16141   0029AA  0012               	return		;funcret
 16142   0029AC                     __end_of_my_tmr0_callback:
 16143                           	callstack 0
 16144                           
 16145 ;; *************** function i2_printf *****************
 16146 ;; Defined at:
 16147 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\printf.c"
 16148 ;; Parameters:    Size  Location     Type
 16149 ;;  fmt             2   57[COMRAM] PTR const unsigned char 
 16150 ;;		 -> STR_40(66), STR_21(26), STR_16(6), STR_15(27), 
 16151 ;;		 -> STR_14(31), 
 16152 ;; Auto vars:     Size  Location     Type
 16153 ;;  ret             2    0        int 
 16154 ;;  ap              2   59[COMRAM] PTR void [1]
 16155 ;;		 -> ?i2_printf(2), ?_printf(2), ?_sprintf(2), 
 16156 ;; Return value:  Size  Location     Type
 16157 ;;                  2   57[COMRAM] int 
 16158 ;; Registers used:
 16159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16160 ;; Tracked objects:
 16161 ;;		On entry : 0/0
 16162 ;;		On exit  : 0/0
 16163 ;;		Unchanged: 0/0
 16164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16168 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16169 ;;Total ram usage:        3 bytes
 16170 ;; Hardware stack levels used: 1
 16171 ;; Hardware stack levels required when called: 8
 16172 ;; This function calls:
 16173 ;;		i2_vfprintf
 16174 ;; This function is called by:
 16175 ;;		_my_tmr0_callback
 16176 ;; This function uses a non-reentrant model
 16177 ;;
 16178                           
 16179                           	psect	text79
 16180   0028F8                     __ptext79:
 16181                           	callstack 0
 16182   0028F8                     i2_printf:
 16183                           	callstack 6
 16184   0028F8  0E3C               	movlw	low (?i2_printf+2)
 16185   0028FA  6E3C               	movwf	i2printf@ap^0,c
 16186   0028FC  6A3D               	clrf	(i2printf@ap+1)^0,c
 16187   0028FE  0E00               	movlw	0
 16188   002900  6E34               	movwf	i2vfprintf@fp^0,c
 16189   002902  C03A  F035         	movff	i2printf@fmt,i2vfprintf@fmt
 16190   002906  C03B  F036         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
 16191   00290A  0E3C               	movlw	low i2printf@ap
 16192   00290C  6E37               	movwf	i2vfprintf@ap^0,c
 16193   00290E  ECB5  F011         	call	i2_vfprintf	;wreg free
 16194   002912  0012               	return		;funcret
 16195   002914                     __end_ofi2_printf:
 16196                           	callstack 0
 16197                           
 16198 ;; *************** function i2_vfprintf *****************
 16199 ;; Defined at:
 16200 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 16201 ;; Parameters:    Size  Location     Type
 16202 ;;  fp              1   51[COMRAM] PTR struct _IO_FILE
 16203 ;;		 -> sprintf@f(11), NULL(0), 
 16204 ;;  fmt             2   52[COMRAM] PTR const unsigned char 
 16205 ;;		 -> STR_40(66), STR_39(19), STR_38(21), STR_21(26), 
 16206 ;;		 -> STR_20(21), STR_19(12), STR_16(6), STR_15(27), 
 16207 ;;		 -> STR_14(31), STR_13(2), STR_11(5), STR_9(4), 
 16208 ;;		 -> STR_7(4), STR_5(4), STR_4(13), STR_3(17), 
 16209 ;;		 -> STR_2(13), STR_1(8), 
 16210 ;;  ap              1   54[COMRAM] PTR PTR void 
 16211 ;;		 -> i2printf@ap(2), printf@ap(2), sprintf@ap(2), 
 16212 ;; Auto vars:     Size  Location     Type
 16213 ;;  cfmt            2   55[COMRAM] PTR unsigned char 
 16214 ;;		 -> STR_40(66), STR_39(19), STR_38(21), STR_21(26), 
 16215 ;;		 -> STR_20(21), STR_19(12), STR_16(6), STR_15(27), 
 16216 ;;		 -> STR_14(31), STR_13(2), STR_11(5), STR_9(4), 
 16217 ;;		 -> STR_7(4), STR_5(4), STR_4(13), STR_3(17), 
 16218 ;;		 -> STR_2(13), STR_1(8), 
 16219 ;; Return value:  Size  Location     Type
 16220 ;;                  2   51[COMRAM] int 
 16221 ;; Registers used:
 16222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16223 ;; Tracked objects:
 16224 ;;		On entry : 0/0
 16225 ;;		On exit  : 0/0
 16226 ;;		Unchanged: 0/0
 16227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16228 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16229 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16231 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16232 ;;Total ram usage:        6 bytes
 16233 ;; Hardware stack levels used: 1
 16234 ;; Hardware stack levels required when called: 7
 16235 ;; This function calls:
 16236 ;;		i2_vfpfcnvrt
 16237 ;; This function is called by:
 16238 ;;		i2_printf
 16239 ;; This function uses a non-reentrant model
 16240 ;;
 16241                           
 16242                           	psect	text80
 16243   00236A                     __ptext80:
 16244                           	callstack 0
 16245   00236A                     i2_vfprintf:
 16246                           	callstack 6
 16247   00236A                     
 16248                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 16249   00236A  C035  F038         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
 16250   00236E  C036  F039         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
 16251                           
 16252                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 16253   002372  EFC3  F011         	goto	i2l8932
 16254   002376                     i2l8930:
 16255                           
 16256                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 16257   002376  C034  F027         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
 16258   00237A  0E38               	movlw	low i2vfprintf@cfmt
 16259   00237C  6E28               	movwf	i2vfpfcnvrt@fmt^0,c
 16260   00237E  C037  F029         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
 16261   002382  EC5E  F002         	call	i2_vfpfcnvrt	;wreg free
 16262   002386                     i2l8932:
 16263                           
 16264                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 16265   002386  C038  FFF6         	movff	i2vfprintf@cfmt,tblptrl
 16266   00238A  C039  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
 16267   00238E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16268   00238E  6AF8               	clrf	tblptru,c
 16269   002390                     	endif
 16270   002390                     	if	0	;tblptru may be non-zero
 16271   002390                     	endif
 16272   002390  0008               	tblrd		*
 16273   002392  50F5               	movf	tablat,w,c
 16274   002394  0900               	iorlw	0
 16275   002396  A4D8               	btfss	status,2,c
 16276   002398  EFD0  F011         	goto	i2u679_41
 16277   00239C  EFD2  F011         	goto	i2u679_40
 16278   0023A0                     i2u679_41:
 16279   0023A0  EFBB  F011         	goto	i2l8930
 16280   0023A4                     i2u679_40:
 16281   0023A4                     
 16282                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 16283   0023A4  0E00               	movlw	0
 16284   0023A6  6E35               	movwf	(?i2_vfprintf+1)^0,c
 16285   0023A8  0E00               	movlw	0
 16286   0023AA  6E34               	movwf	?i2_vfprintf^0,c
 16287   0023AC  0012               	return		;funcret
 16288   0023AE                     __end_ofi2_vfprintf:
 16289                           	callstack 0
 16290                           
 16291 ;; *************** function i2_vfpfcnvrt *****************
 16292 ;; Defined at:
 16293 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 16294 ;; Parameters:    Size  Location     Type
 16295 ;;  fp              1   38[COMRAM] PTR struct _IO_FILE
 16296 ;;		 -> sprintf@f(11), NULL(0), 
 16297 ;;  fmt             1   39[COMRAM] PTR PTR unsigned char 
 16298 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 16299 ;;  ap              1   40[COMRAM] PTR PTR void 
 16300 ;;		 -> i2printf@ap(2), printf@ap(2), sprintf@ap(2), 
 16301 ;; Auto vars:     Size  Location     Type
 16302 ;;  convarg         4   44[COMRAM] struct .
 16303 ;;  cp              2   49[COMRAM] PTR unsigned char 
 16304 ;;		 -> STR_40(66), STR_39(19), STR_38(21), STR_21(26), 
 16305 ;;		 -> STR_20(21), STR_19(12), STR_16(6), STR_15(27), 
 16306 ;;		 -> STR_14(31), STR_13(2), STR_11(5), STR_9(4), 
 16307 ;;		 -> STR_7(4), STR_5(4), STR_4(13), STR_3(17), 
 16308 ;;		 -> STR_2(13), STR_1(8), 
 16309 ;;  c               1   48[COMRAM] unsigned char 
 16310 ;;  done            1   43[COMRAM] _Bool 
 16311 ;; Return value:  Size  Location     Type
 16312 ;;                  1    wreg      void 
 16313 ;; Registers used:
 16314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16315 ;; Tracked objects:
 16316 ;;		On entry : 0/0
 16317 ;;		On exit  : 0/0
 16318 ;;		Unchanged: 0/0
 16319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16320 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16321 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16322 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16323 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16324 ;;Total ram usage:       13 bytes
 16325 ;; Hardware stack levels used: 1
 16326 ;; Hardware stack levels required when called: 6
 16327 ;; This function calls:
 16328 ;;		i2_dtoa
 16329 ;;		i2_fputc
 16330 ;;		i2_read_prec_or_width
 16331 ;;		i2_stoa
 16332 ;;		i2_utoa
 16333 ;; This function is called by:
 16334 ;;		i2_vfprintf
 16335 ;; This function uses a non-reentrant model
 16336 ;;
 16337                           
 16338                           	psect	text81
 16339   0004BC                     __ptext81:
 16340                           	callstack 0
 16341   0004BC                     i2_vfpfcnvrt:
 16342                           	callstack 6
 16343   0004BC                     
 16344                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 16345   0004BC  5028               	movf	i2vfpfcnvrt@fmt^0,w,c
 16346   0004BE  6ED9               	movwf	fsr2l,c
 16347   0004C0  6ADA               	clrf	fsr2h,c
 16348   0004C2  CFDE FFF6          	movff	postinc2,tblptrl
 16349   0004C6  CFDD FFF7          	movff	postdec2,tblptrh
 16350   0004CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16351   0004CA  6AF8               	clrf	tblptru,c
 16352   0004CC                     	endif
 16353   0004CC                     	if	0	;tblptru may be non-zero
 16354   0004CC                     	endif
 16355   0004CC  0008               	tblrd		*
 16356   0004CE  50F5               	movf	tablat,w,c
 16357   0004D0  0A25               	xorlw	37
 16358   0004D2  A4D8               	btfss	status,2,c
 16359   0004D4  EF6E  F002         	goto	i2u657_41
 16360   0004D8  EF70  F002         	goto	i2u657_40
 16361   0004DC                     i2u657_41:
 16362   0004DC  EF35  F004         	goto	i2l8796
 16363   0004E0                     i2u657_40:
 16364   0004E0                     
 16365                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 16366   0004E0  5028               	movf	i2vfpfcnvrt@fmt^0,w,c
 16367   0004E2  6ED9               	movwf	fsr2l,c
 16368   0004E4  6ADA               	clrf	fsr2h,c
 16369   0004E6  2ADE               	incf	postinc2,f,c
 16370   0004E8  0E00               	movlw	0
 16371   0004EA  22DD               	addwfc	postdec2,f,c
 16372   0004EC                     
 16373                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 16374   0004EC  0E00               	movlw	0
 16375   0004EE  0100               	movlb	0	; () banked
 16376   0004F0  6FBC               	movwf	(_width+1)& (0+255),b
 16377   0004F2  0E00               	movlw	0
 16378   0004F4  6FBB               	movwf	_width& (0+255),b
 16379   0004F6  C0BB  F0CB         	movff	_width,_flags
 16380   0004FA                     
 16381                           ; BSR set to: 0
 16382                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 16383   0004FA  683D               	setf	_prec^0,c
 16384   0004FC  683E               	setf	(_prec+1)^0,c
 16385   0004FE                     
 16386                           ; BSR set to: 0
 16387                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
 16388   0004FE  5028               	movf	i2vfpfcnvrt@fmt^0,w,c
 16389   000500  6ED9               	movwf	fsr2l,c
 16390   000502  6ADA               	clrf	fsr2h,c
 16391   000504  CFDE FFF6          	movff	postinc2,tblptrl
 16392   000508  CFDD FFF7          	movff	postdec2,tblptrh
 16393   00050C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16394   00050C  6AF8               	clrf	tblptru,c
 16395   00050E                     	endif
 16396   00050E                     	if	0	;tblptru may be non-zero
 16397   00050E                     	endif
 16398   00050E  0008               	tblrd		*
 16399   000510  50F5               	movf	tablat,w,c
 16400   000512  0A2E               	xorlw	46
 16401   000514  A4D8               	btfss	status,2,c
 16402   000516  EF8F  F002         	goto	i2u658_41
 16403   00051A  EF91  F002         	goto	i2u658_40
 16404   00051E                     i2u658_41:
 16405   00051E  EFA1  F002         	goto	i2l8720
 16406   000522                     i2u658_40:
 16407   000522                     
 16408                           ; BSR set to: 0
 16409                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
 16410   000522  5028               	movf	i2vfpfcnvrt@fmt^0,w,c
 16411   000524  6ED9               	movwf	fsr2l,c
 16412   000526  6ADA               	clrf	fsr2h,c
 16413   000528  2ADE               	incf	postinc2,f,c
 16414   00052A  0E00               	movlw	0
 16415   00052C  22DD               	addwfc	postdec2,f,c
 16416   00052E                     
 16417                           ; BSR set to: 0
 16418                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
 16419   00052E  C028  F001         	movff	i2vfpfcnvrt@fmt,i2read_prec_or_width@fmt
 16420   000532  C029  F002         	movff	i2vfpfcnvrt@ap,i2read_prec_or_width@ap
 16421   000536  EC8D  F00C         	call	i2_read_prec_or_width	;wreg free
 16422   00053A  C001  F03D         	movff	?i2_read_prec_or_width,_prec
 16423   00053E  C002  F03E         	movff	?i2_read_prec_or_width+1,_prec+1
 16424   000542                     i2l8720:
 16425                           
 16426                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 16427   000542  5028               	movf	i2vfpfcnvrt@fmt^0,w,c
 16428   000544  6ED9               	movwf	fsr2l,c
 16429   000546  6ADA               	clrf	fsr2h,c
 16430   000548  CFDE F032          	movff	postinc2,i2vfpfcnvrt@cp
 16431   00054C  CFDD F033          	movff	postdec2,i2vfpfcnvrt@cp+1
 16432   000550                     
 16433                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
 16434   000550  C032  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
 16435   000554  C033  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
 16436   000558                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16437   000558  6AF8               	clrf	tblptru,c
 16438   00055A                     	endif
 16439   00055A                     	if	0	;tblptru may be non-zero
 16440   00055A                     	endif
 16441   00055A  0008               	tblrd		*
 16442   00055C  CFF5 F031          	movff	tablat,i2vfpfcnvrt@c
 16443                           
 16444                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
 16445   000560  EFBD  F002         	goto	i2l8730
 16446   000564                     i2l8724:
 16447                           
 16448                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1309:     cp++;
 16449   000564  4A32               	infsnz	i2vfpfcnvrt@cp^0,f,c
 16450   000566  2A33               	incf	(i2vfpfcnvrt@cp+1)^0,f,c
 16451                           
 16452                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1316:     break;
 16453   000568  EFD0  F002         	goto	i2l8732
 16454   00056C                     i2l8726:
 16455                           
 16456                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
 16457   00056C  0E69               	movlw	105
 16458   00056E  6E31               	movwf	i2vfpfcnvrt@c^0,c
 16459                           
 16460                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1351:     break;
 16461   000570  EFD0  F002         	goto	i2l8732
 16462   000574                     i2l3087:
 16463                           
 16464                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
 16465   000574  6A31               	clrf	i2vfpfcnvrt@c^0,c
 16466                           
 16467                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1354:     break;
 16468   000576  EFD0  F002         	goto	i2l8732
 16469   00057A                     i2l8730:
 16470   00057A  5031               	movf	i2vfpfcnvrt@c^0,w,c
 16471                           
 16472                           ; Switch size 1, requested type "simple"
 16473                           ; Number of cases is 4, Range of values is 100 to 117
 16474                           ; switch strategies available:
 16475                           ; Name         Instructions Cycles
 16476                           ; simple_byte           13     7 (average)
 16477                           ;	Chosen strategy is simple_byte
 16478   00057C  0A64               	xorlw	100	; case 100
 16479   00057E  B4D8               	btfsc	status,2,c
 16480   000580  EFB6  F002         	goto	i2l8726
 16481   000584  0A0D               	xorlw	13	; case 105
 16482   000586  B4D8               	btfsc	status,2,c
 16483   000588  EFB6  F002         	goto	i2l8726
 16484   00058C  0A05               	xorlw	5	; case 108
 16485   00058E  B4D8               	btfsc	status,2,c
 16486   000590  EFB2  F002         	goto	i2l8724
 16487   000594  0A19               	xorlw	25	; case 117
 16488   000596  B4D8               	btfsc	status,2,c
 16489   000598  EFB6  F002         	goto	i2l8726
 16490   00059C  EFBA  F002         	goto	i2l3087
 16491   0005A0                     i2l8732:
 16492                           
 16493                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 16494   0005A0  C032  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
 16495   0005A4  C033  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
 16496   0005A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16497   0005A8  6AF8               	clrf	tblptru,c
 16498   0005AA                     	endif
 16499   0005AA                     	if	0	;tblptru may be non-zero
 16500   0005AA                     	endif
 16501   0005AA  0008               	tblrd		*
 16502   0005AC  50F5               	movf	tablat,w,c
 16503   0005AE  0A64               	xorlw	100
 16504   0005B0  B4D8               	btfsc	status,2,c
 16505   0005B2  EFDD  F002         	goto	i2u659_41
 16506   0005B6  EFDF  F002         	goto	i2u659_40
 16507   0005BA                     i2u659_41:
 16508   0005BA  EF15  F003         	goto	i2l8742
 16509   0005BE                     i2u659_40:
 16510   0005BE  C032  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
 16511   0005C2  C033  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
 16512   0005C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16513   0005C6  6AF8               	clrf	tblptru,c
 16514   0005C8                     	endif
 16515   0005C8                     	if	0	;tblptru may be non-zero
 16516   0005C8                     	endif
 16517   0005C8  0008               	tblrd		*
 16518   0005CA  50F5               	movf	tablat,w,c
 16519   0005CC  0A69               	xorlw	105
 16520   0005CE  A4D8               	btfss	status,2,c
 16521   0005D0  EFEC  F002         	goto	i2u660_41
 16522   0005D4  EFEE  F002         	goto	i2u660_40
 16523   0005D8                     i2u660_41:
 16524   0005D8  EF3B  F003         	goto	i2l8750
 16525   0005DC                     i2u660_40:
 16526   0005DC  EF15  F003         	goto	i2l8742
 16527   0005E0                     i2l8736:
 16528                           
 16529                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 16530   0005E0  5029               	movf	i2vfpfcnvrt@ap^0,w,c
 16531   0005E2  6ED9               	movwf	fsr2l,c
 16532   0005E4  6ADA               	clrf	fsr2h,c
 16533   0005E6  50DF               	movf	indf2,w,c
 16534   0005E8  2ADF               	incf	indf2,f,c
 16535   0005EA  2ADF               	incf	indf2,f,c
 16536   0005EC  6ED9               	movwf	fsr2l,c
 16537   0005EE  6ADA               	clrf	fsr2h,c
 16538   0005F0  CFDE F02D          	movff	postinc2,i2vfpfcnvrt@convarg
 16539   0005F4  CFDD F02E          	movff	postdec2,i2vfpfcnvrt@convarg+1
 16540   0005F8  0E00               	movlw	0
 16541   0005FA  BE2E               	btfsc	(i2vfpfcnvrt@convarg+1)^0,7,c
 16542   0005FC  0EFF               	movlw	-1
 16543   0005FE  6E2F               	movwf	(i2vfpfcnvrt@convarg+2)^0,c
 16544   000600  6E30               	movwf	(i2vfpfcnvrt@convarg+3)^0,c
 16545                           
 16546                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1366:      break;
 16547   000602  EF20  F003         	goto	i2l8744
 16548   000606                     i2l8738:
 16549                           
 16550                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
 16551   000606  5029               	movf	i2vfpfcnvrt@ap^0,w,c
 16552   000608  6ED9               	movwf	fsr2l,c
 16553   00060A  6ADA               	clrf	fsr2h,c
 16554   00060C  0E04               	movlw	4
 16555   00060E  26DF               	addwf	indf2,f,c
 16556   000610  5CDF               	subwf	indf2,w,c
 16557   000612  6ED9               	movwf	fsr2l,c
 16558   000614  6ADA               	clrf	fsr2h,c
 16559   000616  CFDE F02D          	movff	postinc2,i2vfpfcnvrt@convarg
 16560   00061A  CFDE F02E          	movff	postinc2,i2vfpfcnvrt@convarg+1
 16561   00061E  CFDE F02F          	movff	postinc2,i2vfpfcnvrt@convarg+2
 16562   000622  CFDE F030          	movff	postinc2,i2vfpfcnvrt@convarg+3
 16563                           
 16564                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1380:      break;
 16565   000626  EF20  F003         	goto	i2l8744
 16566   00062A                     i2l8742:
 16567   00062A  5031               	movf	i2vfpfcnvrt@c^0,w,c
 16568                           
 16569                           ; Switch size 1, requested type "simple"
 16570                           ; Number of cases is 2, Range of values is 105 to 108
 16571                           ; switch strategies available:
 16572                           ; Name         Instructions Cycles
 16573                           ; simple_byte            7     4 (average)
 16574                           ;	Chosen strategy is simple_byte
 16575   00062C  0A69               	xorlw	105	; case 105
 16576   00062E  B4D8               	btfsc	status,2,c
 16577   000630  EFF0  F002         	goto	i2l8736
 16578   000634  0A05               	xorlw	5	; case 108
 16579   000636  B4D8               	btfsc	status,2,c
 16580   000638  EF03  F003         	goto	i2l8738
 16581   00063C  EF20  F003         	goto	i2l8744
 16582   000640                     i2l8744:
 16583                           
 16584                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 16585   000640  0E01               	movlw	1
 16586   000642  2432               	addwf	i2vfpfcnvrt@cp^0,w,c
 16587   000644  6E2A               	movwf	??i2_vfpfcnvrt^0,c
 16588   000646  0E00               	movlw	0
 16589   000648  2033               	addwfc	(i2vfpfcnvrt@cp+1)^0,w,c
 16590   00064A  6E2B               	movwf	(??i2_vfpfcnvrt+1)^0,c
 16591   00064C  5028               	movf	i2vfpfcnvrt@fmt^0,w,c
 16592   00064E  6ED9               	movwf	fsr2l,c
 16593   000650  6ADA               	clrf	fsr2h,c
 16594   000652  C02A  FFDE         	movff	??i2_vfpfcnvrt,postinc2
 16595   000656  C02B  FFDD         	movff	??i2_vfpfcnvrt+1,postdec2
 16596   00065A                     
 16597                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of i2_vfpfcnvrt is never used
 16598   00065A  C027  F019         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
 16599   00065E  C02D  F01A         	movff	i2vfpfcnvrt@convarg,i2dtoa@d
 16600   000662  C02E  F01B         	movff	i2vfpfcnvrt@convarg+1,i2dtoa@d+1
 16601   000666  C02F  F01C         	movff	i2vfpfcnvrt@convarg+2,i2dtoa@d+2
 16602   00066A  C030  F01D         	movff	i2vfpfcnvrt@convarg+3,i2dtoa@d+3
 16603   00066E  EC33  F006         	call	i2_dtoa	;wreg free
 16604   000672  EF47  F004         	goto	i2l3095
 16605   000676                     i2l8750:
 16606   000676  C032  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
 16607   00067A  C033  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
 16608   00067E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16609   00067E  6AF8               	clrf	tblptru,c
 16610   000680                     	endif
 16611   000680                     	if	0	;tblptru may be non-zero
 16612   000680                     	endif
 16613   000680  0008               	tblrd		*
 16614   000682  50F5               	movf	tablat,w,c
 16615   000684  0A75               	xorlw	117
 16616   000686  A4D8               	btfss	status,2,c
 16617   000688  EF48  F003         	goto	i2u661_41
 16618   00068C  EF4A  F003         	goto	i2u661_40
 16619   000690                     i2u661_41:
 16620   000690  EFA7  F003         	goto	i2l3096
 16621   000694                     i2u661_40:
 16622   000694  EF72  F003         	goto	i2l8758
 16623   000698                     i2l8752:
 16624                           
 16625                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 16626   000698  5029               	movf	i2vfpfcnvrt@ap^0,w,c
 16627   00069A  6ED9               	movwf	fsr2l,c
 16628   00069C  6ADA               	clrf	fsr2h,c
 16629   00069E  50DF               	movf	indf2,w,c
 16630   0006A0  2ADF               	incf	indf2,f,c
 16631   0006A2  2ADF               	incf	indf2,f,c
 16632   0006A4  6ED9               	movwf	fsr2l,c
 16633   0006A6  6ADA               	clrf	fsr2h,c
 16634   0006A8  CFDE F02A          	movff	postinc2,??i2_vfpfcnvrt
 16635   0006AC  CFDD F02B          	movff	postdec2,??i2_vfpfcnvrt+1
 16636   0006B0  C02A  F02D         	movff	??i2_vfpfcnvrt,i2vfpfcnvrt@convarg
 16637   0006B4  C02B  F02E         	movff	??i2_vfpfcnvrt+1,i2vfpfcnvrt@convarg+1
 16638   0006B8  6A2F               	clrf	(i2vfpfcnvrt@convarg+2)^0,c
 16639   0006BA  6A30               	clrf	(i2vfpfcnvrt@convarg+3)^0,c
 16640                           
 16641                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1457:      break;
 16642   0006BC  EF7D  F003         	goto	i2l8760
 16643   0006C0                     i2l8754:
 16644                           
 16645                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
 16646   0006C0  5029               	movf	i2vfpfcnvrt@ap^0,w,c
 16647   0006C2  6ED9               	movwf	fsr2l,c
 16648   0006C4  6ADA               	clrf	fsr2h,c
 16649   0006C6  0E04               	movlw	4
 16650   0006C8  26DF               	addwf	indf2,f,c
 16651   0006CA  5CDF               	subwf	indf2,w,c
 16652   0006CC  6ED9               	movwf	fsr2l,c
 16653   0006CE  6ADA               	clrf	fsr2h,c
 16654   0006D0  CFDE F02D          	movff	postinc2,i2vfpfcnvrt@convarg
 16655   0006D4  CFDE F02E          	movff	postinc2,i2vfpfcnvrt@convarg+1
 16656   0006D8  CFDE F02F          	movff	postinc2,i2vfpfcnvrt@convarg+2
 16657   0006DC  CFDE F030          	movff	postinc2,i2vfpfcnvrt@convarg+3
 16658                           
 16659                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1471:      break;
 16660   0006E0  EF7D  F003         	goto	i2l8760
 16661   0006E4                     i2l8758:
 16662   0006E4  5031               	movf	i2vfpfcnvrt@c^0,w,c
 16663                           
 16664                           ; Switch size 1, requested type "simple"
 16665                           ; Number of cases is 2, Range of values is 105 to 108
 16666                           ; switch strategies available:
 16667                           ; Name         Instructions Cycles
 16668                           ; simple_byte            7     4 (average)
 16669                           ;	Chosen strategy is simple_byte
 16670   0006E6  0A69               	xorlw	105	; case 105
 16671   0006E8  B4D8               	btfsc	status,2,c
 16672   0006EA  EF4C  F003         	goto	i2l8752
 16673   0006EE  0A05               	xorlw	5	; case 108
 16674   0006F0  B4D8               	btfsc	status,2,c
 16675   0006F2  EF60  F003         	goto	i2l8754
 16676   0006F6  EF7D  F003         	goto	i2l8760
 16677   0006FA                     i2l8760:
 16678                           
 16679                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 16680   0006FA  0E01               	movlw	1
 16681   0006FC  2432               	addwf	i2vfpfcnvrt@cp^0,w,c
 16682   0006FE  6E2A               	movwf	??i2_vfpfcnvrt^0,c
 16683   000700  0E00               	movlw	0
 16684   000702  2033               	addwfc	(i2vfpfcnvrt@cp+1)^0,w,c
 16685   000704  6E2B               	movwf	(??i2_vfpfcnvrt+1)^0,c
 16686   000706  5028               	movf	i2vfpfcnvrt@fmt^0,w,c
 16687   000708  6ED9               	movwf	fsr2l,c
 16688   00070A  6ADA               	clrf	fsr2h,c
 16689   00070C  C02A  FFDE         	movff	??i2_vfpfcnvrt,postinc2
 16690   000710  C02B  FFDD         	movff	??i2_vfpfcnvrt+1,postdec2
 16691                           
 16692                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 16693   000714  EF9A  F003         	goto	i2l8768
 16694   000718                     i2l8762:
 16695                           
 16696                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of i2_vfpfcnvrt is never used
 16697   000718  C027  F019         	movff	i2vfpfcnvrt@fp,i2utoa@fp
 16698   00071C  C02D  F01A         	movff	i2vfpfcnvrt@convarg,i2utoa@d
 16699   000720  C02E  F01B         	movff	i2vfpfcnvrt@convarg+1,i2utoa@d+1
 16700   000724  C02F  F01C         	movff	i2vfpfcnvrt@convarg+2,i2utoa@d+2
 16701   000728  C030  F01D         	movff	i2vfpfcnvrt@convarg+3,i2utoa@d+3
 16702   00072C  EC93  F007         	call	i2_utoa	;wreg free
 16703   000730  EF47  F004         	goto	i2l3095
 16704   000734                     i2l8768:
 16705   000734  C032  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
 16706   000738  C033  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
 16707   00073C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16708   00073C  6AF8               	clrf	tblptru,c
 16709   00073E                     	endif
 16710   00073E                     	if	0	;tblptru may be non-zero
 16711   00073E                     	endif
 16712   00073E  0008               	tblrd		*
 16713   000740  50F5               	movf	tablat,w,c
 16714                           
 16715                           ; Switch size 1, requested type "simple"
 16716                           ; Number of cases is 1, Range of values is 117 to 117
 16717                           ; switch strategies available:
 16718                           ; Name         Instructions Cycles
 16719                           ; simple_byte            4     3 (average)
 16720                           ;	Chosen strategy is simple_byte
 16721   000742  0A75               	xorlw	117	; case 117
 16722   000744  B4D8               	btfsc	status,2,c
 16723   000746  EF8C  F003         	goto	i2l8762
 16724   00074A  EFA7  F003         	goto	i2l3096
 16725   00074E                     i2l3096:
 16726                           
 16727                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 16728   00074E  6A2C               	clrf	i2vfpfcnvrt@done^0,c
 16729   000750                     
 16730                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 16731   000750  5028               	movf	i2vfpfcnvrt@fmt^0,w,c
 16732   000752  6ED9               	movwf	fsr2l,c
 16733   000754  6ADA               	clrf	fsr2h,c
 16734   000756  CFDE FFF6          	movff	postinc2,tblptrl
 16735   00075A  CFDD FFF7          	movff	postdec2,tblptrh
 16736   00075E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16737   00075E  6AF8               	clrf	tblptru,c
 16738   000760                     	endif
 16739   000760                     	if	0	;tblptru may be non-zero
 16740   000760                     	endif
 16741   000760  0008               	tblrd		*
 16742   000762  50F5               	movf	tablat,w,c
 16743   000764  0A73               	xorlw	115
 16744   000766  A4D8               	btfss	status,2,c
 16745   000768  EFB8  F003         	goto	i2u662_41
 16746   00076C  EFBA  F003         	goto	i2u662_40
 16747   000770                     i2u662_41:
 16748   000770  EFC4  F003         	goto	i2l8776
 16749   000774                     i2u662_40:
 16750   000774                     
 16751                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 16752   000774  5028               	movf	i2vfpfcnvrt@fmt^0,w,c
 16753   000776  6ED9               	movwf	fsr2l,c
 16754   000778  6ADA               	clrf	fsr2h,c
 16755   00077A  2ADE               	incf	postinc2,f,c
 16756   00077C  0E00               	movlw	0
 16757   00077E  22DD               	addwfc	postdec2,f,c
 16758   000780                     i2l8774:
 16759                           
 16760                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 16761   000780  0E01               	movlw	1
 16762   000782  6E2C               	movwf	i2vfpfcnvrt@done^0,c
 16763                           
 16764                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1660:   }
 16765   000784  EF13  F004         	goto	i2l8786
 16766   000788                     i2l8776:
 16767   000788  5028               	movf	i2vfpfcnvrt@fmt^0,w,c
 16768   00078A  6ED9               	movwf	fsr2l,c
 16769   00078C  6ADA               	clrf	fsr2h,c
 16770   00078E  CFDE FFF6          	movff	postinc2,tblptrl
 16771   000792  CFDD FFF7          	movff	postdec2,tblptrh
 16772   000796                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16773   000796  6AF8               	clrf	tblptru,c
 16774   000798                     	endif
 16775   000798                     	if	0	;tblptru may be non-zero
 16776   000798                     	endif
 16777   000798  0008               	tblrd		*
 16778   00079A  50F5               	movf	tablat,w,c
 16779   00079C  0A6C               	xorlw	108
 16780   00079E  A4D8               	btfss	status,2,c
 16781   0007A0  EFD4  F003         	goto	i2u663_41
 16782   0007A4  EFD6  F003         	goto	i2u663_40
 16783   0007A8                     i2u663_41:
 16784   0007A8  EF13  F004         	goto	i2l8786
 16785   0007AC                     i2u663_40:
 16786   0007AC  5028               	movf	i2vfpfcnvrt@fmt^0,w,c
 16787   0007AE  6ED9               	movwf	fsr2l,c
 16788   0007B0  6ADA               	clrf	fsr2h,c
 16789   0007B2  CFDE F02A          	movff	postinc2,??i2_vfpfcnvrt
 16790   0007B6  CFDD F02B          	movff	postdec2,??i2_vfpfcnvrt+1
 16791   0007BA  0E01               	movlw	1
 16792   0007BC  262A               	addwf	??i2_vfpfcnvrt^0,f,c
 16793   0007BE  0E00               	movlw	0
 16794   0007C0  222B               	addwfc	(??i2_vfpfcnvrt+1)^0,f,c
 16795   0007C2  C02A  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 16796   0007C6  C02B  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 16797   0007CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16798   0007CA  6AF8               	clrf	tblptru,c
 16799   0007CC                     	endif
 16800   0007CC                     	if	0	;tblptru may be non-zero
 16801   0007CC                     	endif
 16802   0007CC  0008               	tblrd		*
 16803   0007CE  50F5               	movf	tablat,w,c
 16804   0007D0  0A6C               	xorlw	108
 16805   0007D2  A4D8               	btfss	status,2,c
 16806   0007D4  EFEE  F003         	goto	i2u664_41
 16807   0007D8  EFF0  F003         	goto	i2u664_40
 16808   0007DC                     i2u664_41:
 16809   0007DC  EF13  F004         	goto	i2l8786
 16810   0007E0                     i2u664_40:
 16811   0007E0  5028               	movf	i2vfpfcnvrt@fmt^0,w,c
 16812   0007E2  6ED9               	movwf	fsr2l,c
 16813   0007E4  6ADA               	clrf	fsr2h,c
 16814   0007E6  CFDE F02A          	movff	postinc2,??i2_vfpfcnvrt
 16815   0007EA  CFDD F02B          	movff	postdec2,??i2_vfpfcnvrt+1
 16816   0007EE  0E02               	movlw	2
 16817   0007F0  262A               	addwf	??i2_vfpfcnvrt^0,f,c
 16818   0007F2  0E00               	movlw	0
 16819   0007F4  222B               	addwfc	(??i2_vfpfcnvrt+1)^0,f,c
 16820   0007F6  C02A  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 16821   0007FA  C02B  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 16822   0007FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16823   0007FE  6AF8               	clrf	tblptru,c
 16824   000800                     	endif
 16825   000800                     	if	0	;tblptru may be non-zero
 16826   000800                     	endif
 16827   000800  0008               	tblrd		*
 16828   000802  50F5               	movf	tablat,w,c
 16829   000804  0A73               	xorlw	115
 16830   000806  A4D8               	btfss	status,2,c
 16831   000808  EF08  F004         	goto	i2u665_41
 16832   00080C  EF0A  F004         	goto	i2u665_40
 16833   000810                     i2u665_41:
 16834   000810  EF13  F004         	goto	i2l8786
 16835   000814                     i2u665_40:
 16836   000814                     
 16837                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 16838   000814  5028               	movf	i2vfpfcnvrt@fmt^0,w,c
 16839   000816  6ED9               	movwf	fsr2l,c
 16840   000818  6ADA               	clrf	fsr2h,c
 16841   00081A  0E03               	movlw	3
 16842   00081C  26DE               	addwf	postinc2,f,c
 16843   00081E  0E00               	movlw	0
 16844   000820  22DD               	addwfc	postdec2,f,c
 16845   000822  EFC0  F003         	goto	i2l8774
 16846   000826                     i2l8786:
 16847                           
 16848                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 16849   000826  502C               	movf	i2vfpfcnvrt@done^0,w,c
 16850   000828  B4D8               	btfsc	status,2,c
 16851   00082A  EF19  F004         	goto	i2u666_41
 16852   00082E  EF1B  F004         	goto	i2u666_40
 16853   000832                     i2u666_41:
 16854   000832  EF2D  F004         	goto	i2l8792
 16855   000836                     i2u666_40:
 16856   000836                     
 16857                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of i2_vf
      +                          pfcnvrt is never used
 16858   000836  C027  F00B         	movff	i2vfpfcnvrt@fp,i2stoa@fp
 16859   00083A  5029               	movf	i2vfpfcnvrt@ap^0,w,c
 16860   00083C  6ED9               	movwf	fsr2l,c
 16861   00083E  6ADA               	clrf	fsr2h,c
 16862   000840  0E02               	movlw	2
 16863   000842  26DF               	addwf	indf2,f,c
 16864   000844  5CDF               	subwf	indf2,w,c
 16865   000846  6ED9               	movwf	fsr2l,c
 16866   000848  6ADA               	clrf	fsr2h,c
 16867   00084A  CFDE F00C          	movff	postinc2,i2stoa@s
 16868   00084E  CFDE F00D          	movff	postinc2,i2stoa@s+1
 16869   000852  ECB0  F009         	call	i2_stoa	;wreg free
 16870   000856  EF47  F004         	goto	i2l3095
 16871   00085A                     i2l8792:
 16872                           
 16873                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 16874   00085A  5028               	movf	i2vfpfcnvrt@fmt^0,w,c
 16875   00085C  6ED9               	movwf	fsr2l,c
 16876   00085E  6ADA               	clrf	fsr2h,c
 16877   000860  2ADE               	incf	postinc2,f,c
 16878   000862  0E00               	movlw	0
 16879   000864  22DD               	addwfc	postdec2,f,c
 16880   000866  EF47  F004         	goto	i2l3095
 16881   00086A                     i2l8796:
 16882                           
 16883                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 16884   00086A  5028               	movf	i2vfpfcnvrt@fmt^0,w,c
 16885   00086C  6ED9               	movwf	fsr2l,c
 16886   00086E  6ADA               	clrf	fsr2h,c
 16887   000870  CFDE FFF6          	movff	postinc2,tblptrl
 16888   000874  CFDD FFF7          	movff	postdec2,tblptrh
 16889   000878                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16890   000878  6AF8               	clrf	tblptru,c
 16891   00087A                     	endif
 16892   00087A                     	if	0	;tblptru may be non-zero
 16893   00087A                     	endif
 16894   00087A  0008               	tblrd		*
 16895   00087C  50F5               	movf	tablat,w,c
 16896   00087E  6E03               	movwf	i2fputc@c^0,c
 16897   000880  6A04               	clrf	(i2fputc@c+1)^0,c
 16898   000882  C027  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 16899   000886  ECD7  F00B         	call	i2_fputc	;wreg free
 16900   00088A  EF2D  F004         	goto	i2l8792
 16901   00088E                     i2l3095:
 16902   00088E  0012               	return		;funcret
 16903   000890                     __end_ofi2_vfpfcnvrt:
 16904                           	callstack 0
 16905                           
 16906 ;; *************** function i2_utoa *****************
 16907 ;; Defined at:
 16908 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 16909 ;; Parameters:    Size  Location     Type
 16910 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
 16911 ;;		 -> sprintf@f(11), NULL(0), 
 16912 ;;  d               4   25[COMRAM] unsigned long 
 16913 ;; Auto vars:     Size  Location     Type
 16914 ;;  i               2   33[COMRAM] int 
 16915 ;;  p               2   31[COMRAM] int 
 16916 ;;  w               2   29[COMRAM] int 
 16917 ;; Return value:  Size  Location     Type
 16918 ;;                  1    wreg      void 
 16919 ;; Registers used:
 16920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16921 ;; Tracked objects:
 16922 ;;		On entry : 0/0
 16923 ;;		On exit  : 0/0
 16924 ;;		Unchanged: 0/0
 16925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16926 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16927 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16929 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16930 ;;Total ram usage:       11 bytes
 16931 ;; Hardware stack levels used: 1
 16932 ;; Hardware stack levels required when called: 5
 16933 ;; This function calls:
 16934 ;;		i2___lldiv
 16935 ;;		i2___llmod
 16936 ;;		i2_pad
 16937 ;; This function is called by:
 16938 ;;		i2_vfpfcnvrt
 16939 ;; This function uses a non-reentrant model
 16940 ;;
 16941                           
 16942                           	psect	text82
 16943   000F26                     __ptext82:
 16944                           	callstack 0
 16945   000F26                     i2_utoa:
 16946                           	callstack 6
 16947   000F26                     
 16948                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 1005:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           1017:     p = (0 <= prec) ? prec : 1;
 16949   000F26  BE3E               	btfsc	(_prec+1)^0,7,c
 16950   000F28  EF9A  F007         	goto	i2u627_40
 16951   000F2C  EF98  F007         	goto	i2u627_41
 16952   000F30                     i2u627_41:
 16953   000F30  EFA0  F007         	goto	i2l3060
 16954   000F34                     i2u627_40:
 16955   000F34  0E00               	movlw	0
 16956   000F36  6E21               	movwf	(i2utoa@p+1)^0,c
 16957   000F38  0E01               	movlw	1
 16958   000F3A  6E20               	movwf	i2utoa@p^0,c
 16959   000F3C  EFA4  F007         	goto	i2l3062
 16960   000F40                     i2l3060:
 16961   000F40  C03D  F020         	movff	_prec,i2utoa@p
 16962   000F44  C03E  F021         	movff	_prec+1,i2utoa@p+1
 16963   000F48                     i2l3062:
 16964                           
 16965                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 16966   000F48  C0BB  F01E         	movff	_width,i2utoa@w
 16967   000F4C  C0BC  F01F         	movff	_width+1,i2utoa@w+1
 16968   000F50                     
 16969                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 16970   000F50  0E00               	movlw	0
 16971   000F52  6E23               	movwf	(i2utoa@i+1)^0,c
 16972   000F54  0E1F               	movlw	31
 16973   000F56  6E22               	movwf	i2utoa@i^0,c
 16974   000F58                     
 16975                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 16976   000F58  0101               	movlb	1	; () banked
 16977   000F5A  6B83               	clrf	(_dbuf+31)& (0+255),b
 16978                           
 16979                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 16980   000F5C  EFEE  F007         	goto	i2l8378
 16981   000F60                     i2l8368:
 16982                           
 16983                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 16984   000F60  0622               	decf	i2utoa@i^0,f,c
 16985   000F62  A0D8               	btfss	status,0,c
 16986   000F64  0623               	decf	(i2utoa@i+1)^0,f,c
 16987   000F66                     
 16988                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 16989   000F66  0E64               	movlw	low _dbuf
 16990   000F68  2422               	addwf	i2utoa@i^0,w,c
 16991   000F6A  6ED9               	movwf	fsr2l,c
 16992   000F6C  0E01               	movlw	high _dbuf
 16993   000F6E  2023               	addwfc	(i2utoa@i+1)^0,w,c
 16994   000F70  6EDA               	movwf	fsr2h,c
 16995   000F72  C01A  F001         	movff	i2utoa@d,i2___llmod@dividend
 16996   000F76  C01B  F002         	movff	i2utoa@d+1,i2___llmod@dividend+1
 16997   000F7A  C01C  F003         	movff	i2utoa@d+2,i2___llmod@dividend+2
 16998   000F7E  C01D  F004         	movff	i2utoa@d+3,i2___llmod@dividend+3
 16999   000F82  0E0A               	movlw	10
 17000   000F84  6E05               	movwf	i2___llmod@divisor^0,c
 17001   000F86  0E00               	movlw	0
 17002   000F88  6E06               	movwf	(i2___llmod@divisor+1)^0,c
 17003   000F8A  0E00               	movlw	0
 17004   000F8C  6E07               	movwf	(i2___llmod@divisor+2)^0,c
 17005   000F8E  0E00               	movlw	0
 17006   000F90  6E08               	movwf	(i2___llmod@divisor+3)^0,c
 17007   000F92  EC10  F00F         	call	i2___llmod	;wreg free
 17008   000F96  5001               	movf	?i2___llmod^0,w,c
 17009   000F98  0F30               	addlw	48
 17010   000F9A  6EDF               	movwf	indf2,c
 17011   000F9C                     
 17012                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
 17013   000F9C  0620               	decf	i2utoa@p^0,f,c
 17014   000F9E  A0D8               	btfss	status,0,c
 17015   000FA0  0621               	decf	(i2utoa@p+1)^0,f,c
 17016   000FA2                     
 17017                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 17018   000FA2  061E               	decf	i2utoa@w^0,f,c
 17019   000FA4  A0D8               	btfss	status,0,c
 17020   000FA6  061F               	decf	(i2utoa@w+1)^0,f,c
 17021   000FA8                     
 17022                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 17023   000FA8  C01A  F001         	movff	i2utoa@d,i2___lldiv@dividend
 17024   000FAC  C01B  F002         	movff	i2utoa@d+1,i2___lldiv@dividend+1
 17025   000FB0  C01C  F003         	movff	i2utoa@d+2,i2___lldiv@dividend+2
 17026   000FB4  C01D  F004         	movff	i2utoa@d+3,i2___lldiv@dividend+3
 17027   000FB8  0E0A               	movlw	10
 17028   000FBA  6E05               	movwf	i2___lldiv@divisor^0,c
 17029   000FBC  0E00               	movlw	0
 17030   000FBE  6E06               	movwf	(i2___lldiv@divisor+1)^0,c
 17031   000FC0  0E00               	movlw	0
 17032   000FC2  6E07               	movwf	(i2___lldiv@divisor+2)^0,c
 17033   000FC4  0E00               	movlw	0
 17034   000FC6  6E08               	movwf	(i2___lldiv@divisor+3)^0,c
 17035   000FC8  EC8B  F00D         	call	i2___lldiv	;wreg free
 17036   000FCC  C001  F01A         	movff	?i2___lldiv,i2utoa@d
 17037   000FD0  C002  F01B         	movff	?i2___lldiv+1,i2utoa@d+1
 17038   000FD4  C003  F01C         	movff	?i2___lldiv+2,i2utoa@d+2
 17039   000FD8  C004  F01D         	movff	?i2___lldiv+3,i2utoa@d+3
 17040   000FDC                     i2l8378:
 17041                           
 17042                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 17043   000FDC  5022               	movf	i2utoa@i^0,w,c
 17044   000FDE  1023               	iorwf	(i2utoa@i+1)^0,w,c
 17045   000FE0  B4D8               	btfsc	status,2,c
 17046   000FE2  EFF5  F007         	goto	i2u628_41
 17047   000FE6  EFF7  F007         	goto	i2u628_40
 17048   000FEA                     i2u628_41:
 17049   000FEA  EF0F  F008         	goto	i2l8384
 17050   000FEE                     i2u628_40:
 17051   000FEE  501A               	movf	i2utoa@d^0,w,c
 17052   000FF0  101B               	iorwf	(i2utoa@d+1)^0,w,c
 17053   000FF2  101C               	iorwf	(i2utoa@d+2)^0,w,c
 17054   000FF4  101D               	iorwf	(i2utoa@d+3)^0,w,c
 17055   000FF6  A4D8               	btfss	status,2,c
 17056   000FF8  EF00  F008         	goto	i2u629_41
 17057   000FFC  EF02  F008         	goto	i2u629_40
 17058   001000                     i2u629_41:
 17059   001000  EFB0  F007         	goto	i2l8368
 17060   001004                     i2u629_40:
 17061   001004  BE21               	btfsc	(i2utoa@p+1)^0,7,c
 17062   001006  EF0F  F008         	goto	i2u630_40
 17063   00100A  5021               	movf	(i2utoa@p+1)^0,w,c
 17064   00100C  E106               	bnz	i2u630_41
 17065   00100E  0420               	decf	i2utoa@p^0,w,c
 17066   001010  B0D8               	btfsc	status,0,c
 17067   001012  EF0D  F008         	goto	i2u630_41
 17068   001016  EF0F  F008         	goto	i2u630_40
 17069   00101A                     i2u630_41:
 17070   00101A  EFB0  F007         	goto	i2l8368
 17071   00101E                     i2u630_40:
 17072   00101E                     i2l8384:
 17073                           
 17074                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 17075   00101E  C019  F011         	movff	i2utoa@fp,i2pad@fp
 17076   001022  0E64               	movlw	low _dbuf
 17077   001024  2422               	addwf	i2utoa@i^0,w,c
 17078   001026  6E12               	movwf	i2pad@buf^0,c
 17079   001028  0E01               	movlw	high _dbuf
 17080   00102A  2023               	addwfc	(i2utoa@i+1)^0,w,c
 17081   00102C  6E13               	movwf	(i2pad@buf+1)^0,c
 17082   00102E  C01E  F014         	movff	i2utoa@w,i2pad@p
 17083   001032  C01F  F015         	movff	i2utoa@w+1,i2pad@p+1
 17084   001036  ECCC  F00F         	call	i2_pad	;wreg free
 17085   00103A  0012               	return		;funcret
 17086   00103C                     __end_ofi2_utoa:
 17087                           	callstack 0
 17088                           
 17089 ;; *************** function i2___llmod *****************
 17090 ;; Defined at:
 17091 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\llmod.c"
 17092 ;; Parameters:    Size  Location     Type
 17093 ;;  dividend        4    0[COMRAM] unsigned long 
 17094 ;;  divisor         4    4[COMRAM] unsigned long 
 17095 ;; Auto vars:     Size  Location     Type
 17096 ;;  counter         1    8[COMRAM] unsigned char 
 17097 ;; Return value:  Size  Location     Type
 17098 ;;                  4    0[COMRAM] unsigned long 
 17099 ;; Registers used:
 17100 ;;		wreg, status,2, status,0
 17101 ;; Tracked objects:
 17102 ;;		On entry : 0/0
 17103 ;;		On exit  : 0/0
 17104 ;;		Unchanged: 0/0
 17105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17106 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17109 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17110 ;;Total ram usage:        9 bytes
 17111 ;; Hardware stack levels used: 1
 17112 ;; This function calls:
 17113 ;;		Nothing
 17114 ;; This function is called by:
 17115 ;;		i2_utoa
 17116 ;; This function uses a non-reentrant model
 17117 ;;
 17118                           
 17119                           	psect	text83
 17120   001E20                     __ptext83:
 17121                           	callstack 0
 17122   001E20                     i2___llmod:
 17123                           	callstack 10
 17124   001E20  5005               	movf	i2___llmod@divisor^0,w,c
 17125   001E22  1006               	iorwf	(i2___llmod@divisor+1)^0,w,c
 17126   001E24  1007               	iorwf	(i2___llmod@divisor+2)^0,w,c
 17127   001E26  1008               	iorwf	(i2___llmod@divisor+3)^0,w,c
 17128   001E28  B4D8               	btfsc	status,2,c
 17129   001E2A  EF19  F00F         	goto	i2u565_41
 17130   001E2E  EF1B  F00F         	goto	i2u565_40
 17131   001E32                     i2u565_41:
 17132   001E32  EF4B  F00F         	goto	i2l2674
 17133   001E36                     i2u565_40:
 17134   001E36  0E01               	movlw	1
 17135   001E38  6E09               	movwf	i2___llmod@counter^0,c
 17136   001E3A  EF25  F00F         	goto	i2l8022
 17137   001E3E                     i2l8020:
 17138   001E3E  90D8               	bcf	status,0,c
 17139   001E40  3605               	rlcf	i2___llmod@divisor^0,f,c
 17140   001E42  3606               	rlcf	(i2___llmod@divisor+1)^0,f,c
 17141   001E44  3607               	rlcf	(i2___llmod@divisor+2)^0,f,c
 17142   001E46  3608               	rlcf	(i2___llmod@divisor+3)^0,f,c
 17143   001E48  2A09               	incf	i2___llmod@counter^0,f,c
 17144   001E4A                     i2l8022:
 17145   001E4A  AE08               	btfss	(i2___llmod@divisor+3)^0,7,c
 17146   001E4C  EF2A  F00F         	goto	i2u566_41
 17147   001E50  EF2C  F00F         	goto	i2u566_40
 17148   001E54                     i2u566_41:
 17149   001E54  EF1F  F00F         	goto	i2l8020
 17150   001E58                     i2u566_40:
 17151   001E58                     i2l8024:
 17152   001E58  5005               	movf	i2___llmod@divisor^0,w,c
 17153   001E5A  5C01               	subwf	i2___llmod@dividend^0,w,c
 17154   001E5C  5006               	movf	(i2___llmod@divisor+1)^0,w,c
 17155   001E5E  5802               	subwfb	(i2___llmod@dividend+1)^0,w,c
 17156   001E60  5007               	movf	(i2___llmod@divisor+2)^0,w,c
 17157   001E62  5803               	subwfb	(i2___llmod@dividend+2)^0,w,c
 17158   001E64  5008               	movf	(i2___llmod@divisor+3)^0,w,c
 17159   001E66  5804               	subwfb	(i2___llmod@dividend+3)^0,w,c
 17160   001E68  A0D8               	btfss	status,0,c
 17161   001E6A  EF39  F00F         	goto	i2u567_41
 17162   001E6E  EF3B  F00F         	goto	i2u567_40
 17163   001E72                     i2u567_41:
 17164   001E72  EF43  F00F         	goto	i2l8028
 17165   001E76                     i2u567_40:
 17166   001E76  5005               	movf	i2___llmod@divisor^0,w,c
 17167   001E78  5E01               	subwf	i2___llmod@dividend^0,f,c
 17168   001E7A  5006               	movf	(i2___llmod@divisor+1)^0,w,c
 17169   001E7C  5A02               	subwfb	(i2___llmod@dividend+1)^0,f,c
 17170   001E7E  5007               	movf	(i2___llmod@divisor+2)^0,w,c
 17171   001E80  5A03               	subwfb	(i2___llmod@dividend+2)^0,f,c
 17172   001E82  5008               	movf	(i2___llmod@divisor+3)^0,w,c
 17173   001E84  5A04               	subwfb	(i2___llmod@dividend+3)^0,f,c
 17174   001E86                     i2l8028:
 17175   001E86  90D8               	bcf	status,0,c
 17176   001E88  3208               	rrcf	(i2___llmod@divisor+3)^0,f,c
 17177   001E8A  3207               	rrcf	(i2___llmod@divisor+2)^0,f,c
 17178   001E8C  3206               	rrcf	(i2___llmod@divisor+1)^0,f,c
 17179   001E8E  3205               	rrcf	i2___llmod@divisor^0,f,c
 17180   001E90  2E09               	decfsz	i2___llmod@counter^0,f,c
 17181   001E92  EF2C  F00F         	goto	i2l8024
 17182   001E96                     i2l2674:
 17183   001E96  C001  F001         	movff	i2___llmod@dividend,?i2___llmod
 17184   001E9A  C002  F002         	movff	i2___llmod@dividend+1,?i2___llmod+1
 17185   001E9E  C003  F003         	movff	i2___llmod@dividend+2,?i2___llmod+2
 17186   001EA2  C004  F004         	movff	i2___llmod@dividend+3,?i2___llmod+3
 17187   001EA6  0012               	return		;funcret
 17188   001EA8                     __end_ofi2___llmod:
 17189                           	callstack 0
 17190                           
 17191 ;; *************** function i2___lldiv *****************
 17192 ;; Defined at:
 17193 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
 17194 ;; Parameters:    Size  Location     Type
 17195 ;;  dividend        4    0[COMRAM] unsigned long 
 17196 ;;  divisor         4    4[COMRAM] unsigned long 
 17197 ;; Auto vars:     Size  Location     Type
 17198 ;;  quotient        4    8[COMRAM] unsigned long 
 17199 ;;  counter         1   12[COMRAM] unsigned char 
 17200 ;; Return value:  Size  Location     Type
 17201 ;;                  4    0[COMRAM] unsigned long 
 17202 ;; Registers used:
 17203 ;;		wreg, status,2, status,0
 17204 ;; Tracked objects:
 17205 ;;		On entry : 0/0
 17206 ;;		On exit  : 0/0
 17207 ;;		Unchanged: 0/0
 17208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17209 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17210 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17212 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17213 ;;Total ram usage:       13 bytes
 17214 ;; Hardware stack levels used: 1
 17215 ;; This function calls:
 17216 ;;		Nothing
 17217 ;; This function is called by:
 17218 ;;		i2_utoa
 17219 ;; This function uses a non-reentrant model
 17220 ;;
 17221                           
 17222                           	psect	text84
 17223   001B16                     __ptext84:
 17224                           	callstack 0
 17225   001B16                     i2___lldiv:
 17226                           	callstack 10
 17227   001B16  0E00               	movlw	0
 17228   001B18  6E09               	movwf	i2___lldiv@quotient^0,c
 17229   001B1A  0E00               	movlw	0
 17230   001B1C  6E0A               	movwf	(i2___lldiv@quotient+1)^0,c
 17231   001B1E  0E00               	movlw	0
 17232   001B20  6E0B               	movwf	(i2___lldiv@quotient+2)^0,c
 17233   001B22  0E00               	movlw	0
 17234   001B24  6E0C               	movwf	(i2___lldiv@quotient+3)^0,c
 17235   001B26  5005               	movf	i2___lldiv@divisor^0,w,c
 17236   001B28  1006               	iorwf	(i2___lldiv@divisor+1)^0,w,c
 17237   001B2A  1007               	iorwf	(i2___lldiv@divisor+2)^0,w,c
 17238   001B2C  1008               	iorwf	(i2___lldiv@divisor+3)^0,w,c
 17239   001B2E  B4D8               	btfsc	status,2,c
 17240   001B30  EF9C  F00D         	goto	i2u550_41
 17241   001B34  EF9E  F00D         	goto	i2u550_40
 17242   001B38                     i2u550_41:
 17243   001B38  EFD4  F00D         	goto	i2l2281
 17244   001B3C                     i2u550_40:
 17245   001B3C  0E01               	movlw	1
 17246   001B3E  6E0D               	movwf	i2___lldiv@counter^0,c
 17247   001B40  EFA8  F00D         	goto	i2l7922
 17248   001B44                     i2l7920:
 17249   001B44  90D8               	bcf	status,0,c
 17250   001B46  3605               	rlcf	i2___lldiv@divisor^0,f,c
 17251   001B48  3606               	rlcf	(i2___lldiv@divisor+1)^0,f,c
 17252   001B4A  3607               	rlcf	(i2___lldiv@divisor+2)^0,f,c
 17253   001B4C  3608               	rlcf	(i2___lldiv@divisor+3)^0,f,c
 17254   001B4E  2A0D               	incf	i2___lldiv@counter^0,f,c
 17255   001B50                     i2l7922:
 17256   001B50  AE08               	btfss	(i2___lldiv@divisor+3)^0,7,c
 17257   001B52  EFAD  F00D         	goto	i2u551_41
 17258   001B56  EFAF  F00D         	goto	i2u551_40
 17259   001B5A                     i2u551_41:
 17260   001B5A  EFA2  F00D         	goto	i2l7920
 17261   001B5E                     i2u551_40:
 17262   001B5E                     i2l7924:
 17263   001B5E  90D8               	bcf	status,0,c
 17264   001B60  3609               	rlcf	i2___lldiv@quotient^0,f,c
 17265   001B62  360A               	rlcf	(i2___lldiv@quotient+1)^0,f,c
 17266   001B64  360B               	rlcf	(i2___lldiv@quotient+2)^0,f,c
 17267   001B66  360C               	rlcf	(i2___lldiv@quotient+3)^0,f,c
 17268   001B68  5005               	movf	i2___lldiv@divisor^0,w,c
 17269   001B6A  5C01               	subwf	i2___lldiv@dividend^0,w,c
 17270   001B6C  5006               	movf	(i2___lldiv@divisor+1)^0,w,c
 17271   001B6E  5802               	subwfb	(i2___lldiv@dividend+1)^0,w,c
 17272   001B70  5007               	movf	(i2___lldiv@divisor+2)^0,w,c
 17273   001B72  5803               	subwfb	(i2___lldiv@dividend+2)^0,w,c
 17274   001B74  5008               	movf	(i2___lldiv@divisor+3)^0,w,c
 17275   001B76  5804               	subwfb	(i2___lldiv@dividend+3)^0,w,c
 17276   001B78  A0D8               	btfss	status,0,c
 17277   001B7A  EFC1  F00D         	goto	i2u552_41
 17278   001B7E  EFC3  F00D         	goto	i2u552_40
 17279   001B82                     i2u552_41:
 17280   001B82  EFCC  F00D         	goto	i2l7932
 17281   001B86                     i2u552_40:
 17282   001B86  5005               	movf	i2___lldiv@divisor^0,w,c
 17283   001B88  5E01               	subwf	i2___lldiv@dividend^0,f,c
 17284   001B8A  5006               	movf	(i2___lldiv@divisor+1)^0,w,c
 17285   001B8C  5A02               	subwfb	(i2___lldiv@dividend+1)^0,f,c
 17286   001B8E  5007               	movf	(i2___lldiv@divisor+2)^0,w,c
 17287   001B90  5A03               	subwfb	(i2___lldiv@dividend+2)^0,f,c
 17288   001B92  5008               	movf	(i2___lldiv@divisor+3)^0,w,c
 17289   001B94  5A04               	subwfb	(i2___lldiv@dividend+3)^0,f,c
 17290   001B96  8009               	bsf	i2___lldiv@quotient^0,0,c
 17291   001B98                     i2l7932:
 17292   001B98  90D8               	bcf	status,0,c
 17293   001B9A  3208               	rrcf	(i2___lldiv@divisor+3)^0,f,c
 17294   001B9C  3207               	rrcf	(i2___lldiv@divisor+2)^0,f,c
 17295   001B9E  3206               	rrcf	(i2___lldiv@divisor+1)^0,f,c
 17296   001BA0  3205               	rrcf	i2___lldiv@divisor^0,f,c
 17297   001BA2  2E0D               	decfsz	i2___lldiv@counter^0,f,c
 17298   001BA4  EFAF  F00D         	goto	i2l7924
 17299   001BA8                     i2l2281:
 17300   001BA8  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 17301   001BAC  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 17302   001BB0  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 17303   001BB4  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 17304   001BB8  0012               	return		;funcret
 17305   001BBA                     __end_ofi2___lldiv:
 17306                           	callstack 0
 17307                           
 17308 ;; *************** function i2_stoa *****************
 17309 ;; Defined at:
 17310 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 17311 ;; Parameters:    Size  Location     Type
 17312 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
 17313 ;;		 -> sprintf@f(11), NULL(0), 
 17314 ;;  s               2   11[COMRAM] PTR unsigned char 
 17315 ;;		 -> ?i2_printf(2), F183$tm_year(2), F183$tm_mon(2), F183$tm_mday(2), 
 17316 ;;		 -> F183$tm_hour(2), F183$tm_min(2), F183$tm_sec(2), ?_printf(2), 
 17317 ;;		 -> ?_sprintf(2), STR_44(2), STR_43(2), STR_42(2), 
 17318 ;;		 -> STR_41(2), STR_12(2), STR_10(2), STR_8(2), 
 17319 ;;		 -> STR_6(2), 
 17320 ;; Auto vars:     Size  Location     Type
 17321 ;;  l               2   19[COMRAM] int 
 17322 ;;  cp              2   17[COMRAM] PTR unsigned char 
 17323 ;;		 -> ?i2_printf(2), F183$tm_year(2), F183$tm_mon(2), F183$tm_mday(2), 
 17324 ;;		 -> F183$tm_hour(2), F183$tm_min(2), F183$tm_sec(2), ?_printf(2), 
 17325 ;;		 -> STR_46(7), ?_sprintf(2), STR_44(2), STR_43(2), 
 17326 ;;		 -> STR_42(2), STR_41(2), STR_12(2), STR_10(2), 
 17327 ;;		 -> STR_8(2), STR_6(2), 
 17328 ;;  p               2   15[COMRAM] int 
 17329 ;; Return value:  Size  Location     Type
 17330 ;;                  1    wreg      void 
 17331 ;; Registers used:
 17332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17333 ;; Tracked objects:
 17334 ;;		On entry : 0/0
 17335 ;;		On exit  : 0/0
 17336 ;;		Unchanged: 0/0
 17337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17338 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17339 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17340 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17341 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17342 ;;Total ram usage:       11 bytes
 17343 ;; Hardware stack levels used: 1
 17344 ;; Hardware stack levels required when called: 3
 17345 ;; This function calls:
 17346 ;;		i2_fputc
 17347 ;; This function is called by:
 17348 ;;		i2_vfpfcnvrt
 17349 ;; This function uses a non-reentrant model
 17350 ;;
 17351                           
 17352                           	psect	text85
 17353   001360                     __ptext85:
 17354                           	callstack 0
 17355   001360                     i2_stoa:
 17356                           	callstack 8
 17357   001360                     
 17358                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 951
      +                          :     cp = s;
 17359   001360  C00C  F012         	movff	i2stoa@s,i2stoa@cp
 17360   001364  C00D  F013         	movff	i2stoa@s+1,i2stoa@cp+1
 17361                           
 17362                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 17363   001368  5012               	movf	i2stoa@cp^0,w,c
 17364   00136A  1013               	iorwf	(i2stoa@cp+1)^0,w,c
 17365   00136C  A4D8               	btfss	status,2,c
 17366   00136E  EFBB  F009         	goto	i2u620_41
 17367   001372  EFBD  F009         	goto	i2u620_40
 17368   001376                     i2u620_41:
 17369   001376  EFC1  F009         	goto	i2l8342
 17370   00137A                     i2u620_40:
 17371   00137A                     
 17372                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 17373   00137A  0ED8               	movlw	low STR_46
 17374   00137C  6E12               	movwf	i2stoa@cp^0,c
 17375   00137E  0EFF               	movlw	high STR_46
 17376   001380  6E13               	movwf	(i2stoa@cp+1)^0,c
 17377   001382                     i2l8342:
 17378                           
 17379                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 17380   001382  0E00               	movlw	0
 17381   001384  6E15               	movwf	(i2stoa@l+1)^0,c
 17382   001386  0E00               	movlw	0
 17383   001388  6E14               	movwf	i2stoa@l^0,c
 17384   00138A  EFC9  F009         	goto	i2l8346
 17385   00138E                     i2l8344:
 17386   00138E  4A14               	infsnz	i2stoa@l^0,f,c
 17387   001390  2A15               	incf	(i2stoa@l+1)^0,f,c
 17388   001392                     i2l8346:
 17389   001392  5014               	movf	i2stoa@l^0,w,c
 17390   001394  2412               	addwf	i2stoa@cp^0,w,c
 17391   001396  6E0E               	movwf	??i2_stoa^0,c
 17392   001398  5015               	movf	(i2stoa@l+1)^0,w,c
 17393   00139A  2013               	addwfc	(i2stoa@cp+1)^0,w,c
 17394   00139C  6E0F               	movwf	(??i2_stoa+1)^0,c
 17395   00139E  C00E  FFF6         	movff	??i2_stoa,tblptrl
 17396   0013A2  C00F  FFF7         	movff	??i2_stoa+1,tblptrh
 17397   0013A6  0E00               	movlw	low (__mediumconst shr (0+16))
 17398   0013A8  6EF8               	movwf	tblptru,c
 17399   0013AA  0E0E               	movlw	(high __ramtop+-1)
 17400   0013AC  64F7               	cpfsgt	tblptrh,c
 17401   0013AE  D003               	bra	i2u621_47
 17402   0013B0  0008               	tblrd		*
 17403   0013B2  50F5               	movf	tablat,w,c
 17404   0013B4  D005               	bra	i2u621_40
 17405   0013B6                     i2u621_47:
 17406   0013B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 17407   0013BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 17408   0013BE  50EF               	movf	indf0,w,c
 17409   0013C0                     i2u621_40:
 17410   0013C0  0900               	iorlw	0
 17411   0013C2  A4D8               	btfss	status,2,c
 17412   0013C4  EFE6  F009         	goto	i2u622_41
 17413   0013C8  EFE8  F009         	goto	i2u622_40
 17414   0013CC                     i2u622_41:
 17415   0013CC  EFC7  F009         	goto	i2l8344
 17416   0013D0                     i2u622_40:
 17417   0013D0                     
 17418                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 961:  if (!(prec 
      +                          < 0) && (prec < l)) {
 17419   0013D0  BE3E               	btfsc	(_prec+1)^0,7,c
 17420   0013D2  EFED  F009         	goto	i2u623_41
 17421   0013D6  EFEF  F009         	goto	i2u623_40
 17422   0013DA                     i2u623_41:
 17423   0013DA  EF02  F00A         	goto	i2l3052
 17424   0013DE                     i2u623_40:
 17425   0013DE  5014               	movf	i2stoa@l^0,w,c
 17426   0013E0  5C3D               	subwf	_prec^0,w,c
 17427   0013E2  503E               	movf	(_prec+1)^0,w,c
 17428   0013E4  0A80               	xorlw	128
 17429   0013E6  6E0E               	movwf	??i2_stoa^0,c
 17430   0013E8  5015               	movf	(i2stoa@l+1)^0,w,c
 17431   0013EA  0A80               	xorlw	128
 17432   0013EC  580E               	subwfb	??i2_stoa^0,w,c
 17433   0013EE  B0D8               	btfsc	status,0,c
 17434   0013F0  EFFC  F009         	goto	i2u624_41
 17435   0013F4  EFFE  F009         	goto	i2u624_40
 17436   0013F8                     i2u624_41:
 17437   0013F8  EF02  F00A         	goto	i2l3052
 17438   0013FC                     i2u624_40:
 17439   0013FC                     
 17440                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 962:   l = prec;
 17441   0013FC  C03D  F014         	movff	_prec,i2stoa@l
 17442   001400  C03E  F015         	movff	_prec+1,i2stoa@l+1
 17443   001404                     i2l3052:
 17444                           
 17445                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 965:     p = l;
 17446   001404  C014  F010         	movff	i2stoa@l,i2stoa@p
 17447   001408  C015  F011         	movff	i2stoa@l+1,i2stoa@p+1
 17448                           
 17449                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 17450   00140C  EF23  F00A         	goto	i2l8358
 17451   001410                     i2l8354:
 17452                           
 17453                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 17454   001410  C012  FFF6         	movff	i2stoa@cp,tblptrl
 17455   001414  C013  FFF7         	movff	i2stoa@cp+1,tblptrh
 17456   001418  0E00               	movlw	low (__mediumconst shr (0+16))
 17457   00141A  6EF8               	movwf	tblptru,c
 17458   00141C  0E0E               	movlw	(high __ramtop+-1)
 17459   00141E  64F7               	cpfsgt	tblptrh,c
 17460   001420  D003               	bra	i2u625_47
 17461   001422  0008               	tblrd		*
 17462   001424  50F5               	movf	tablat,w,c
 17463   001426  D005               	bra	i2u625_40
 17464   001428                     i2u625_47:
 17465   001428  CFF6 FFE9          	movff	tblptrl,fsr0l
 17466   00142C  CFF7 FFEA          	movff	tblptrh,fsr0h
 17467   001430  50EF               	movf	indf0,w,c
 17468   001432                     i2u625_40:
 17469   001432  6E0E               	movwf	??i2_stoa^0,c
 17470   001434  500E               	movf	??i2_stoa^0,w,c
 17471   001436  6E03               	movwf	i2fputc@c^0,c
 17472   001438  6A04               	clrf	(i2fputc@c+1)^0,c
 17473   00143A  C00B  F005         	movff	i2stoa@fp,i2fputc@fp
 17474   00143E  ECD7  F00B         	call	i2_fputc	;wreg free
 17475   001442                     
 17476                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 17477   001442  4A12               	infsnz	i2stoa@cp^0,f,c
 17478   001444  2A13               	incf	(i2stoa@cp+1)^0,f,c
 17479   001446                     i2l8358:
 17480                           
 17481                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 17482   001446  0610               	decf	i2stoa@p^0,f,c
 17483   001448  A0D8               	btfss	status,0,c
 17484   00144A  0611               	decf	(i2stoa@p+1)^0,f,c
 17485   00144C  2810               	incf	i2stoa@p^0,w,c
 17486   00144E  E106               	bnz	i2u626_41
 17487   001450  2811               	incf	(i2stoa@p+1)^0,w,c
 17488   001452  A4D8               	btfss	status,2,c
 17489   001454  EF2E  F00A         	goto	i2u626_41
 17490   001458  EF30  F00A         	goto	i2u626_40
 17491   00145C                     i2u626_41:
 17492   00145C  EF08  F00A         	goto	i2l8354
 17493   001460                     i2u626_40:
 17494   001460  0012               	return		;funcret
 17495   001462                     __end_ofi2_stoa:
 17496                           	callstack 0
 17497                           
 17498 ;; *************** function i2_read_prec_or_width *****************
 17499 ;; Defined at:
 17500 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 17501 ;; Parameters:    Size  Location     Type
 17502 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
 17503 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 17504 ;;  ap              1    1[COMRAM] PTR PTR void [1]
 17505 ;;		 -> i2printf@ap(2), printf@ap(2), sprintf@ap(2), 
 17506 ;; Auto vars:     Size  Location     Type
 17507 ;;  n               2    5[COMRAM] int 
 17508 ;;  c               1    4[COMRAM] unsigned char 
 17509 ;; Return value:  Size  Location     Type
 17510 ;;                  2    0[COMRAM] int 
 17511 ;; Registers used:
 17512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17513 ;; Tracked objects:
 17514 ;;		On entry : 0/0
 17515 ;;		On exit  : 0/0
 17516 ;;		Unchanged: 0/0
 17517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17519 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17520 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17521 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17522 ;;Total ram usage:        7 bytes
 17523 ;; Hardware stack levels used: 1
 17524 ;; This function calls:
 17525 ;;		Nothing
 17526 ;; This function is called by:
 17527 ;;		i2_vfpfcnvrt
 17528 ;; This function uses a non-reentrant model
 17529 ;;
 17530                           
 17531                           	psect	text86
 17532   00191A                     __ptext86:
 17533                           	callstack 0
 17534   00191A                     i2_read_prec_or_width:
 17535                           	callstack 11
 17536   00191A                     
 17537                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 17538   00191A  0E00               	movlw	0
 17539   00191C  6E07               	movwf	(i2read_prec_or_width@n+1)^0,c
 17540   00191E  0E00               	movlw	0
 17541   001920  6E06               	movwf	i2read_prec_or_width@n^0,c
 17542   001922                     
 17543                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 17544   001922  5001               	movf	i2read_prec_or_width@fmt^0,w,c
 17545   001924  6ED9               	movwf	fsr2l,c
 17546   001926  6ADA               	clrf	fsr2h,c
 17547   001928  CFDE FFF6          	movff	postinc2,tblptrl
 17548   00192C  CFDD FFF7          	movff	postdec2,tblptrh
 17549   001930                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17550   001930  6AF8               	clrf	tblptru,c
 17551   001932                     	endif
 17552   001932                     	if	0	;tblptru may be non-zero
 17553   001932                     	endif
 17554   001932  0008               	tblrd		*
 17555   001934  50F5               	movf	tablat,w,c
 17556   001936  0A2A               	xorlw	42
 17557   001938  A4D8               	btfss	status,2,c
 17558   00193A  EFA1  F00C         	goto	i2u631_41
 17559   00193E  EFA3  F00C         	goto	i2u631_40
 17560   001942                     i2u631_41:
 17561   001942  EFCC  F00C         	goto	i2l8400
 17562   001946                     i2u631_40:
 17563   001946                     
 17564                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 17565   001946  5001               	movf	i2read_prec_or_width@fmt^0,w,c
 17566   001948  6ED9               	movwf	fsr2l,c
 17567   00194A  6ADA               	clrf	fsr2h,c
 17568   00194C  2ADE               	incf	postinc2,f,c
 17569   00194E  0E00               	movlw	0
 17570   001950  22DD               	addwfc	postdec2,f,c
 17571   001952                     
 17572                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 17573   001952  5002               	movf	i2read_prec_or_width@ap^0,w,c
 17574   001954  6ED9               	movwf	fsr2l,c
 17575   001956  6ADA               	clrf	fsr2h,c
 17576   001958  0E02               	movlw	2
 17577   00195A  26DF               	addwf	indf2,f,c
 17578   00195C  5CDF               	subwf	indf2,w,c
 17579   00195E  6ED9               	movwf	fsr2l,c
 17580   001960  6ADA               	clrf	fsr2h,c
 17581   001962  CFDE F006          	movff	postinc2,i2read_prec_or_width@n
 17582   001966  CFDE F007          	movff	postinc2,i2read_prec_or_width@n+1
 17583                           
 17584                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 17585   00196A  EFE0  F00C         	goto	i2l3072
 17586   00196E                     i2l8396:
 17587                           
 17588                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 17589   00196E  0E0A               	movlw	10
 17590   001970  0206               	mulwf	i2read_prec_or_width@n^0,c
 17591   001972  CFF3 F003          	movff	prodl,??i2_read_prec_or_width
 17592   001976  CFF4 F004          	movff	prodh,??i2_read_prec_or_width+1
 17593   00197A  0207               	mulwf	(i2read_prec_or_width@n+1)^0,c
 17594   00197C  50F3               	movf	prodl,w,c
 17595   00197E  2604               	addwf	(??i2_read_prec_or_width+1)^0,f,c
 17596   001980  5005               	movf	i2read_prec_or_width@c^0,w,c
 17597   001982  2403               	addwf	??i2_read_prec_or_width^0,w,c
 17598   001984  6E06               	movwf	i2read_prec_or_width@n^0,c
 17599   001986  0E00               	movlw	0
 17600   001988  2004               	addwfc	(??i2_read_prec_or_width+1)^0,w,c
 17601   00198A  6E07               	movwf	(i2read_prec_or_width@n+1)^0,c
 17602   00198C                     
 17603                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 17604   00198C  5001               	movf	i2read_prec_or_width@fmt^0,w,c
 17605   00198E  6ED9               	movwf	fsr2l,c
 17606   001990  6ADA               	clrf	fsr2h,c
 17607   001992  2ADE               	incf	postinc2,f,c
 17608   001994  0E00               	movlw	0
 17609   001996  22DD               	addwfc	postdec2,f,c
 17610   001998                     i2l8400:
 17611                           
 17612                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 17613   001998  5001               	movf	i2read_prec_or_width@fmt^0,w,c
 17614   00199A  6ED9               	movwf	fsr2l,c
 17615   00199C  6ADA               	clrf	fsr2h,c
 17616   00199E  CFDE FFF6          	movff	postinc2,tblptrl
 17617   0019A2  CFDD FFF7          	movff	postdec2,tblptrh
 17618   0019A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17619   0019A6  6AF8               	clrf	tblptru,c
 17620   0019A8                     	endif
 17621   0019A8                     	if	0	;tblptru may be non-zero
 17622   0019A8                     	endif
 17623   0019A8  0008               	tblrd		*
 17624   0019AA  50F5               	movf	tablat,w,c
 17625   0019AC  0FD0               	addlw	208
 17626   0019AE  6E05               	movwf	i2read_prec_or_width@c^0,c
 17627   0019B0  0E09               	movlw	9
 17628   0019B2  6405               	cpfsgt	i2read_prec_or_width@c^0,c
 17629   0019B4  EFDE  F00C         	goto	i2u632_41
 17630   0019B8  EFE0  F00C         	goto	i2u632_40
 17631   0019BC                     i2u632_41:
 17632   0019BC  EFB7  F00C         	goto	i2l8396
 17633   0019C0                     i2u632_40:
 17634   0019C0                     i2l3072:
 17635                           
 17636                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 17637   0019C0  C006  F001         	movff	i2read_prec_or_width@n,?i2_read_prec_or_width
 17638   0019C4  C007  F002         	movff	i2read_prec_or_width@n+1,?i2_read_prec_or_width+1
 17639   0019C8  0012               	return		;funcret
 17640   0019CA                     __end_ofi2_read_prec_or_width:
 17641                           	callstack 0
 17642                           
 17643 ;; *************** function i2_dtoa *****************
 17644 ;; Defined at:
 17645 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 17646 ;; Parameters:    Size  Location     Type
 17647 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
 17648 ;;		 -> sprintf@f(11), NULL(0), 
 17649 ;;  d               4   25[COMRAM] long 
 17650 ;; Auto vars:     Size  Location     Type
 17651 ;;  i               2   36[COMRAM] int 
 17652 ;;  p               2   33[COMRAM] int 
 17653 ;;  w               2   31[COMRAM] int 
 17654 ;;  s               1   35[COMRAM] unsigned char 
 17655 ;; Return value:  Size  Location     Type
 17656 ;;                  1    wreg      void 
 17657 ;; Registers used:
 17658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17659 ;; Tracked objects:
 17660 ;;		On entry : 0/0
 17661 ;;		On exit  : 0/0
 17662 ;;		Unchanged: 0/0
 17663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17664 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17665 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17667 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17668 ;;Total ram usage:       14 bytes
 17669 ;; Hardware stack levels used: 1
 17670 ;; Hardware stack levels required when called: 5
 17671 ;; This function calls:
 17672 ;;		i2___aldiv
 17673 ;;		i2___almod
 17674 ;;		i2_abs
 17675 ;;		i2_pad
 17676 ;; This function is called by:
 17677 ;;		i2_vfpfcnvrt
 17678 ;; This function uses a non-reentrant model
 17679 ;;
 17680                           
 17681                           	psect	text87
 17682   000C66                     __ptext87:
 17683                           	callstack 0
 17684   000C66                     i2_dtoa:
 17685                           	callstack 6
 17686   000C66                     
 17687                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 17688   000C66  BE1D               	btfsc	(i2dtoa@d+3)^0,7,c
 17689   000C68  EF38  F006         	goto	i2u611_41
 17690   000C6C  EF3B  F006         	goto	i2u611_40
 17691   000C70                     i2u611_41:
 17692   000C70  0E01               	movlw	1
 17693   000C72  EF3C  F006         	goto	i2u612_40
 17694   000C76                     i2u611_40:
 17695   000C76  0E00               	movlw	0
 17696   000C78                     i2u612_40:
 17697   000C78  6E24               	movwf	i2dtoa@s^0,c
 17698                           
 17699                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 17700   000C7A  BE3E               	btfsc	(_prec+1)^0,7,c
 17701   000C7C  EF44  F006         	goto	i2u613_40
 17702   000C80  EF42  F006         	goto	i2u613_41
 17703   000C84                     i2u613_41:
 17704   000C84  EF4A  F006         	goto	i2l3030
 17705   000C88                     i2u613_40:
 17706   000C88  0E00               	movlw	0
 17707   000C8A  6E23               	movwf	(i2dtoa@p+1)^0,c
 17708   000C8C  0E01               	movlw	1
 17709   000C8E  6E22               	movwf	i2dtoa@p^0,c
 17710   000C90  EF4E  F006         	goto	i2l3032
 17711   000C94                     i2l3030:
 17712   000C94  C03D  F022         	movff	_prec,i2dtoa@p
 17713   000C98  C03E  F023         	movff	_prec+1,i2dtoa@p+1
 17714   000C9C                     i2l3032:
 17715                           
 17716                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 17717   000C9C  C0BB  F020         	movff	_width,i2dtoa@w
 17718   000CA0  C0BC  F021         	movff	_width+1,i2dtoa@w+1
 17719   000CA4                     
 17720                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 17721   000CA4  5024               	movf	i2dtoa@s^0,w,c
 17722   000CA6  B4D8               	btfsc	status,2,c
 17723   000CA8  EF58  F006         	goto	i2u614_41
 17724   000CAC  EF5A  F006         	goto	i2u614_40
 17725   000CB0                     i2u614_41:
 17726   000CB0  EF71  F006         	goto	i2l3033
 17727   000CB4                     i2u614_40:
 17728   000CB4                     
 17729                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 17730   000CB4  0620               	decf	i2dtoa@w^0,f,c
 17731   000CB6  A0D8               	btfss	status,0,c
 17732   000CB8  0621               	decf	(i2dtoa@w+1)^0,f,c
 17733   000CBA                     
 17734                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 17735   000CBA  5024               	movf	i2dtoa@s^0,w,c
 17736   000CBC  A4D8               	btfss	status,2,c
 17737   000CBE  EF63  F006         	goto	i2u615_41
 17738   000CC2  EF65  F006         	goto	i2u615_40
 17739   000CC6                     i2u615_41:
 17740   000CC6  EF6B  F006         	goto	i2l8306
 17741   000CCA                     i2u615_40:
 17742   000CCA  0E00               	movlw	0
 17743   000CCC  6E1F               	movwf	(i2_dtoa$5818+1)^0,c
 17744   000CCE  0E2B               	movlw	43
 17745   000CD0  6E1E               	movwf	i2_dtoa$5818^0,c
 17746   000CD2  EF6F  F006         	goto	i2l8308
 17747   000CD6                     i2l8306:
 17748   000CD6  0E00               	movlw	0
 17749   000CD8  6E1F               	movwf	(i2_dtoa$5818+1)^0,c
 17750   000CDA  0E2D               	movlw	45
 17751   000CDC  6E1E               	movwf	i2_dtoa$5818^0,c
 17752   000CDE                     i2l8308:
 17753   000CDE  C01E  F024         	movff	i2_dtoa$5818,i2dtoa@s
 17754   000CE2                     i2l3033:
 17755                           
 17756                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 17757   000CE2  0E00               	movlw	0
 17758   000CE4  6E26               	movwf	(i2dtoa@i+1)^0,c
 17759   000CE6  0E1F               	movlw	31
 17760   000CE8  6E25               	movwf	i2dtoa@i^0,c
 17761   000CEA                     
 17762                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 17763   000CEA  0101               	movlb	1	; () banked
 17764   000CEC  6B83               	clrf	(_dbuf+31)& (0+255),b
 17765                           
 17766                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 17767   000CEE  EFBD  F006         	goto	i2l8322
 17768   000CF2                     i2l8312:
 17769                           
 17770                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 17771   000CF2  0625               	decf	i2dtoa@i^0,f,c
 17772   000CF4  A0D8               	btfss	status,0,c
 17773   000CF6  0626               	decf	(i2dtoa@i+1)^0,f,c
 17774   000CF8                     
 17775                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 17776   000CF8  0E64               	movlw	low _dbuf
 17777   000CFA  2425               	addwf	i2dtoa@i^0,w,c
 17778   000CFC  6ED9               	movwf	fsr2l,c
 17779   000CFE  0E01               	movlw	high _dbuf
 17780   000D00  2026               	addwfc	(i2dtoa@i+1)^0,w,c
 17781   000D02  6EDA               	movwf	fsr2h,c
 17782   000D04  C01A  F001         	movff	i2dtoa@d,i2___almod@dividend
 17783   000D08  C01B  F002         	movff	i2dtoa@d+1,i2___almod@dividend+1
 17784   000D0C  C01C  F003         	movff	i2dtoa@d+2,i2___almod@dividend+2
 17785   000D10  C01D  F004         	movff	i2dtoa@d+3,i2___almod@dividend+3
 17786   000D14  0E0A               	movlw	10
 17787   000D16  6E05               	movwf	i2___almod@divisor^0,c
 17788   000D18  0E00               	movlw	0
 17789   000D1A  6E06               	movwf	(i2___almod@divisor+1)^0,c
 17790   000D1C  0E00               	movlw	0
 17791   000D1E  6E07               	movwf	(i2___almod@divisor+2)^0,c
 17792   000D20  0E00               	movlw	0
 17793   000D22  6E08               	movwf	(i2___almod@divisor+3)^0,c
 17794   000D24  ECA7  F00A         	call	i2___almod	;wreg free
 17795   000D28  C001  F00B         	movff	?i2___almod,i2abs@a
 17796   000D2C  C002  F00C         	movff	?i2___almod+1,i2abs@a+1
 17797   000D30  ECCC  F012         	call	i2_abs	;wreg free
 17798   000D34  500B               	movf	?i2_abs^0,w,c
 17799   000D36  0F30               	addlw	48
 17800   000D38  6EDF               	movwf	indf2,c
 17801   000D3A                     
 17802                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 567:         --p;
 17803   000D3A  0622               	decf	i2dtoa@p^0,f,c
 17804   000D3C  A0D8               	btfss	status,0,c
 17805   000D3E  0623               	decf	(i2dtoa@p+1)^0,f,c
 17806   000D40                     
 17807                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 17808   000D40  0620               	decf	i2dtoa@w^0,f,c
 17809   000D42  A0D8               	btfss	status,0,c
 17810   000D44  0621               	decf	(i2dtoa@w+1)^0,f,c
 17811   000D46                     
 17812                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 17813   000D46  C01A  F001         	movff	i2dtoa@d,i2___aldiv@dividend
 17814   000D4A  C01B  F002         	movff	i2dtoa@d+1,i2___aldiv@dividend+1
 17815   000D4E  C01C  F003         	movff	i2dtoa@d+2,i2___aldiv@dividend+2
 17816   000D52  C01D  F004         	movff	i2dtoa@d+3,i2___aldiv@dividend+3
 17817   000D56  0E0A               	movlw	10
 17818   000D58  6E05               	movwf	i2___aldiv@divisor^0,c
 17819   000D5A  0E00               	movlw	0
 17820   000D5C  6E06               	movwf	(i2___aldiv@divisor+1)^0,c
 17821   000D5E  0E00               	movlw	0
 17822   000D60  6E07               	movwf	(i2___aldiv@divisor+2)^0,c
 17823   000D62  0E00               	movlw	0
 17824   000D64  6E08               	movwf	(i2___aldiv@divisor+3)^0,c
 17825   000D66  EC2B  F009         	call	i2___aldiv	;wreg free
 17826   000D6A  C001  F01A         	movff	?i2___aldiv,i2dtoa@d
 17827   000D6E  C002  F01B         	movff	?i2___aldiv+1,i2dtoa@d+1
 17828   000D72  C003  F01C         	movff	?i2___aldiv+2,i2dtoa@d+2
 17829   000D76  C004  F01D         	movff	?i2___aldiv+3,i2dtoa@d+3
 17830   000D7A                     i2l8322:
 17831                           
 17832                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 17833   000D7A  BE26               	btfsc	(i2dtoa@i+1)^0,7,c
 17834   000D7C  EFC8  F006         	goto	i2u616_41
 17835   000D80  5026               	movf	(i2dtoa@i+1)^0,w,c
 17836   000D82  E108               	bnz	i2u616_40
 17837   000D84  0425               	decf	i2dtoa@i^0,w,c
 17838   000D86  A0D8               	btfss	status,0,c
 17839   000D88  EFC8  F006         	goto	i2u616_41
 17840   000D8C  EFCA  F006         	goto	i2u616_40
 17841   000D90                     i2u616_41:
 17842   000D90  EFE2  F006         	goto	i2l8328
 17843   000D94                     i2u616_40:
 17844   000D94  501A               	movf	i2dtoa@d^0,w,c
 17845   000D96  101B               	iorwf	(i2dtoa@d+1)^0,w,c
 17846   000D98  101C               	iorwf	(i2dtoa@d+2)^0,w,c
 17847   000D9A  101D               	iorwf	(i2dtoa@d+3)^0,w,c
 17848   000D9C  A4D8               	btfss	status,2,c
 17849   000D9E  EFD3  F006         	goto	i2u617_41
 17850   000DA2  EFD5  F006         	goto	i2u617_40
 17851   000DA6                     i2u617_41:
 17852   000DA6  EF79  F006         	goto	i2l8312
 17853   000DAA                     i2u617_40:
 17854   000DAA  BE23               	btfsc	(i2dtoa@p+1)^0,7,c
 17855   000DAC  EFE2  F006         	goto	i2u618_40
 17856   000DB0  5023               	movf	(i2dtoa@p+1)^0,w,c
 17857   000DB2  E106               	bnz	i2u618_41
 17858   000DB4  0422               	decf	i2dtoa@p^0,w,c
 17859   000DB6  B0D8               	btfsc	status,0,c
 17860   000DB8  EFE0  F006         	goto	i2u618_41
 17861   000DBC  EFE2  F006         	goto	i2u618_40
 17862   000DC0                     i2u618_41:
 17863   000DC0  EF79  F006         	goto	i2l8312
 17864   000DC4                     i2u618_40:
 17865   000DC4                     i2l8328:
 17866                           
 17867                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 17868   000DC4  5024               	movf	i2dtoa@s^0,w,c
 17869   000DC6  B4D8               	btfsc	status,2,c
 17870   000DC8  EFE8  F006         	goto	i2u619_41
 17871   000DCC  EFEA  F006         	goto	i2u619_40
 17872   000DD0                     i2u619_41:
 17873   000DD0  EFF5  F006         	goto	i2l8334
 17874   000DD4                     i2u619_40:
 17875   000DD4                     
 17876                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 17877   000DD4  0625               	decf	i2dtoa@i^0,f,c
 17878   000DD6  A0D8               	btfss	status,0,c
 17879   000DD8  0626               	decf	(i2dtoa@i+1)^0,f,c
 17880   000DDA                     
 17881                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 17882   000DDA  0E64               	movlw	low _dbuf
 17883   000DDC  2425               	addwf	i2dtoa@i^0,w,c
 17884   000DDE  6ED9               	movwf	fsr2l,c
 17885   000DE0  0E01               	movlw	high _dbuf
 17886   000DE2  2026               	addwfc	(i2dtoa@i+1)^0,w,c
 17887   000DE4  6EDA               	movwf	fsr2h,c
 17888   000DE6  C024  FFDF         	movff	i2dtoa@s,indf2
 17889   000DEA                     i2l8334:
 17890                           
 17891                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 17892   000DEA  C019  F011         	movff	i2dtoa@fp,i2pad@fp
 17893   000DEE  0E64               	movlw	low _dbuf
 17894   000DF0  2425               	addwf	i2dtoa@i^0,w,c
 17895   000DF2  6E12               	movwf	i2pad@buf^0,c
 17896   000DF4  0E01               	movlw	high _dbuf
 17897   000DF6  2026               	addwfc	(i2dtoa@i+1)^0,w,c
 17898   000DF8  6E13               	movwf	(i2pad@buf+1)^0,c
 17899   000DFA  C020  F014         	movff	i2dtoa@w,i2pad@p
 17900   000DFE  C021  F015         	movff	i2dtoa@w+1,i2pad@p+1
 17901   000E02  ECCC  F00F         	call	i2_pad	;wreg free
 17902   000E06  0012               	return		;funcret
 17903   000E08                     __end_ofi2_dtoa:
 17904                           	callstack 0
 17905                           
 17906 ;; *************** function i2_pad *****************
 17907 ;; Defined at:
 17908 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 17909 ;; Parameters:    Size  Location     Type
 17910 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
 17911 ;;		 -> sprintf@f(11), NULL(0), 
 17912 ;;  buf             2   17[COMRAM] PTR unsigned char 
 17913 ;;		 -> dbuf(32), 
 17914 ;;  p               2   19[COMRAM] int 
 17915 ;; Auto vars:     Size  Location     Type
 17916 ;;  i               2   22[COMRAM] int 
 17917 ;; Return value:  Size  Location     Type
 17918 ;;                  1    wreg      void 
 17919 ;; Registers used:
 17920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17921 ;; Tracked objects:
 17922 ;;		On entry : 0/0
 17923 ;;		On exit  : 0/0
 17924 ;;		Unchanged: 0/0
 17925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17926 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17927 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17928 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17929 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17930 ;;Total ram usage:        8 bytes
 17931 ;; Hardware stack levels used: 1
 17932 ;; Hardware stack levels required when called: 4
 17933 ;; This function calls:
 17934 ;;		i2_fputc
 17935 ;;		i2_fputs
 17936 ;; This function is called by:
 17937 ;;		i2_dtoa
 17938 ;;		i2_utoa
 17939 ;; This function uses a non-reentrant model
 17940 ;;
 17941                           
 17942                           	psect	text88
 17943   001F98                     __ptext88:
 17944                           	callstack 0
 17945   001F98                     i2_pad:
 17946                           	callstack 6
 17947   001F98                     
 17948                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 17949   001F98  BE15               	btfsc	(i2pad@p+1)^0,7,c
 17950   001F9A  EFD3  F00F         	goto	i2u568_40
 17951   001F9E  EFD1  F00F         	goto	i2u568_41
 17952   001FA2                     i2u568_41:
 17953   001FA2  EFD7  F00F         	goto	i2l3022
 17954   001FA6                     i2u568_40:
 17955   001FA6                     
 17956                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 17957   001FA6  0E00               	movlw	0
 17958   001FA8  6E15               	movwf	(i2pad@p+1)^0,c
 17959   001FAA  0E00               	movlw	0
 17960   001FAC  6E14               	movwf	i2pad@p^0,c
 17961   001FAE                     i2l3022:
 17962                           
 17963                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 17964   001FAE  0E00               	movlw	0
 17965   001FB0  6E18               	movwf	(i2pad@i+1)^0,c
 17966   001FB2  0E00               	movlw	0
 17967   001FB4  6E17               	movwf	i2pad@i^0,c
 17968                           
 17969                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 17970   001FB6  EFE7  F00F         	goto	i2l8040
 17971   001FBA                     i2l8036:
 17972                           
 17973                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 17974   001FBA  0E00               	movlw	0
 17975   001FBC  6E04               	movwf	(i2fputc@c+1)^0,c
 17976   001FBE  0E20               	movlw	32
 17977   001FC0  6E03               	movwf	i2fputc@c^0,c
 17978   001FC2  C011  F005         	movff	i2pad@fp,i2fputc@fp
 17979   001FC6  ECD7  F00B         	call	i2_fputc	;wreg free
 17980   001FCA                     
 17981                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 17982   001FCA  4A17               	infsnz	i2pad@i^0,f,c
 17983   001FCC  2A18               	incf	(i2pad@i+1)^0,f,c
 17984   001FCE                     i2l8040:
 17985                           
 17986                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 17987   001FCE  5014               	movf	i2pad@p^0,w,c
 17988   001FD0  5C17               	subwf	i2pad@i^0,w,c
 17989   001FD2  5018               	movf	(i2pad@i+1)^0,w,c
 17990   001FD4  0A80               	xorlw	128
 17991   001FD6  6E16               	movwf	??i2_pad^0,c
 17992   001FD8  5015               	movf	(i2pad@p+1)^0,w,c
 17993   001FDA  0A80               	xorlw	128
 17994   001FDC  5816               	subwfb	??i2_pad^0,w,c
 17995   001FDE  A0D8               	btfss	status,0,c
 17996   001FE0  EFF4  F00F         	goto	i2u569_41
 17997   001FE4  EFF6  F00F         	goto	i2u569_40
 17998   001FE8                     i2u569_41:
 17999   001FE8  EFDD  F00F         	goto	i2l8036
 18000   001FEC                     i2u569_40:
 18001   001FEC                     
 18002                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 18003   001FEC  C012  F00B         	movff	i2pad@buf,i2fputs@s
 18004   001FF0  C013  F00C         	movff	i2pad@buf+1,i2fputs@s+1
 18005   001FF4  C011  F00D         	movff	i2pad@fp,i2fputs@fp
 18006   001FF8  EC3A  F012         	call	i2_fputs	;wreg free
 18007   001FFC  0012               	return		;funcret
 18008   001FFE                     __end_ofi2_pad:
 18009                           	callstack 0
 18010                           
 18011 ;; *************** function i2_fputs *****************
 18012 ;; Defined at:
 18013 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 18014 ;; Parameters:    Size  Location     Type
 18015 ;;  s               2   10[COMRAM] PTR const unsigned char 
 18016 ;;		 -> dbuf(32), 
 18017 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
 18018 ;;		 -> sprintf@f(11), NULL(0), 
 18019 ;; Auto vars:     Size  Location     Type
 18020 ;;  i               2   14[COMRAM] int 
 18021 ;;  c               1   13[COMRAM] unsigned char 
 18022 ;; Return value:  Size  Location     Type
 18023 ;;                  2   10[COMRAM] int 
 18024 ;; Registers used:
 18025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18026 ;; Tracked objects:
 18027 ;;		On entry : 0/0
 18028 ;;		On exit  : 0/0
 18029 ;;		Unchanged: 0/0
 18030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18031 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18032 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18034 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18035 ;;Total ram usage:        6 bytes
 18036 ;; Hardware stack levels used: 1
 18037 ;; Hardware stack levels required when called: 3
 18038 ;; This function calls:
 18039 ;;		i2_fputc
 18040 ;; This function is called by:
 18041 ;;		i2_pad
 18042 ;; This function uses a non-reentrant model
 18043 ;;
 18044                           
 18045                           	psect	text89
 18046   002474                     __ptext89:
 18047                           	callstack 0
 18048   002474                     i2_fputs:
 18049                           	callstack 6
 18050   002474  0E00               	movlw	0
 18051   002476  6E10               	movwf	(i2fputs@i+1)^0,c
 18052   002478  0E00               	movlw	0
 18053   00247A  6E0F               	movwf	i2fputs@i^0,c
 18054   00247C  EF49  F012         	goto	i2l7678
 18055   002480                     i2l7674:
 18056   002480  C00E  F003         	movff	i2fputs@c,i2fputc@c
 18057   002484  6A04               	clrf	(i2fputc@c+1)^0,c
 18058   002486  C00D  F005         	movff	i2fputs@fp,i2fputc@fp
 18059   00248A  ECD7  F00B         	call	i2_fputc	;wreg free
 18060   00248E  4A0F               	infsnz	i2fputs@i^0,f,c
 18061   002490  2A10               	incf	(i2fputs@i+1)^0,f,c
 18062   002492                     i2l7678:
 18063   002492  500F               	movf	i2fputs@i^0,w,c
 18064   002494  240B               	addwf	i2fputs@s^0,w,c
 18065   002496  6ED9               	movwf	fsr2l,c
 18066   002498  5010               	movf	(i2fputs@i+1)^0,w,c
 18067   00249A  200C               	addwfc	(i2fputs@s+1)^0,w,c
 18068   00249C  6EDA               	movwf	fsr2h,c
 18069   00249E  50DF               	movf	indf2,w,c
 18070   0024A0  6E0E               	movwf	i2fputs@c^0,c
 18071   0024A2  500E               	movf	i2fputs@c^0,w,c
 18072   0024A4  A4D8               	btfss	status,2,c
 18073   0024A6  EF57  F012         	goto	i2u514_41
 18074   0024AA  EF59  F012         	goto	i2u514_40
 18075   0024AE                     i2u514_41:
 18076   0024AE  EF40  F012         	goto	i2l7674
 18077   0024B2                     i2u514_40:
 18078   0024B2  0012               	return		;funcret
 18079   0024B4                     __end_ofi2_fputs:
 18080                           	callstack 0
 18081                           
 18082 ;; *************** function i2_fputc *****************
 18083 ;; Defined at:
 18084 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 18085 ;; Parameters:    Size  Location     Type
 18086 ;;  c               2    2[COMRAM] int 
 18087 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
 18088 ;;		 -> sprintf@f(11), NULL(0), 
 18089 ;; Auto vars:     Size  Location     Type
 18090 ;;		None
 18091 ;; Return value:  Size  Location     Type
 18092 ;;                  2    2[COMRAM] int 
 18093 ;; Registers used:
 18094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18095 ;; Tracked objects:
 18096 ;;		On entry : 0/0
 18097 ;;		On exit  : 0/0
 18098 ;;		Unchanged: 0/0
 18099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18100 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18102 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18103 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18104 ;;Total ram usage:        8 bytes
 18105 ;; Hardware stack levels used: 1
 18106 ;; Hardware stack levels required when called: 2
 18107 ;; This function calls:
 18108 ;;		i2_putch
 18109 ;; This function is called by:
 18110 ;;		i2_pad
 18111 ;;		i2_stoa
 18112 ;;		i2_vfpfcnvrt
 18113 ;;		i2_fputs
 18114 ;; This function uses a non-reentrant model
 18115 ;;
 18116                           
 18117                           	psect	text90
 18118   0017AE                     __ptext90:
 18119                           	callstack 0
 18120   0017AE                     i2_fputc:
 18121                           	callstack 6
 18122   0017AE  5005               	movf	i2fputc@fp^0,w,c
 18123   0017B0  B4D8               	btfsc	status,2,c
 18124   0017B2  EFDD  F00B         	goto	i2u509_41
 18125   0017B6  EFDF  F00B         	goto	i2u509_40
 18126   0017BA                     i2u509_41:
 18127   0017BA  EFE7  F00B         	goto	i2l7654
 18128   0017BE                     i2u509_40:
 18129   0017BE  5005               	movf	i2fputc@fp^0,w,c
 18130   0017C0  A4D8               	btfss	status,2,c
 18131   0017C2  EFE5  F00B         	goto	i2u510_41
 18132   0017C6  EFE7  F00B         	goto	i2u510_40
 18133   0017CA                     i2u510_41:
 18134   0017CA  EFEC  F00B         	goto	i2l7656
 18135   0017CE                     i2u510_40:
 18136   0017CE                     i2l7654:
 18137   0017CE  5003               	movf	i2fputc@c^0,w,c
 18138   0017D0  EC21  F015         	call	i2_putch
 18139   0017D4  EF33  F00C         	goto	i2l3134
 18140   0017D8                     i2l7656:
 18141   0017D8  5005               	movf	i2fputc@fp^0,w,c
 18142   0017DA  6ED9               	movwf	fsr2l,c
 18143   0017DC  6ADA               	clrf	fsr2h,c
 18144   0017DE  0E09               	movlw	9
 18145   0017E0  26D9               	addwf	fsr2l,f,c
 18146   0017E2  50DE               	movf	postinc2,w,c
 18147   0017E4  10DE               	iorwf	postinc2,w,c
 18148   0017E6  B4D8               	btfsc	status,2,c
 18149   0017E8  EFF8  F00B         	goto	i2u511_41
 18150   0017EC  EFFA  F00B         	goto	i2u511_40
 18151   0017F0                     i2u511_41:
 18152   0017F0  EF13  F00C         	goto	i2l7660
 18153   0017F4                     i2u511_40:
 18154   0017F4  5005               	movf	i2fputc@fp^0,w,c
 18155   0017F6  6ED9               	movwf	fsr2l,c
 18156   0017F8  6ADA               	clrf	fsr2h,c
 18157   0017FA  0E09               	movlw	9
 18158   0017FC  26D9               	addwf	fsr2l,f,c
 18159   0017FE  5005               	movf	i2fputc@fp^0,w,c
 18160   001800  6EE1               	movwf	fsr1l,c
 18161   001802  6AE2               	clrf	fsr1h,c
 18162   001804  0E02               	movlw	2
 18163   001806  26E1               	addwf	fsr1l,f,c
 18164   001808  50DE               	movf	postinc2,w,c
 18165   00180A  5CE6               	subwf	postinc1,w,c
 18166   00180C  50E6               	movf	postinc1,w,c
 18167   00180E  0A80               	xorlw	128
 18168   001810  6E0A               	movwf	(??i2_fputc+4)^0,c
 18169   001812  50DE               	movf	postinc2,w,c
 18170   001814  0A80               	xorlw	128
 18171   001816  580A               	subwfb	(??i2_fputc+4)^0,w,c
 18172   001818  B0D8               	btfsc	status,0,c
 18173   00181A  EF11  F00C         	goto	i2u512_41
 18174   00181E  EF13  F00C         	goto	i2u512_40
 18175   001822                     i2u512_41:
 18176   001822  EF33  F00C         	goto	i2l3134
 18177   001826                     i2u512_40:
 18178   001826                     i2l7660:
 18179   001826  5005               	movf	i2fputc@fp^0,w,c
 18180   001828  6ED9               	movwf	fsr2l,c
 18181   00182A  6ADA               	clrf	fsr2h,c
 18182   00182C  0E02               	movlw	2
 18183   00182E  26D9               	addwf	fsr2l,f,c
 18184   001830  CFDE F006          	movff	postinc2,??i2_fputc
 18185   001834  CFDD F007          	movff	postdec2,??i2_fputc+1
 18186   001838  5005               	movf	i2fputc@fp^0,w,c
 18187   00183A  6ED9               	movwf	fsr2l,c
 18188   00183C  6ADA               	clrf	fsr2h,c
 18189   00183E  CFDE F008          	movff	postinc2,??i2_fputc+2
 18190   001842  CFDD F009          	movff	postdec2,??i2_fputc+3
 18191   001846  5006               	movf	??i2_fputc^0,w,c
 18192   001848  2408               	addwf	(??i2_fputc+2)^0,w,c
 18193   00184A  6ED9               	movwf	fsr2l,c
 18194   00184C  5007               	movf	(??i2_fputc+1)^0,w,c
 18195   00184E  2009               	addwfc	(??i2_fputc+3)^0,w,c
 18196   001850  6EDA               	movwf	fsr2h,c
 18197   001852  C003  FFDF         	movff	i2fputc@c,indf2
 18198   001856  5005               	movf	i2fputc@fp^0,w,c
 18199   001858  6ED9               	movwf	fsr2l,c
 18200   00185A  6ADA               	clrf	fsr2h,c
 18201   00185C  0E02               	movlw	2
 18202   00185E  26D9               	addwf	fsr2l,f,c
 18203   001860  2ADE               	incf	postinc2,f,c
 18204   001862  0E00               	movlw	0
 18205   001864  22DD               	addwfc	postdec2,f,c
 18206   001866                     i2l3134:
 18207   001866  0012               	return		;funcret
 18208   001868                     __end_ofi2_fputc:
 18209                           	callstack 0
 18210                           
 18211 ;; *************** function i2_putch *****************
 18212 ;; Defined at:
 18213 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 18214 ;; Parameters:    Size  Location     Type
 18215 ;;  txData          1    wreg     unsigned char 
 18216 ;; Auto vars:     Size  Location     Type
 18217 ;;  txData          1    1[COMRAM] unsigned char 
 18218 ;; Return value:  Size  Location     Type
 18219 ;;                  1    wreg      void 
 18220 ;; Registers used:
 18221 ;;		wreg, status,2, cstack
 18222 ;; Tracked objects:
 18223 ;;		On entry : 0/0
 18224 ;;		On exit  : 0/0
 18225 ;;		Unchanged: 0/0
 18226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18230 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18231 ;;Total ram usage:        1 bytes
 18232 ;; Hardware stack levels used: 1
 18233 ;; Hardware stack levels required when called: 1
 18234 ;; This function calls:
 18235 ;;		i2_EUSART1_Write
 18236 ;; This function is called by:
 18237 ;;		i2_fputc
 18238 ;; This function uses a non-reentrant model
 18239 ;;
 18240                           
 18241                           	psect	text91
 18242   002A42                     __ptext91:
 18243                           	callstack 0
 18244   002A42                     i2_putch:
 18245                           	callstack 6
 18246                           
 18247                           ;incstack = 0
 18248                           ;i2putch@txData stored from wreg
 18249   002A42  6E02               	movwf	i2putch@txData^0,c
 18250   002A44                     
 18251                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 18252   002A44  5002               	movf	i2putch@txData^0,w,c
 18253   002A46  ECA3  F014         	call	i2_EUSART1_Write
 18254   002A4A  0012               	return		;funcret
 18255   002A4C                     __end_ofi2_putch:
 18256                           	callstack 0
 18257                           
 18258 ;; *************** function i2_EUSART1_Write *****************
 18259 ;; Defined at:
 18260 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 18261 ;; Parameters:    Size  Location     Type
 18262 ;;  txData          1    wreg     unsigned char 
 18263 ;; Auto vars:     Size  Location     Type
 18264 ;;  txData          1    0[COMRAM] unsigned char 
 18265 ;; Return value:  Size  Location     Type
 18266 ;;                  1    wreg      void 
 18267 ;; Registers used:
 18268 ;;		wreg
 18269 ;; Tracked objects:
 18270 ;;		On entry : 0/0
 18271 ;;		On exit  : 0/0
 18272 ;;		Unchanged: 0/0
 18273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18275 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18277 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18278 ;;Total ram usage:        1 bytes
 18279 ;; Hardware stack levels used: 1
 18280 ;; This function calls:
 18281 ;;		Nothing
 18282 ;; This function is called by:
 18283 ;;		i2_putch
 18284 ;; This function uses a non-reentrant model
 18285 ;;
 18286                           
 18287                           	psect	text92
 18288   002946                     __ptext92:
 18289                           	callstack 0
 18290   002946                     i2_EUSART1_Write:
 18291                           	callstack 6
 18292                           
 18293                           ;incstack = 0
 18294                           ;i2EUSART1_Write@txData stored from wreg
 18295   002946  6E01               	movwf	i2EUSART1_Write@txData^0,c
 18296   002948                     i2l1922:
 18297                           
 18298                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR3bits.TX1IF)
 18299   002948  010E               	movlb	14	; () banked
 18300   00294A  A9CD               	btfss	205,4,b	;volatile
 18301   00294C  EFAA  F014         	goto	i2u504_41
 18302   002950  EFAC  F014         	goto	i2u504_40
 18303   002954                     i2u504_41:
 18304   002954  EFA4  F014         	goto	i2l1922
 18305   002958                     i2u504_40:
 18306   002958                     
 18307                           ; BSR set to: 14
 18308                           ;mcc_generated_files/eusart1.c: 138:     TX1REG = txData;
 18309   002958  C001  FF9A         	movff	i2EUSART1_Write@txData,3994	;volatile
 18310   00295C                     
 18311                           ; BSR set to: 14
 18312   00295C  0012               	return		;funcret
 18313   00295E                     __end_ofi2_EUSART1_Write:
 18314                           	callstack 0
 18315                           
 18316 ;; *************** function i2_abs *****************
 18317 ;; Defined at:
 18318 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 18319 ;; Parameters:    Size  Location     Type
 18320 ;;  a               2   10[COMRAM] int 
 18321 ;; Auto vars:     Size  Location     Type
 18322 ;;		None
 18323 ;; Return value:  Size  Location     Type
 18324 ;;                  2   10[COMRAM] int 
 18325 ;; Registers used:
 18326 ;;		wreg, status,2, status,0
 18327 ;; Tracked objects:
 18328 ;;		On entry : 0/0
 18329 ;;		On exit  : 0/0
 18330 ;;		Unchanged: 0/0
 18331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18334 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18335 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18336 ;;Total ram usage:        4 bytes
 18337 ;; Hardware stack levels used: 1
 18338 ;; This function calls:
 18339 ;;		Nothing
 18340 ;; This function is called by:
 18341 ;;		i2_dtoa
 18342 ;; This function uses a non-reentrant model
 18343 ;;
 18344                           
 18345                           	psect	text93
 18346   002598                     __ptext93:
 18347                           	callstack 0
 18348   002598                     i2_abs:
 18349                           	callstack 10
 18350   002598  BE0C               	btfsc	(i2abs@a+1)^0,7,c
 18351   00259A  EFD1  F012         	goto	i2u570_41
 18352   00259E  EFD3  F012         	goto	i2u570_40
 18353   0025A2                     i2u570_41:
 18354   0025A2  EFD9  F012         	goto	i2l3119
 18355   0025A6                     i2u570_40:
 18356   0025A6  C00B  F00B         	movff	i2abs@a,?i2_abs
 18357   0025AA  C00C  F00C         	movff	i2abs@a+1,?i2_abs+1
 18358   0025AE  EFE5  F012         	goto	i2l3122
 18359   0025B2                     i2l3119:
 18360   0025B2  C00B  F00D         	movff	i2abs@a,??i2_abs
 18361   0025B6  C00C  F00E         	movff	i2abs@a+1,??i2_abs+1
 18362   0025BA  1E0D               	comf	??i2_abs^0,f,c
 18363   0025BC  1E0E               	comf	(??i2_abs+1)^0,f,c
 18364   0025BE  4A0D               	infsnz	??i2_abs^0,f,c
 18365   0025C0  2A0E               	incf	(??i2_abs+1)^0,f,c
 18366   0025C2  C00D  F00B         	movff	??i2_abs,?i2_abs
 18367   0025C6  C00E  F00C         	movff	??i2_abs+1,?i2_abs+1
 18368   0025CA                     i2l3122:
 18369   0025CA  0012               	return		;funcret
 18370   0025CC                     __end_ofi2_abs:
 18371                           	callstack 0
 18372                           
 18373 ;; *************** function i2___almod *****************
 18374 ;; Defined at:
 18375 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\almod.c"
 18376 ;; Parameters:    Size  Location     Type
 18377 ;;  dividend        4    0[COMRAM] long 
 18378 ;;  divisor         4    4[COMRAM] long 
 18379 ;; Auto vars:     Size  Location     Type
 18380 ;;  sign            1    9[COMRAM] unsigned char 
 18381 ;;  counter         1    8[COMRAM] unsigned char 
 18382 ;; Return value:  Size  Location     Type
 18383 ;;                  4    0[COMRAM] long 
 18384 ;; Registers used:
 18385 ;;		wreg, status,2, status,0
 18386 ;; Tracked objects:
 18387 ;;		On entry : 0/0
 18388 ;;		On exit  : 0/0
 18389 ;;		Unchanged: 0/0
 18390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18391 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18394 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18395 ;;Total ram usage:       10 bytes
 18396 ;; Hardware stack levels used: 1
 18397 ;; This function calls:
 18398 ;;		Nothing
 18399 ;; This function is called by:
 18400 ;;		i2_dtoa
 18401 ;; This function uses a non-reentrant model
 18402 ;;
 18403                           
 18404                           	psect	text94
 18405   00154E                     __ptext94:
 18406                           	callstack 0
 18407   00154E                     i2___almod:
 18408                           	callstack 10
 18409   00154E  6A0A               	clrf	i2___almod@sign^0,c
 18410   001550  BE04               	btfsc	(i2___almod@dividend+3)^0,7,c
 18411   001552  EFAF  F00A         	goto	i2u559_40
 18412   001556  EFAD  F00A         	goto	i2u559_41
 18413   00155A                     i2u559_41:
 18414   00155A  EFB9  F00A         	goto	i2l7988
 18415   00155E                     i2u559_40:
 18416   00155E  1E04               	comf	(i2___almod@dividend+3)^0,f,c
 18417   001560  1E03               	comf	(i2___almod@dividend+2)^0,f,c
 18418   001562  1E02               	comf	(i2___almod@dividend+1)^0,f,c
 18419   001564  6C01               	negf	i2___almod@dividend^0,c
 18420   001566  0E00               	movlw	0
 18421   001568  2202               	addwfc	(i2___almod@dividend+1)^0,f,c
 18422   00156A  2203               	addwfc	(i2___almod@dividend+2)^0,f,c
 18423   00156C  2204               	addwfc	(i2___almod@dividend+3)^0,f,c
 18424   00156E  0E01               	movlw	1
 18425   001570  6E0A               	movwf	i2___almod@sign^0,c
 18426   001572                     i2l7988:
 18427   001572  BE08               	btfsc	(i2___almod@divisor+3)^0,7,c
 18428   001574  EFC0  F00A         	goto	i2u560_40
 18429   001578  EFBE  F00A         	goto	i2u560_41
 18430   00157C                     i2u560_41:
 18431   00157C  EFC8  F00A         	goto	i2l7992
 18432   001580                     i2u560_40:
 18433   001580  1E08               	comf	(i2___almod@divisor+3)^0,f,c
 18434   001582  1E07               	comf	(i2___almod@divisor+2)^0,f,c
 18435   001584  1E06               	comf	(i2___almod@divisor+1)^0,f,c
 18436   001586  6C05               	negf	i2___almod@divisor^0,c
 18437   001588  0E00               	movlw	0
 18438   00158A  2206               	addwfc	(i2___almod@divisor+1)^0,f,c
 18439   00158C  2207               	addwfc	(i2___almod@divisor+2)^0,f,c
 18440   00158E  2208               	addwfc	(i2___almod@divisor+3)^0,f,c
 18441   001590                     i2l7992:
 18442   001590  5005               	movf	i2___almod@divisor^0,w,c
 18443   001592  1006               	iorwf	(i2___almod@divisor+1)^0,w,c
 18444   001594  1007               	iorwf	(i2___almod@divisor+2)^0,w,c
 18445   001596  1008               	iorwf	(i2___almod@divisor+3)^0,w,c
 18446   001598  B4D8               	btfsc	status,2,c
 18447   00159A  EFD1  F00A         	goto	i2u561_41
 18448   00159E  EFD3  F00A         	goto	i2u561_40
 18449   0015A2                     i2u561_41:
 18450   0015A2  EF03  F00B         	goto	i2l8008
 18451   0015A6                     i2u561_40:
 18452   0015A6  0E01               	movlw	1
 18453   0015A8  6E09               	movwf	i2___almod@counter^0,c
 18454   0015AA  EFDD  F00A         	goto	i2l7998
 18455   0015AE                     i2l7996:
 18456   0015AE  90D8               	bcf	status,0,c
 18457   0015B0  3605               	rlcf	i2___almod@divisor^0,f,c
 18458   0015B2  3606               	rlcf	(i2___almod@divisor+1)^0,f,c
 18459   0015B4  3607               	rlcf	(i2___almod@divisor+2)^0,f,c
 18460   0015B6  3608               	rlcf	(i2___almod@divisor+3)^0,f,c
 18461   0015B8  2A09               	incf	i2___almod@counter^0,f,c
 18462   0015BA                     i2l7998:
 18463   0015BA  AE08               	btfss	(i2___almod@divisor+3)^0,7,c
 18464   0015BC  EFE2  F00A         	goto	i2u562_41
 18465   0015C0  EFE4  F00A         	goto	i2u562_40
 18466   0015C4                     i2u562_41:
 18467   0015C4  EFD7  F00A         	goto	i2l7996
 18468   0015C8                     i2u562_40:
 18469   0015C8                     i2l8000:
 18470   0015C8  5005               	movf	i2___almod@divisor^0,w,c
 18471   0015CA  5C01               	subwf	i2___almod@dividend^0,w,c
 18472   0015CC  5006               	movf	(i2___almod@divisor+1)^0,w,c
 18473   0015CE  5802               	subwfb	(i2___almod@dividend+1)^0,w,c
 18474   0015D0  5007               	movf	(i2___almod@divisor+2)^0,w,c
 18475   0015D2  5803               	subwfb	(i2___almod@dividend+2)^0,w,c
 18476   0015D4  5008               	movf	(i2___almod@divisor+3)^0,w,c
 18477   0015D6  5804               	subwfb	(i2___almod@dividend+3)^0,w,c
 18478   0015D8  A0D8               	btfss	status,0,c
 18479   0015DA  EFF1  F00A         	goto	i2u563_41
 18480   0015DE  EFF3  F00A         	goto	i2u563_40
 18481   0015E2                     i2u563_41:
 18482   0015E2  EFFB  F00A         	goto	i2l8004
 18483   0015E6                     i2u563_40:
 18484   0015E6  5005               	movf	i2___almod@divisor^0,w,c
 18485   0015E8  5E01               	subwf	i2___almod@dividend^0,f,c
 18486   0015EA  5006               	movf	(i2___almod@divisor+1)^0,w,c
 18487   0015EC  5A02               	subwfb	(i2___almod@dividend+1)^0,f,c
 18488   0015EE  5007               	movf	(i2___almod@divisor+2)^0,w,c
 18489   0015F0  5A03               	subwfb	(i2___almod@dividend+2)^0,f,c
 18490   0015F2  5008               	movf	(i2___almod@divisor+3)^0,w,c
 18491   0015F4  5A04               	subwfb	(i2___almod@dividend+3)^0,f,c
 18492   0015F6                     i2l8004:
 18493   0015F6  90D8               	bcf	status,0,c
 18494   0015F8  3208               	rrcf	(i2___almod@divisor+3)^0,f,c
 18495   0015FA  3207               	rrcf	(i2___almod@divisor+2)^0,f,c
 18496   0015FC  3206               	rrcf	(i2___almod@divisor+1)^0,f,c
 18497   0015FE  3205               	rrcf	i2___almod@divisor^0,f,c
 18498   001600  2E09               	decfsz	i2___almod@counter^0,f,c
 18499   001602  EFE4  F00A         	goto	i2l8000
 18500   001606                     i2l8008:
 18501   001606  500A               	movf	i2___almod@sign^0,w,c
 18502   001608  B4D8               	btfsc	status,2,c
 18503   00160A  EF09  F00B         	goto	i2u564_41
 18504   00160E  EF0B  F00B         	goto	i2u564_40
 18505   001612                     i2u564_41:
 18506   001612  EF13  F00B         	goto	i2l8012
 18507   001616                     i2u564_40:
 18508   001616  1E04               	comf	(i2___almod@dividend+3)^0,f,c
 18509   001618  1E03               	comf	(i2___almod@dividend+2)^0,f,c
 18510   00161A  1E02               	comf	(i2___almod@dividend+1)^0,f,c
 18511   00161C  6C01               	negf	i2___almod@dividend^0,c
 18512   00161E  0E00               	movlw	0
 18513   001620  2202               	addwfc	(i2___almod@dividend+1)^0,f,c
 18514   001622  2203               	addwfc	(i2___almod@dividend+2)^0,f,c
 18515   001624  2204               	addwfc	(i2___almod@dividend+3)^0,f,c
 18516   001626                     i2l8012:
 18517   001626  C001  F001         	movff	i2___almod@dividend,?i2___almod
 18518   00162A  C002  F002         	movff	i2___almod@dividend+1,?i2___almod+1
 18519   00162E  C003  F003         	movff	i2___almod@dividend+2,?i2___almod+2
 18520   001632  C004  F004         	movff	i2___almod@dividend+3,?i2___almod+3
 18521   001636  0012               	return		;funcret
 18522   001638                     __end_ofi2___almod:
 18523                           	callstack 0
 18524                           
 18525 ;; *************** function i2___aldiv *****************
 18526 ;; Defined at:
 18527 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
 18528 ;; Parameters:    Size  Location     Type
 18529 ;;  dividend        4    0[COMRAM] long 
 18530 ;;  divisor         4    4[COMRAM] long 
 18531 ;; Auto vars:     Size  Location     Type
 18532 ;;  quotient        4   10[COMRAM] long 
 18533 ;;  sign            1    9[COMRAM] unsigned char 
 18534 ;;  counter         1    8[COMRAM] unsigned char 
 18535 ;; Return value:  Size  Location     Type
 18536 ;;                  4    0[COMRAM] long 
 18537 ;; Registers used:
 18538 ;;		wreg, status,2, status,0
 18539 ;; Tracked objects:
 18540 ;;		On entry : 0/0
 18541 ;;		On exit  : 0/0
 18542 ;;		Unchanged: 0/0
 18543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18544 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18545 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18547 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18548 ;;Total ram usage:       14 bytes
 18549 ;; Hardware stack levels used: 1
 18550 ;; This function calls:
 18551 ;;		Nothing
 18552 ;; This function is called by:
 18553 ;;		i2_dtoa
 18554 ;; This function uses a non-reentrant model
 18555 ;;
 18556                           
 18557                           	psect	text95
 18558   001256                     __ptext95:
 18559                           	callstack 0
 18560   001256                     i2___aldiv:
 18561                           	callstack 10
 18562   001256  6A0A               	clrf	i2___aldiv@sign^0,c
 18563   001258  BE08               	btfsc	(i2___aldiv@divisor+3)^0,7,c
 18564   00125A  EF33  F009         	goto	i2u553_40
 18565   00125E  EF31  F009         	goto	i2u553_41
 18566   001262                     i2u553_41:
 18567   001262  EF3D  F009         	goto	i2l7944
 18568   001266                     i2u553_40:
 18569   001266  1E08               	comf	(i2___aldiv@divisor+3)^0,f,c
 18570   001268  1E07               	comf	(i2___aldiv@divisor+2)^0,f,c
 18571   00126A  1E06               	comf	(i2___aldiv@divisor+1)^0,f,c
 18572   00126C  6C05               	negf	i2___aldiv@divisor^0,c
 18573   00126E  0E00               	movlw	0
 18574   001270  2206               	addwfc	(i2___aldiv@divisor+1)^0,f,c
 18575   001272  2207               	addwfc	(i2___aldiv@divisor+2)^0,f,c
 18576   001274  2208               	addwfc	(i2___aldiv@divisor+3)^0,f,c
 18577   001276  0E01               	movlw	1
 18578   001278  6E0A               	movwf	i2___aldiv@sign^0,c
 18579   00127A                     i2l7944:
 18580   00127A  BE04               	btfsc	(i2___aldiv@dividend+3)^0,7,c
 18581   00127C  EF44  F009         	goto	i2u554_40
 18582   001280  EF42  F009         	goto	i2u554_41
 18583   001284                     i2u554_41:
 18584   001284  EF4E  F009         	goto	i2l7950
 18585   001288                     i2u554_40:
 18586   001288  1E04               	comf	(i2___aldiv@dividend+3)^0,f,c
 18587   00128A  1E03               	comf	(i2___aldiv@dividend+2)^0,f,c
 18588   00128C  1E02               	comf	(i2___aldiv@dividend+1)^0,f,c
 18589   00128E  6C01               	negf	i2___aldiv@dividend^0,c
 18590   001290  0E00               	movlw	0
 18591   001292  2202               	addwfc	(i2___aldiv@dividend+1)^0,f,c
 18592   001294  2203               	addwfc	(i2___aldiv@dividend+2)^0,f,c
 18593   001296  2204               	addwfc	(i2___aldiv@dividend+3)^0,f,c
 18594   001298  0E01               	movlw	1
 18595   00129A  1A0A               	xorwf	i2___aldiv@sign^0,f,c
 18596   00129C                     i2l7950:
 18597   00129C  0E00               	movlw	0
 18598   00129E  6E0B               	movwf	i2___aldiv@quotient^0,c
 18599   0012A0  0E00               	movlw	0
 18600   0012A2  6E0C               	movwf	(i2___aldiv@quotient+1)^0,c
 18601   0012A4  0E00               	movlw	0
 18602   0012A6  6E0D               	movwf	(i2___aldiv@quotient+2)^0,c
 18603   0012A8  0E00               	movlw	0
 18604   0012AA  6E0E               	movwf	(i2___aldiv@quotient+3)^0,c
 18605   0012AC  5005               	movf	i2___aldiv@divisor^0,w,c
 18606   0012AE  1006               	iorwf	(i2___aldiv@divisor+1)^0,w,c
 18607   0012B0  1007               	iorwf	(i2___aldiv@divisor+2)^0,w,c
 18608   0012B2  1008               	iorwf	(i2___aldiv@divisor+3)^0,w,c
 18609   0012B4  B4D8               	btfsc	status,2,c
 18610   0012B6  EF5F  F009         	goto	i2u555_41
 18611   0012BA  EF61  F009         	goto	i2u555_40
 18612   0012BE                     i2u555_41:
 18613   0012BE  EF97  F009         	goto	i2l7972
 18614   0012C2                     i2u555_40:
 18615   0012C2  0E01               	movlw	1
 18616   0012C4  6E09               	movwf	i2___aldiv@counter^0,c
 18617   0012C6  EF6B  F009         	goto	i2l7958
 18618   0012CA                     i2l7956:
 18619   0012CA  90D8               	bcf	status,0,c
 18620   0012CC  3605               	rlcf	i2___aldiv@divisor^0,f,c
 18621   0012CE  3606               	rlcf	(i2___aldiv@divisor+1)^0,f,c
 18622   0012D0  3607               	rlcf	(i2___aldiv@divisor+2)^0,f,c
 18623   0012D2  3608               	rlcf	(i2___aldiv@divisor+3)^0,f,c
 18624   0012D4  2A09               	incf	i2___aldiv@counter^0,f,c
 18625   0012D6                     i2l7958:
 18626   0012D6  AE08               	btfss	(i2___aldiv@divisor+3)^0,7,c
 18627   0012D8  EF70  F009         	goto	i2u556_41
 18628   0012DC  EF72  F009         	goto	i2u556_40
 18629   0012E0                     i2u556_41:
 18630   0012E0  EF65  F009         	goto	i2l7956
 18631   0012E4                     i2u556_40:
 18632   0012E4                     i2l7960:
 18633   0012E4  90D8               	bcf	status,0,c
 18634   0012E6  360B               	rlcf	i2___aldiv@quotient^0,f,c
 18635   0012E8  360C               	rlcf	(i2___aldiv@quotient+1)^0,f,c
 18636   0012EA  360D               	rlcf	(i2___aldiv@quotient+2)^0,f,c
 18637   0012EC  360E               	rlcf	(i2___aldiv@quotient+3)^0,f,c
 18638   0012EE  5005               	movf	i2___aldiv@divisor^0,w,c
 18639   0012F0  5C01               	subwf	i2___aldiv@dividend^0,w,c
 18640   0012F2  5006               	movf	(i2___aldiv@divisor+1)^0,w,c
 18641   0012F4  5802               	subwfb	(i2___aldiv@dividend+1)^0,w,c
 18642   0012F6  5007               	movf	(i2___aldiv@divisor+2)^0,w,c
 18643   0012F8  5803               	subwfb	(i2___aldiv@dividend+2)^0,w,c
 18644   0012FA  5008               	movf	(i2___aldiv@divisor+3)^0,w,c
 18645   0012FC  5804               	subwfb	(i2___aldiv@dividend+3)^0,w,c
 18646   0012FE  A0D8               	btfss	status,0,c
 18647   001300  EF84  F009         	goto	i2u557_41
 18648   001304  EF86  F009         	goto	i2u557_40
 18649   001308                     i2u557_41:
 18650   001308  EF8F  F009         	goto	i2l7968
 18651   00130C                     i2u557_40:
 18652   00130C  5005               	movf	i2___aldiv@divisor^0,w,c
 18653   00130E  5E01               	subwf	i2___aldiv@dividend^0,f,c
 18654   001310  5006               	movf	(i2___aldiv@divisor+1)^0,w,c
 18655   001312  5A02               	subwfb	(i2___aldiv@dividend+1)^0,f,c
 18656   001314  5007               	movf	(i2___aldiv@divisor+2)^0,w,c
 18657   001316  5A03               	subwfb	(i2___aldiv@dividend+2)^0,f,c
 18658   001318  5008               	movf	(i2___aldiv@divisor+3)^0,w,c
 18659   00131A  5A04               	subwfb	(i2___aldiv@dividend+3)^0,f,c
 18660   00131C  800B               	bsf	i2___aldiv@quotient^0,0,c
 18661   00131E                     i2l7968:
 18662   00131E  90D8               	bcf	status,0,c
 18663   001320  3208               	rrcf	(i2___aldiv@divisor+3)^0,f,c
 18664   001322  3207               	rrcf	(i2___aldiv@divisor+2)^0,f,c
 18665   001324  3206               	rrcf	(i2___aldiv@divisor+1)^0,f,c
 18666   001326  3205               	rrcf	i2___aldiv@divisor^0,f,c
 18667   001328  2E09               	decfsz	i2___aldiv@counter^0,f,c
 18668   00132A  EF72  F009         	goto	i2l7960
 18669   00132E                     i2l7972:
 18670   00132E  500A               	movf	i2___aldiv@sign^0,w,c
 18671   001330  B4D8               	btfsc	status,2,c
 18672   001332  EF9D  F009         	goto	i2u558_41
 18673   001336  EF9F  F009         	goto	i2u558_40
 18674   00133A                     i2u558_41:
 18675   00133A  EFA7  F009         	goto	i2l7976
 18676   00133E                     i2u558_40:
 18677   00133E  1E0E               	comf	(i2___aldiv@quotient+3)^0,f,c
 18678   001340  1E0D               	comf	(i2___aldiv@quotient+2)^0,f,c
 18679   001342  1E0C               	comf	(i2___aldiv@quotient+1)^0,f,c
 18680   001344  6C0B               	negf	i2___aldiv@quotient^0,c
 18681   001346  0E00               	movlw	0
 18682   001348  220C               	addwfc	(i2___aldiv@quotient+1)^0,f,c
 18683   00134A  220D               	addwfc	(i2___aldiv@quotient+2)^0,f,c
 18684   00134C  220E               	addwfc	(i2___aldiv@quotient+3)^0,f,c
 18685   00134E                     i2l7976:
 18686   00134E  C00B  F001         	movff	i2___aldiv@quotient,?i2___aldiv
 18687   001352  C00C  F002         	movff	i2___aldiv@quotient+1,?i2___aldiv+1
 18688   001356  C00D  F003         	movff	i2___aldiv@quotient+2,?i2___aldiv+2
 18689   00135A  C00E  F004         	movff	i2___aldiv@quotient+3,?i2___aldiv+3
 18690   00135E  0012               	return		;funcret
 18691   001360                     __end_ofi2___aldiv:
 18692                           	callstack 0
 18693                           
 18694                           	psect	rparam
 18695   000001                     ___rparam_used  equ	1
 18696   000000                     ___param_bank   equ	0
 18697   000000                     __Lparam        equ	__Lrparam
 18698   000000                     __Hparam        equ	__Hrparam
 18699                           
 18700                           	psect	temp
 18701   000054                     btemp:
 18702                           	callstack 0
 18703   000054                     	ds	1
 18704   000054                     int$flags       set	btemp
 18705   000055                     wtemp8          set	btemp+1
 18706   000055                     ttemp5          set	btemp+1
 18707   000058                     ttemp6          set	btemp+4
 18708   00005C                     ttemp7          set	btemp+8
 18709                           
 18710                           	psect	config
 18711                           
 18712                           ;Config register CONFIG1L @ 0x300000
 18713                           ;	External Oscillator mode Selection bits
 18714                           ;	FEXTOSC = OFF, Oscillator not enabled
 18715                           ;	Power-up default value for COSC bits
 18716                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
 18717   300000                     	org	3145728
 18718   300000  EC                 	db	236
 18719                           
 18720                           ;Config register CONFIG1H @ 0x300001
 18721                           ;	Clock Out Enable bit
 18722                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 18723                           ;	Clock Switch Enable bit
 18724                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18725                           ;	Fail-Safe Clock Monitor Enable bit
 18726                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 18727   300001                     	org	3145729
 18728   300001  FF                 	db	255
 18729                           
 18730                           ;Config register CONFIG2L @ 0x300002
 18731                           ;	Master Clear Enable bit
 18732                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 18733                           ;	Power-up Timer Enable bit
 18734                           ;	PWRTE = OFF, Power up timer disabled
 18735                           ;	Low-power BOR enable bit
 18736                           ;	LPBOREN = OFF, ULPBOR disabled
 18737                           ;	Brown-out Reset Enable bits
 18738                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 18739   300002                     	org	3145730
 18740   300002  FF                 	db	255
 18741                           
 18742                           ;Config register CONFIG2H @ 0x300003
 18743                           ;	Brown Out Reset Voltage selection bits
 18744                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
 18745                           ;	ZCD Disable bit
 18746                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 18747                           ;	PPSLOCK bit One-Way Set Enable bit
 18748                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 18749                           ;	Stack Full/Underflow Reset Enable bit
 18750                           ;	STVREN = ON, Stack full/underflow will cause Reset
 18751                           ;	Debugger Enable bit
 18752                           ;	DEBUG = OFF, Background debugger disabled
 18753                           ;	Extended Instruction Set Enable bit
 18754                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 18755   300003                     	org	3145731
 18756   300003  FF                 	db	255
 18757                           
 18758                           ;Config register CONFIG3L @ 0x300004
 18759                           ;	WDT Period Select bits
 18760                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 18761                           ;	WDT operating mode
 18762                           ;	WDTE = OFF, WDT Disabled
 18763   300004                     	org	3145732
 18764   300004  9F                 	db	159
 18765                           
 18766                           ;Config register CONFIG3H @ 0x300005
 18767                           ;	WDT Window Select bits
 18768                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 18769                           ;	WDT input clock selector
 18770                           ;	WDTCCS = SC, Software Control
 18771   300005                     	org	3145733
 18772   300005  FF                 	db	255
 18773                           
 18774                           ;Config register CONFIG4L @ 0x300006
 18775                           ;	Write Protection Block 0
 18776                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 18777                           ;	Write Protection Block 1
 18778                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 18779                           ;	Write Protection Block 2
 18780                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 18781                           ;	Write Protection Block 3
 18782                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 18783   300006                     	org	3145734
 18784   300006  FF                 	db	255
 18785                           
 18786                           ;Config register CONFIG4H @ 0x300007
 18787                           ;	Configuration Register Write Protection bit
 18788                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 18789                           ;	Boot Block Write Protection bit
 18790                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 18791                           ;	Data EEPROM Write Protection bit
 18792                           ;	WRTD = OFF, Data EEPROM not write-protected
 18793                           ;	Scanner Enable bit
 18794                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 18795                           ;	Low Voltage Programming Enable bit
 18796                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 18797   300007                     	org	3145735
 18798   300007  DF                 	db	223
 18799                           
 18800                           ;Config register CONFIG5L @ 0x300008
 18801                           ;	UserNVM Program Memory Code Protection bit
 18802                           ;	CP = OFF, UserNVM code protection disabled
 18803                           ;	DataNVM Memory Code Protection bit
 18804                           ;	CPD = OFF, DataNVM code protection disabled
 18805   300008                     	org	3145736
 18806   300008  FF                 	db	255
 18807                           
 18808                           ;Config register CONFIG5H @ 0x300009
 18809                           ;	unspecified, using default values
 18810   300009                     	org	3145737
 18811   300009  FF                 	db	255
 18812                           
 18813                           ;Config register CONFIG6L @ 0x30000A
 18814                           ;	Table Read Protection Block 0
 18815                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 18816                           ;	Table Read Protection Block 1
 18817                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 18818                           ;	Table Read Protection Block 2
 18819                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 18820                           ;	Table Read Protection Block 3
 18821                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 18822   30000A                     	org	3145738
 18823   30000A  FF                 	db	255
 18824                           
 18825                           ;Config register CONFIG6H @ 0x30000B
 18826                           ;	Boot Block Table Read Protection bit
 18827                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 18828   30000B                     	org	3145739
 18829   30000B  FF                 	db	255
 18830                           tosu	equ	0xFFF
 18831                           tosh	equ	0xFFE
 18832                           tosl	equ	0xFFD
 18833                           stkptr	equ	0xFFC
 18834                           pclatu	equ	0xFFB
 18835                           pclath	equ	0xFFA
 18836                           pcl	equ	0xFF9
 18837                           tblptru	equ	0xFF8
 18838                           tblptrh	equ	0xFF7
 18839                           tblptrl	equ	0xFF6
 18840                           tablat	equ	0xFF5
 18841                           prodh	equ	0xFF4
 18842                           prodl	equ	0xFF3
 18843                           indf0	equ	0xFEF
 18844                           postinc0	equ	0xFEE
 18845                           postdec0	equ	0xFED
 18846                           preinc0	equ	0xFEC
 18847                           plusw0	equ	0xFEB
 18848                           fsr0h	equ	0xFEA
 18849                           fsr0l	equ	0xFE9
 18850                           wreg	equ	0xFE8
 18851                           indf1	equ	0xFE7
 18852                           postinc1	equ	0xFE6
 18853                           postdec1	equ	0xFE5
 18854                           preinc1	equ	0xFE4
 18855                           plusw1	equ	0xFE3
 18856                           fsr1h	equ	0xFE2
 18857                           fsr1l	equ	0xFE1
 18858                           bsr	equ	0xFE0
 18859                           indf2	equ	0xFDF
 18860                           postinc2	equ	0xFDE
 18861                           postdec2	equ	0xFDD
 18862                           preinc2	equ	0xFDC
 18863                           plusw2	equ	0xFDB
 18864                           fsr2h	equ	0xFDA
 18865                           fsr2l	equ	0xFD9
 18866                           status	equ	0xFD8

Data Sizes:
    Strings     553
    Constant    134
    Data        138
    BSS         613
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      83
    BANK0           160     81     141
    BANK1           256      0     247
    BANK2           256      0     231
    BANK3           256     36     236
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    currentTCB	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), NULL(NULL[0]), 

    ETH_GetMAC@macAddr	PTR unsigned char  size(2) Largest target is 6
		 -> ethMAC(BANK1[6]), hostMacAddress(BANK1[6]), 

    eth_MAC	PTR const struct . size(2) Largest target is 6
		 -> macAddress(BANK1[6]), NULL(NULL[0]), 

    ETH_PacketListReset@ptr	PTR unsigned char  size(2) Largest target is 200
		 -> txData(BANK3[200]), 

    ETH_RemovePacket@pPacket$nextPacket	PTR void  size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    ETH_RemovePacket@pPacket$prevPacket	PTR void  size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    ETH_Shift_Tx_Packets@pElem$nextPacket	PTR void  size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    ETH_Shift_Tx_Packets@pElem$prevPacket	PTR void  size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    ETH_WriteStart@ethPacket$nextPacket	PTR void  size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    ETH_WriteStart@ethPacket$prevPacket	PTR void  size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 80
		 -> IPV4_Packet@msg(COMRAM[40]), logSyslog@storage(COMRAM[12]), makeIpv4AddresstoStr@ip_str(BANK1[15]), Network_Read@debug_str(COMRAM[80]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    F183$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_45(CODE[4]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 80
		 -> IPV4_Packet@msg(COMRAM[40]), logSyslog@storage(COMRAM[12]), makeIpv4AddresstoStr@ip_str(BANK1[15]), Network_Read@debug_str(COMRAM[80]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    ?_gmtime$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_45(CODE[4]), 

    ?___gmtime_r$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_45(CODE[4]), 

    __gmtime_r@tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_45(CODE[4]), 

    ip_str	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    logConsole@SYSLOG_time1$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_45(CODE[4]), 

    logSyslog@SYSLOG_time1$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_45(CODE[4]), 

    network_errors	PTR const unsigned char [16] size(2) Largest target is 21
		 -> STR_22(CODE[6]), STR_23(CODE[8]), STR_24(CODE[15]), STR_25(CODE[12]), 
		 -> STR_26(CODE[18]), STR_27(CODE[14]), STR_28(CODE[17]), STR_29(CODE[20]), 
		 -> STR_30(CODE[20]), STR_31(CODE[20]), STR_32(CODE[19]), STR_33(CODE[19]), 
		 -> STR_34(CODE[12]), STR_35(CODE[19]), STR_36(CODE[19]), STR_37(CODE[21]), 

    NULL$0	PTR FTN()void  size(2) Largest target is 0

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), NULL(NULL[0]), 

    pHead	PTR struct . size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    pHead$nextPacket	PTR void  size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    pHead$prevPacket	PTR void  size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK3[2]), ?_sprintf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 66
		 -> STR_14(CODE[31]), STR_15(CODE[27]), STR_16(CODE[6]), STR_21(CODE[26]), 
		 -> STR_40(CODE[66]), 

    pTail	PTR struct . size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    pTail$nextPacket	PTR void  size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    pTail$prevPacket	PTR void  size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(COMRAM[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S174tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_45(CODE[4]), 

    S1992$nextPacket	PTR void  size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    S1992$prevPacket	PTR void  size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    S25$callBack	PTR FTN(short ,)void  size(2) Largest target is 1
		 -> DHCP_Handler(), 

    S2793$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2793$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2793$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2793$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2793$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2793$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S373$3$0	PTR void  size(2) Largest target is 0

    S373$4$0	PTR void  size(2) Largest target is 0

    S373$5$0	PTR void  size(2) Largest target is 0

    S373$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    S373$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    S373$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    S373$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    S373$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S373$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S373$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S373$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> MAC_open(), 

    S373$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    S373$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    S5739$buffer	PTR unsigned char  size(2) Largest target is 80
		 -> IPV4_Packet@msg(COMRAM[40]), logSyslog@storage(COMRAM[12]), makeIpv4AddresstoStr@ip_str(BANK1[15]), Network_Read@debug_str(COMRAM[80]), 

    S5739$source	PTR const unsigned char  size(2) Largest target is 0

    __secs_to_tm@tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_45(CODE[4]), 

    sp____gmtime_r	PTR struct tm size(2) Largest target is 24
		 -> gmtime@tm(BANK2[24]), NULL(NULL[0]), 

    sp____gmtime_r$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_45(CODE[4]), 

    sp__ARPV4_Lookup	PTR struct . size(2) Largest target is 6
		 -> arpMap$macAddress$mac_array(BANK2[6]), NULL(NULL[0]), 

    sp__ETH_NewPacket	PTR struct . size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    sp__gmtime	PTR struct tm size(2) Largest target is 24
		 -> gmtime@tm(BANK2[24]), NULL(NULL[0]), 

    sp__gmtime$__tm_zone	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_45(CODE[4]), 

    sp__MAC_getAddress	PTR const struct . size(2) Largest target is 6
		 -> macAddress(BANK1[6]), 

    sp__makeIpv4AddresstoStr	PTR unsigned char  size(2) Largest target is 15
		 -> makeIpv4AddresstoStr@ip_str(BANK1[15]), 

    sp__memcpy	PTR void  size(1) Largest target is 28
		 -> ARPV4_Packet@header(COMRAM[28]), ARPV4_Request@header(COMRAM[28]), header$sha(COMRAM[6]), header$sha$mac_array(COMRAM[6]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_17(CODE[2]), STR_18(CODE[2]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__udp_table_getIterator	PTR struct . size(2) Largest target is 4
		 -> UDP_CallBackTable(CODE[4]), 

    sp__udp_table_nextEntry	PTR struct . size(2) Largest target is 4
		 -> UDP_CallBackTable(CODE[4]), NULL(NULL[0]), 

    sp__udp_table_nextEntry$callBack	PTR FTN(short ,)void  size(2) Largest target is 1
		 -> DHCP_Handler(), 

    spiMaster$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    spiMaster$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    spiMaster$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    spiMaster$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    spiMaster$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    spiMaster$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    spiMaster$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    spiMaster$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> MAC_open(), 

    spiMaster$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    spiMaster$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> F183$tm_hour(BANK2[2]), F183$tm_mday(BANK2[2]), F183$tm_min(BANK2[2]), F183$tm_mon(BANK2[2]), 
		 -> F183$tm_sec(BANK2[2]), F183$tm_year(BANK2[2]), ?_printf(BANK3[2]), ?_sprintf(COMRAM[2]), 
		 -> STR_10(CODE[2]), STR_12(CODE[2]), STR_41(CODE[2]), STR_42(CODE[2]), 
		 -> STR_43(CODE[2]), STR_44(CODE[2]), STR_46(CODE[7]), STR_6(CODE[2]), 
		 -> STR_8(CODE[2]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> F183$tm_hour(BANK2[2]), F183$tm_mday(BANK2[2]), F183$tm_min(BANK2[2]), F183$tm_mon(BANK2[2]), 
		 -> F183$tm_sec(BANK2[2]), F183$tm_year(BANK2[2]), ?_printf(BANK3[2]), ?_sprintf(COMRAM[2]), 
		 -> STR_10(CODE[2]), STR_12(CODE[2]), STR_41(CODE[2]), STR_42(CODE[2]), 
		 -> STR_43(CODE[2]), STR_44(CODE[2]), STR_6(CODE[2]), STR_8(CODE[2]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr$nextTCB$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr$nextTCB$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr$nextTCB$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr$nextTCB$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr$nextTCB$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr$nextTCB$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$nextTCB$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$nextTCB$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$nextTCB$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$nextTCB$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$nextTCB$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$nextTCB$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$prevTCB$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$prevTCB$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$prevTCB$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$prevTCB$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$prevTCB$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$prevTCB$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList$prevTCB$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList$prevTCB$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList$prevTCB$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList$prevTCB$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList$prevTCB$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList$prevTCB$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    time@t	PTR unsigned long  size(2) Largest target is 4
		 -> arpTimer(BANK1[4]), Network_Manage@now(COMRAM[4]), NULL(NULL[0]), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> my_tmr0_callback(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> my_tmr0_callback(), TMR0_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handler(), TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handler(), TMR1_DefaultInterruptHandler(), 

    txBufferPtrForRetransmit	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    txData$nextPacket	PTR void  size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    txData$nextPacket$nextPacket	PTR void  size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    txData$nextPacket$prevPacket	PTR void  size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    txData$prevPacket	PTR void  size(2) Largest target is 200
		 -> txData(BANK3[200]), NULL(NULL[0]), 

    UDP_CallBackTable$callBack	PTR FTN(short ,)void  size(2) Largest target is 1
		 -> DHCP_Handler(), 

    UDP_Receive@hptr$callBack	PTR FTN(short ,)void  size(2) Largest target is 1
		 -> DHCP_Handler(), 

    ?_udp_table_nextEntry$callBack	PTR FTN(short ,)void  size(2) Largest target is 1
		 -> DHCP_Handler(), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 66
		 -> STR_1(CODE[8]), STR_11(CODE[5]), STR_13(CODE[2]), STR_14(CODE[31]), 
		 -> STR_15(CODE[27]), STR_16(CODE[6]), STR_19(CODE[12]), STR_2(CODE[13]), 
		 -> STR_20(CODE[21]), STR_21(CODE[26]), STR_3(CODE[17]), STR_38(CODE[21]), 
		 -> STR_39(CODE[19]), STR_4(CODE[13]), STR_40(CODE[66]), STR_5(CODE[4]), 
		 -> STR_7(CODE[4]), STR_9(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(COMRAM[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 66
		 -> STR_1(CODE[8]), STR_11(CODE[5]), STR_13(CODE[2]), STR_14(CODE[31]), 
		 -> STR_15(CODE[27]), STR_16(CODE[6]), STR_19(CODE[12]), STR_2(CODE[13]), 
		 -> STR_20(CODE[21]), STR_21(CODE[26]), STR_3(CODE[17]), STR_38(CODE[21]), 
		 -> STR_39(CODE[19]), STR_4(CODE[13]), STR_40(CODE[66]), STR_5(CODE[4]), 
		 -> STR_7(CODE[4]), STR_9(CODE[4]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 66
		 -> STR_1(CODE[8]), STR_11(CODE[5]), STR_13(CODE[2]), STR_14(CODE[31]), 
		 -> STR_15(CODE[27]), STR_16(CODE[6]), STR_19(CODE[12]), STR_2(CODE[13]), 
		 -> STR_20(CODE[21]), STR_21(CODE[26]), STR_3(CODE[17]), STR_38(CODE[21]), 
		 -> STR_39(CODE[19]), STR_4(CODE[13]), STR_40(CODE[66]), STR_5(CODE[4]), 
		 -> STR_7(CODE[4]), STR_9(CODE[4]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer
    _my_tmr0_callback->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_utoa->i2_pad
    i2_stoa->i2_fputc
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_EUSART1_Write
    i2_abs->i2___almod

Critical Paths under _main in BANK0

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _Network_Init->_LOG_Init
    _timersInit->_time
    _rtcc_init->_TMR1_SetInterruptHandler
    _Network_WaitForLink->_ETH_CheckLinkUp
    _LOG_Init->_printf
    _IPV4_Init->_ipdb_init
    _ETH_Init->_ETH_CheckLinkUp
    _ETH_SendSystemReset->_SPI1_ExchangeByte
    _ETH_OpenSPI->_spi_master_open
    _MAC_open->_SPI1_Open
    _ETH_CheckLinkUp->_ENC28_PhyRead
    _ENC28_PhyRead->_ENC28_Rcr16
    _ENC28_Rcr16->_ENC28_BankSel
    _ENC28_Bfs->_ENC28_BankSel
    _ENC28_Bfc->_ENC28_BankSel
    _ENC28_PhyWrite->_ENC28_Wcr16
    _ENC28_Wcr8->_ENC28_BankSel
    _ENC28_Wcr16->_ENC28_BankSel
    _DHCP_init->_ETH_GetMAC
    _ARPV4_Init->_ETH_GetMAC
    _ETH_GetMAC->_ENC28_Rcr8
    _ENC28_Rcr8->_ENC28_BankSel
    _ENC28_BankSel->_SPI1_ExchangeByte
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _ReadADCChannels->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___almod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_printf
    _LOG_Init->_printf
    _ReadADCChannels->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   23198
                    _ReadADCChannels
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0   12223
                    _ADCC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
                       _Network_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      24
                                             16 BANK0      2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      24
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2      24
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Network_Init                                         0     0      0   12106
                         _ARPV4_Init
                          _DHCP_init
                           _ETH_Init
                          _IPV4_Init
                           _LOG_Init
                _Network_WaitForLink
                           _TCP_Init
                          _rtcc_init
                         _timersInit
 ---------------------------------------------------------------------------------
 (3) _timersInit                                           0     0      0     118
                               _time
 ---------------------------------------------------------------------------------
 (3) _rtcc_init                                            0     0      0      24
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      24
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TCP_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Network_WaitForLink                                  0     0      0    1428
                    _ETH_CheckLinkUp
 ---------------------------------------------------------------------------------
 (3) _LOG_Init                                             7     7      0    5743
                                             74 BANK0      7     7      0
                             _printf
                               _time
 ---------------------------------------------------------------------------------
 (4) _time                                                 9     5      4     118
                                             14 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _IPV4_Init                                            0     0      0     136
                          _ipdb_init
 ---------------------------------------------------------------------------------
 (4) _ipdb_init                                            2     2      0     136
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _ETH_Init                                             1     1      0    3795
                                             28 BANK0      1     1      0
                          _ENC28_Bfs
                     _ENC28_PhyWrite
                         _ENC28_Rcr8
                        _ENC28_Wcr16
                         _ENC28_Wcr8
                    _ETH_CheckLinkUp
                        _ETH_OpenSPI
                _ETH_PacketListReset
                _ETH_SendSystemReset
                     _MAC_getAddress
 ---------------------------------------------------------------------------------
 (4) _MAC_getAddress                                       2     0      2       0
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ETH_SendSystemReset                                  0     0      0      29
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _ETH_PacketListReset                                  4     4      0      69
                                             14 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _ETH_OpenSPI                                          0     0      0     145
                    _spi_master_open
 ---------------------------------------------------------------------------------
 (5) _spi_master_open                                      3     3      0     145
                                             16 BANK0      3     3      0
                           _MAC_open
 ---------------------------------------------------------------------------------
 (6) _MAC_open                                             0     0      0     116
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (7) _SPI1_Open                                            2     2      0     116
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _ETH_CheckLinkUp                                      2     2      0    1428
                                             26 BANK0      2     2      0
                      _ENC28_PhyRead
 ---------------------------------------------------------------------------------
 (5) _ENC28_PhyRead                                        4     2      2    1405
                                             22 BANK0      4     2      2
                          _ENC28_Bfc
                          _ENC28_Bfs
                        _ENC28_Rcr16
                         _ENC28_Rcr8
                         _ENC28_Wcr8
 ---------------------------------------------------------------------------------
 (6) _ENC28_Rcr16                                          5     3      2     312
                                             17 BANK0      5     3      2
                      _ENC28_BankSel
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ENC28_Bfs                                            2     1      1     262
                                             17 BANK0      2     1      1
                      _ENC28_BankSel
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ENC28_Bfc                                            2     1      1     263
                                             17 BANK0      2     1      1
                      _ENC28_BankSel
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _ENC28_PhyWrite                                       4     2      2     970
                                             20 BANK0      4     2      2
                         _ENC28_Rcr8
                        _ENC28_Wcr16
                         _ENC28_Wcr8
 ---------------------------------------------------------------------------------
 (6) _ENC28_Wcr8                                           2     1      1     282
                                             17 BANK0      2     1      1
                      _ENC28_BankSel
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _ENC28_Wcr16                                          3     1      2     353
                                             17 BANK0      3     1      2
                      _ENC28_BankSel
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _DHCP_init                                            0     0      0     397
                         _ETH_GetMAC
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Init                                           1     1      0     465
                                             21 BANK0      1     1      0
                         _ETH_GetMAC
 ---------------------------------------------------------------------------------
 (4) _ETH_GetMAC                                           2     0      2     397
                                             19 BANK0      2     0      2
                         _ENC28_Rcr8
 ---------------------------------------------------------------------------------
 (6) _ENC28_Rcr8                                           2     2      0     257
                                             17 BANK0      2     2      0
                      _ENC28_BankSel
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _ENC28_BankSel                                        2     2      0     147
                                             15 BANK0      2     2      0
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _SPI1_ExchangeByte                                    1     1      0      29
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0      69
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      23
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      23
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      23
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadADCChannels                                      0     0      0    5490
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              40     4     36    5461
                                             72 BANK0      2     2      0
                                              0 BANK3     36     0     36
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     2      4    5302
                                             66 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           14    10      4    5128
                                             52 BANK0     14    10      4
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                11     6      5    1379
                                             38 BANK0     11     6      5
                            ___lldiv
                            ___llmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     161
                                             14 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     164
                                             14 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _stoa                                                11     8      3     499
                                             24 BANK0     11     8      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     182
                                             14 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                14     9      5    1881
                                             38 BANK0     14     9      5
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5     824
                                             30 BANK0      8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3     391
                                             24 BANK0      6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     292
                                             16 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      58
                                             15 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      29
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      67
                                             24 BANK0      4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___almod                                             10     2      8     298
                                             14 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     302
                                             14 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      29
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             4     2      2       0
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                         14    14      0    5427
                                              0 BANK0     14    14      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0      90
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR1_WriteTimer                                     2     0      2      90
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
                       _rtcc_handler *
 ---------------------------------------------------------------------------------
 (16) _rtcc_handler                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            0     0      0    5337
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR0_CallBack                                       0     0      0    5337
                                NULL *
       _TMR0_DefaultInterruptHandler *
                   _my_tmr0_callback *
 ---------------------------------------------------------------------------------
 (16) _my_tmr0_callback                                    0     0      0    5337
                           i2_printf
 ---------------------------------------------------------------------------------
 (17) i2_printf                                            5     3      2    5337
                                             57 COMRAM     3     1      2
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (18) i2_vfprintf                                          6     2      4    5272
                                             51 COMRAM     6     2      4
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) i2_vfpfcnvrt                                        13    10      3    5128
                                             38 COMRAM    13    10      3
                             i2_dtoa
                            i2_fputc
               i2_read_prec_or_width
                             i2_stoa
                             i2_utoa
 ---------------------------------------------------------------------------------
 (20) i2_utoa                                             11     6      5    1379
                                             24 COMRAM    11     6      5
                          i2___lldiv
                          i2___llmod
                              i2_pad
 ---------------------------------------------------------------------------------
 (21) i2___llmod                                           9     1      8     161
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (21) i2___lldiv                                          13     5      8     164
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (20) i2_stoa                                             11     8      3     499
                                             10 COMRAM    11     8      3
                            i2_fputc
 ---------------------------------------------------------------------------------
 (20) i2_read_prec_or_width                                7     5      2     182
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (20) i2_dtoa                                             14     9      5    1881
                                             24 COMRAM    14     9      5
                          i2___aldiv
                          i2___almod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (21) i2_pad                                               8     3      5     824
                                             16 COMRAM     8     3      5
                            i2_fputc
                            i2_fputs
 ---------------------------------------------------------------------------------
 (22) i2_fputs                                             6     3      3     391
                                             10 COMRAM     6     3      3
                            i2_fputc
 ---------------------------------------------------------------------------------
 (23) i2_fputc                                             8     5      3     292
                                              2 COMRAM     8     5      3
                            i2_putch
 ---------------------------------------------------------------------------------
 (24) i2_putch                                             1     1      0      58
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (25) i2_EUSART1_Write                                     1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (21) i2_abs                                               4     2      2      67
                                             10 COMRAM     4     2      2
                          i2___almod (ARG)
 ---------------------------------------------------------------------------------
 (21) i2___almod                                          10     2      8     298
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (21) i2___aldiv                                          14     6      8     302
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 25
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadADCChannels
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aldiv
             ___almod
             _abs
               ___almod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
           _stoa
             _fputc
           _utoa
             ___lldiv
             ___llmod
             _pad
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _Network_Init
       _ARPV4_Init
         _ETH_GetMAC
           _ENC28_Rcr8
             _ENC28_BankSel
               _SPI1_ExchangeByte
             _SPI1_ExchangeByte
       _DHCP_init
         _ETH_GetMAC
       _ETH_Init
         _ENC28_Bfs
           _ENC28_BankSel
           _SPI1_ExchangeByte
         _ENC28_PhyWrite
           _ENC28_Rcr8
           _ENC28_Wcr16
             _ENC28_BankSel
             _SPI1_ExchangeByte
           _ENC28_Wcr8
             _ENC28_BankSel
             _SPI1_ExchangeByte
         _ENC28_Rcr8
         _ENC28_Wcr16
         _ENC28_Wcr8
         _ETH_CheckLinkUp
           _ENC28_PhyRead
             _ENC28_Bfc
               _ENC28_BankSel
               _SPI1_ExchangeByte
             _ENC28_Bfs
             _ENC28_Rcr16
               _ENC28_BankSel
               _SPI1_ExchangeByte
             _ENC28_Rcr8
             _ENC28_Wcr8
         _ETH_OpenSPI
           _spi_master_open
             _MAC_open
               _SPI1_Open
         _ETH_PacketListReset
         _ETH_SendSystemReset
           _SPI1_ExchangeByte
         _MAC_getAddress
       _IPV4_Init
         _ipdb_init
       _LOG_Init
         _printf
         _time
       _Network_WaitForLink
         _ETH_CheckLinkUp
       _TCP_Init
       _rtcc_init
         _TMR1_SetInterruptHandler
       _timersInit
         _time
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _printf

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
       _my_tmr0_callback *
         i2_printf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_dtoa
                 i2___aldiv
                 i2___almod
                 i2_abs
                   i2___almod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
               i2_fputc
               i2_read_prec_or_width
               i2_stoa
                 i2_fputc
               i2_utoa
                 i2___lldiv
                 i2___llmod
                 i2_pad
   _TMR1_ISR
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
       _rtcc_handler *
     _TMR1_WriteTimer

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3719      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256     36     236     92.2%
BITBANK2           256      0       0      0.0%
BANK2              256      0     231     90.2%
BITBANK1           256      0       0      0.0%
BANK1              256      0     247     96.5%
BITBIGSFRlllh      163      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     81     141     88.1%
BITBANK14          136      0       0      0.0%
BANK14             136      0       0      0.0%
BITBIGSFRh         101      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     60      83     88.3%
BITBIGSFRlh         57      0       0      0.0%
BITBIGSFRlllll      23      0       0      0.0%
BITBIGSFRllllh      18      0       0      0.0%
BITBIGSFRllh         4      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     937      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Jun 13 22:20:19 2025

                             _SPI1_ExchangeByte 28BE                              _SPI1_ExchangeBlock 0000  
                                            l19 2A02                                              l70 29BA  
                                            l64 26E0                                              l67 2998  
                            ?_SPI1_ExchangeByte 0001                                              _ip 0148  
                                ENC28_PhyRead@a 0079                                             l130 1D94  
                                           l170 24EE                                             l165 2A52  
                                           l261 289E                                             l334 2324  
                                           l271 28C6                                             l273 28D6  
                                           l265 17AC                                             l521 1C5A  
                                           l274 28DA                                             l370 2A22  
                                           l621 28E0                                             l454 2A58  
                                           l614 27A8                                             l623 28F6  
                                           l385 1CBC                                             l617 28BC  
                                           l740 2096                                             l388 1CFA  
                                           l743 20A6                                             l840 2296  
                                           l752 270A                                             l745 20AC  
                                           l826 2742                                             l666 2860  
                                           l835 2274                                             l748 20C0  
                                           l844 2804                                             l772 2166  
                                           l676 2060                                             l829 275A  
                                           l853 2416                                             l862 27B8  
                                           l847 281A                                             l791 2944  
                                           l872 27F4                                             l865 27CE  
                                           l858 2430                                             l891 2A0E  
                                           l884 2202                                             l869 27DE  
                                           l797 0ABC                                             l878 23EE  
                                           l887 2A04                                             _GIE 7F97  
                                   ?_ETH_GetMAC 0073                                 _timer1ReloadVal 00C9  
                                           _abs 2562                                             _pad 1F2E  
                           ??_SPI1_ExchangeByte 006E                                             prod 0FF3  
                                           tosl 0FFD                                             wreg 0FE8  
                           __end_ofi2_vfpfcnvrt 0890                              i2___almod@dividend 0001  
                                          l2010 2114                                            ?_abs 0078  
                                          l2030 2A64                                            l2120 2986  
                                          l1160 25FC                                            l2114 265A  
                                          l2123 2972                                            l2220 283E  
                                          l2117 29F6                                            l3022 1F46  
                                          l3030 0AEE                                            l1087 1F2C  
                                          l2223 2A60                                            l3032 0AF6  
                                          l3033 0B3C                                            l3122 2596  
                                          l3026 1F96                                            l3115 22E0  
                                          l3044 0C64                                            l3052 10E6  
                                          l3060 0E24                                            l2333 1254  
                                          l3134 16F2                                            l3142 2368  
                                          l3062 0E2C                                            l1526 2732  
                                          l3119 257E                                            l3072 1910  
                                          l3056 1148                                            l2248 2A18  
                                          l2281 1B04                                            l2346 154C  
                                          l3076 1918                                            l3068 0F24  
                                          l3149 2880                                            l3095 04BA  
                                          l3087 0194                                            l2288 1B14  
                                          l3096 0376                                            l1922 2918  
                                          l1674 29CA                                            l1931 29E8  
                                          l1925 292C                            _ADCC_StartConversion 29EA  
                                          l1943 2A36                                            l2681 1E1E  
                                          l2674 1E0E                                            l1946 2A2C  
                                          l1949 2A40                                            ?_pad 007E  
                                          l1898 2472                                            l8200 0B38  
                                          l8210 0B9C                                            l8202 0B44  
                                          l8050 1706                                            l8220 0C22  
                                          l8212 0BA2                                            l8204 0B4C  
                                          l9100 1ED4                                            l8052 1748  
                                          l8060 17AA                                            l9020 1C8E  
                                          l8222 0C32                                            l8206 0B52  
                                          l8214 0BD6                                            l8230 103C  
                                          l9110 1F26                                            l9102 1EE4  
                                          l8054 17A2                                            l9030 1CAC  
                                          l8224 0C38                                            l8216 0BF2  
                                          l8208 0B96                                            l8240 10B0  
                                          l8232 1058                                            l8160 2080  
                                          l9104 1EFA                                            l8056 17A4  
                                          l8048 16F8                                            l9200 08A2  
                                          l9040 1CD8                                            l9016 2A1A  
                                          l8226 0C48                                            l8218 0C08  
                                          l8250 112C                                            l8242 10BE  
                                          l8234 1060                                            l8170 20B2  
                                          l8162 2092                                            l9106 1F00  
                                          l9050 2702                                            l8402 2A4C  
                                          l9210 08CA                                            l9202 08AC  
                                          l9042 1CE8                                            l9026 1C92  
                                          l9018 1C5C                                            l8244 10DE  
                                          l8236 106C                                            l8260 0E46  
                                          l8252 0E08                                            l8172 20BE  
                                          l8164 2098                                            l9108 1F16  
                                          l9044 26E2                                            l9060 2116  
                                          l9220 0912                                            l9212 08E2  
                                          l9204 08AE                                            l9036 1CBE  
                                          l9028 1CAA                                            l9300 28DC  
                                          l8190 0AFE                                            l8246 10F2  
                                          l8238 1072                                            l8262 0E4C  
                                          l8270 0EC4                                            l8254 0E16  
                                          l8166 20A4                                            l8158 2066  
                                          l9046 26F0                                            l9070 213E  
                                          l9062 2120                                            l9230 0960  
                                          l9222 0922                                            l9214 08EA  
                                          l9206 08B4                                            l9038 1CD6  
                                          l9302 28E2                                            l7624 2918  
                                          l7632 29E0                                            l7640 165A  
                                          l8192 0B0E                                            l8280 1868  
                                          l8248 1126                                            l7800 1AFE  
                                          l8272 0ED8                                            l8264 0E84  
                                          l8256 0E34                                            l8168 20AA  
                                          l9048 2700                                            l9056 2708  
                                          l9072 214C                                            l9064 2128  
                                          l9080 2A06                                            l9240 099C  
                                          l9232 096C                                            l9224 0932  
                                          l9216 08F4                                            l9208 08B8  
                                          l9304 28A0                                            l9400 20EA  
                                          l9128 2A10                                            l7810 1170  
                                          l7802 114A                                            l7626 2928  
                                          l7642 1664                                            l8194 0B14  
                                          l8186 0ABE                                            l8290 18DC  
                                          l8282 1872                                            l8274 0EEE  
                                          l8266 0E8A                                            l8258 0E3E  
                                          l8610 00DA                                            l9090 23D4  
                                          l8602 27D4                                            l9074 2150  
                                          l9066 212A                                            l9082 2A0C  
                                          l9250 09F8                                            l9242 09AC  
                                          l9234 0978                                            l9226 0940  
                                          l9218 0904                                            l9170 2A54  
                                          l9306 28AE                                            l9410 20F4  
                                          l9402 20EC                                            l7820 11B8  
                                          l7812 117E                                            l7804 114E  
                                          l7644 1680                                            l7636 1638  
                                          l7900 1F3E                                            l8196 0B24  
                                          l8188 0AE2                                            l8284 1896  
                                          l8292 18E8                                            l8276 0F08  
                                          l8268 0E90                                            l8620 0140  
                                          l8612 0100                                            l8700 0496  
                                          l9420 262E                                            l9092 23DE  
                                          l9084 23B2                                            l8604 27DC  
                                          l9076 292E                                            l9068 2132  
                                          l9260 0A6C                                            l9252 0A12  
                                          l9244 09B8                                            l9236 0984  
                                          l9228 0950                                            l9412 2988  
                                          l9404 20EE                                            l7830 1202  
                                          l7822 11C0                                            l7814 118E  
                                          l7806 115C                                            l7910 2562  
                                          l7646 16B2                                            l7638 164A  
                                          l7670 2348                                            l7902 1F52  
                                          l8198 0B30                                            l8286 18A2  
                                          l8630 018C                                            l8622 014C  
                                          l8614 010C                                            l9422 2650  
                                          l8550 2738                                            l9094 1EA8  
                                          l9086 23B8                                            l8606 27EA  
                                          l9078 292E                                            l9270 0AB8  
                                          l9262 0A7C                                            l9254 0A2C  
                                          l9246 09C8                                            l9238 0990  
                                          l9190 0894                                            l9414 298E  
                                          l9406 20F0                                            l9430 22F2  
                                          l7840 1234                                            l7832 1212  
                                          l7824 11CC                                            l7816 1192  
                                          l7808 116C                                            l7912 2572  
                                          l7664 2326                                            l7904 1F62  
                                          l8288 18BE                                            l8640 0200  
                                          l8624 0160                                            l8616 0118  
                                          l9424 2658                                            l7680 28C2  
                                          l8552 2740                                            l9096 1EB8  
                                          l9280 25DE                                            l9272 25CC  
                                          l9088 23C2                                            l8608 27F2  
                                          l9264 0A8C                                            l9256 0A46  
                                          l9248 09DE                                            l9192 0898  
                                          l9416 2990                                            l9408 20F2  
                                          l9440 281C                                            l9432 22F6  
                                          l7842 1244                                            l7834 1214  
                                          l7826 11DA                                            l7818 11A2  
                                          l7850 1474                                            l7666 2334  
                                          l7906 1F68                                            l8650 027E  
                                          l8642 0228                                            l8634 019A  
                                          l8626 0170                                            l8618 011C  
                                          l9362 2A2E                                            l8554 274C  
                                          l9098 1EBE                                            l9282 25E0  
                                          l8570 27FA                                            l8562 27AE  
                                          l8802 24B8                                            l9266 0A9C  
                                          l9258 0A60                                            l9194 089A  
                                          l9290 2714                                            l9418 2996  
                                          l9370 29AC                                            l9450 283A  
                                          l9442 2824                                            l9434 230E  
                                          l9426 22E2                                            l7836 121E  
                                          l7828 11E4                                            l7860 14BC  
                                          l7852 1484                                            l7668 2342  
                                          l7908 1F86                                            l7780 1A70  
                                          l8636 01C0                                            l8628 0184  
                                          l9364 2A24                                            l9460 2460  
                                          l9452 2432                                            l8556 2756  
                                          l9284 25F0                                            l8900 240C  
                                          l8572 2802                                            l8564 27B6  
                                          l8580 225A                                            l8804 24BC  
                                          l9268 0AA8                                            l9196 089C  
                                          l9188 0890                                            l9292 2716  
                                          l9380 20C2                                            l9372 2882  
                                          l9444 2826                                            l9436 2312  
                                          l9428 22E6                                            l7838 1224  
                                          l7870 150C                                            l7862 14C4  
                                          l7854 1488                                            l7846 1462  
                                          l7790 1ABA                                            l7782 1A82  
                                          l8662 030C                                            l8654 029A  
                                          l8638 01DE                                            l8646 024E  
                                          l9366 2A38                                            l9462 246E  
                                          l9454 2442                                            l8558 2758  
                                          l9278 25D0                                            l9286 29BC  
                                          l8910 242E                                            l8902 2414  
                                          l8574 2810                                            l8566 27C4  
                                          l8590 2278                                            l8582 2260  
                                          l8814 24CA                                            l9198 089E  
                                          l9294 2720                                            l9390 20E0  
                                          l9382 20CC                                            l9374 2894  
                                          l9446 282A                                            l9438 2320  
                                          l7872 1516                                            l7864 14D0  
                                          l7856 1496                                            l7848 1466  
                                          l7792 1AC4                                            l7784 1A98  
                                          l8680 03B0                                            l8672 035C  
                                          l8664 0322                                            l8656 02BC  
                                          l8648 0264                                            l8920 22A4  
                                          l9456 2444                                            l9368 2A62  
                                          l8904 241A                                            l8576 2818  
                                          l8568 27CC                                            l8592 227A  
                                          l8584 2262                                            l8808 24C4  
                                          l9288 270C                                            l9296 2840  
                                          l9392 20E2                                            l9384 20D6  
                                          l9376 289A                                            l9448 282C  
                                          l9482 29EE                                            l7866 14DE  
                                          l7874 151C                                            l7858 14A6  
                                          l7794 1AE2                                            l7786 1AA0  
                                          l7890 1DD0                                            l7882 1D96  
                                          l8682 03D4                                            l8690 044E  
                                          l8674 0378                                            l8666 0340  
                                          l8658 02E6                                            l8922 22B8  
                                          l9458 2452                                            l8906 241C  
                                          l8594 2282                                            l8586 2268  
                                          l8578 2252                                            l9298 2852  
                                          l9394 20E4                                            l9386 20DC  
                                          l9378 289C                                            l9492 295E  
                                          l9484 29F2                                            l7876 152C  
                                          l7868 14FC                                            l7796 1AF2  
                                          l7788 1AAC                                            l7892 1DEE  
                                          l7884 1DAE                                            l8692 045E  
                                          l8684 0408                                            l8676 039C  
                                          l8924 22D6                                            l8908 2426  
                                          l8596 228C                                            l8588 2272  
                                          l9396 20E6                                            l9388 20DE  
                                          l9486 29F4                                            l7878 153C  
                                          l7798 1AF4                                            l7894 1DFE  
                                          l7886 1DB6                                            l8686 043C  
                                          l8678 03A8                                            l8918 2298  
                                          l8598 228E                                            l8950 2024  
                                          l8942 1FFE                                            l9398 20E8  
                                          l9488 2974                                            l7896 1E08  
                                          l7888 1DC2                                            l8696 0484  
                                          l8952 2038                                            l8944 2008  
                                          l7898 1F2E                                            l8938 29F8  
                                          l8954 2050                                            l8946 200A  
                                          l8892 23F4                                            l8884 21BC  
                                          l8948 201A                                            l9852 2A5E  
                                          l8894 23FC                                            l8886 21D2  
                                          STR_1 FFD0                                            l8896 2402  
                                          l8888 21EA                                            STR_2 FFA3  
                                          STR_3 FF68                                            l8898 2404  
                                          STR_4 FF96                                            STR_5 FFF4  
                                          STR_6 FFFA                                            _LATA 0F83  
                                          _LATB 0F84                                            _LATC 0F85  
                               ENC28_PhyWrite@a 0076                                 ENC28_PhyWrite@d 0074  
                                          u5030 2928                                            u5031 2924  
                                          u6000 10B0                                            u6001 10AC  
                                          u5050 164A                                            u5130 2368  
                                          u6010 10BE                                            u5051 1646  
                                          u5131 2364                                            u6011 10BA  
                                          u5060 165A                                            u6100 1910  
                                          u6020 10DE                                            u5300 1ABA  
                                          u5061 1656                                            u6101 190C  
                                          u6021 10DA                                            u5301 1AB6  
                                          u5070 1680                                            u6030 1114  
                                          u5310 1AE2                                            u5150 28D6  
                                          u5071 167C                                            u5311 1ADE  
                                          u5151 28D2                                            u5320 115C  
                                          u5400 14BC                                            u5080 16B2  
                                          u6040 1148                                            u5321 1158  
                                          u5401 14B8                                            u5081 16AE  
                                          u6041 1144                                            u5330 117E  
                                          u5410 14DE                                            u6050 0E16  
                                          u5331 117A                                            u5411 14DA  
                                          u6051 0E12                                            u5340 11B8  
                                          u5420 14FC                                            u6060 0ED8  
                                          _PMD0 0EE1                                            u5341 11B4  
                                          u5421 14F8                                            u6037 110A  
                                          u6061 0ED4                                            _PMD1 0EE2  
                                          u7030 2984                                            u5350 11DA  
                                          u5430 152C                                            u6070 0EEE  
                               ENC28_PhyWrite@v 0077                                            _PMD2 0EE3  
                                          u7031 297E                                            u5351 11D6  
                                          u5431 1528                                            u6071 0EEA  
                                          _PMD3 0EE4                                            u7040 2986  
                                          u5360 1202                                            u5440 1DAE  
                                          u6080 0F08                                            _PMD4 0EE5  
                                          u5361 11FE                                            u5441 1DAA  
                                          u6081 0F04                                            _PMD5 0EE6  
                                          u5370 1234                                            u6090 1896  
                                          u5290 1A98                                            u5450 1DD0  
                                          u5371 1230                                            u6091 1892  
                                          u5291 1A94                                            u5451 1DCC  
                                          u5380 1474                                            u5460 1DEE  
                                          u6500 01FC                                            u5381 1470  
                                          u5461 1DEA                                            u6501 01F8  
                                          u5390 1496                                            u5470 1F3E  
                                          u6510 02B8                                            u5710 1706  
                                          u5391 1492                                            u5471 1F3A  
                                          u6511 02B4                                            u5711 1702  
                                          u5480 1F86                                            u6520 039C  
                                          u5481 1F82                                            u6521 0398  
                                          u5490 2572                                            u6530 03D4  
                                          u5491 256E                                            u6531 03D0  
                                          u5900 0AD2                                            u6540 0408  
                                          u6541 0404                                            u5910 0AE2  
                                          u6550 043C                                            u6470 0100  
                                          u5911 0ADE                                            u6551 0438  
                                          u6471 00FC                                            u5920 0B0E  
                                          u6560 045E                                            u6480 0140  
                                          u5921 0B0A                                            u6561 045A  
                                          u6481 013C                                            u5930 0B24  
                                          u6490 01DE                                            u6810 2038  
                                          u5931 0B20                                            u6491 01DA  
                                          u6811 2034                                            u5940 0BF2  
                                          u5860 2080                                            u6900 2166  
                                          u5941 0BEE                                            u5861 207C  
                                          u6901 2162                                            u6805 2022  
                                          u5950 0C08                                            u5870 2092  
                                          u6910 2944                                            u6806 2024  
                                          u5951 0C04                                            u5871 208E  
                                          u6911 2940                                            u5960 0C22  
                                          u6920 23EE                                            u5961 0C1E  
                                          u6921 23EA                                            u5970 0C32  
                                          u5890 0AD0                                            u6770 21EA  
                                          u5971 0C2E                                            u5891 0ACA  
                                          u6771 21E6                                            u5980 1058  
                                          u6780 22D6                                            u5981 1054  
                                          u6781 22D2                                            u5990 10A0  
                                          u6870 1CBC                                            u6871 1CB8  
                                          u6880 1CE8                                            u6881 1CE4  
                                          u6890 2700                                            u6970 08E2  
                                          u6891 26FC                                            u6971 08DE  
                                          u6980 25F0                                            u5997 1096  
                                          u6981 25EC                                            u6990 28F6  
                                          u6991 28F2                          ??i2_read_prec_or_width 0003  
                                          _WPUA 0F10                                            _WPUB 0F18  
                                          _WPUC 0F20                                            _WPUE 0F2D  
                                 _EUSART1_Write 2914                                            abs@a 0078  
                                          _dbuf 0164                                            _main 2204  
                                          _dtoa 0ABE                                            _prec 003D  
                               _TMR0_StartTimer 2A5E                                            _time 1FFE  
                                          pad@i 0084                                            pad@p 0081  
                                          fsr0h 0FEA                                            fsr1h 0FE2  
                                          indf0 0FEF                                            fsr2h 0FDA  
                                          fsr0l 0FE9                                            indf2 0FDF  
                                          fsr1l 0FE1                                            fsr2l 0FD9  
                                          _stoa 103C                                            btemp 0054  
                                          _utoa 0E08                                            prodh 0FF4  
                                          prodl 0FF3                                            start 00D6  
                                  ?_ETH_OpenSPI 0001                                 __end_ofi2_fputc 1868  
                               __end_ofi2_fputs 24B4                       __end_of_SPI1_ExchangeByte 28DC  
                               __end_ofi2_putch 2A4C                      makeIpv4AddresstoStr@ip_str 0198  
                    ??_TMR1_SetInterruptHandler 0070                                     i2_dtoa$5818 001E  
                                  ___param_bank 0000                                           ??_abs 007A  
                                         ??_pad 0083                                      i2_vfprintf 236A  
                       __end_of_TMR0_Initialize 2840                  ??_TMR0_DefaultInterruptHandler 0001  
                 __end_of_OSCILLATOR_Initialize 299A                                __end_of_MAC_open 2A54  
                                         l12100 1D3C                                           l12102 1D48  
                                         l12110 2204                                           l12032 2862  
                                         l12104 1D4E                                           l12040 1BD8  
                                         l12120 221E                                           l12112 2208  
                                         l12034 286C                                           l12106 1D62  
                                         l12050 1C48                                           l12042 1BF6  
                                         l12122 2222                                           l12114 220A  
                                         l12108 1D6E                                           l12052 1C4A  
                                         l12060 2790                                           l12124 2230  
                                         l12116 220C                                           l12038 1BBA  
                                         l12070 27A4                                           l12062 2794  
                                         l12054 2784                                           l12126 2240  
                                         l12118 221A                                           l12048 1BFA  
                                         l12064 2798                                           l12056 2788  
                                         l12080 26CC                                           l12072 26B8  
                                         l12128 2242                                           l12090 1CFC  
                                         l12066 279C                                           l12058 278C  
                                         l12082 26D0                                           l12074 26C0  
                                         l12092 1D02                                           l12068 27A0  
                                         l12084 26D4                                           l12076 26C4  
                                         l12094 1D16                                           l12086 26D8  
                                         l12078 26C8                                           l12096 1D22  
                                         l12088 26DC                                           l12098 1D28  
                                         l12196 24E0                                __end_of_ETH_Init 0ABE  
                             _nextPacketPointer 0049                                 __end_of___aldiv 1256  
                                         _ADACQ 0F5C                                           _ADCAP 0F5D  
                                         _ADACT 0F56                                 __end_of___almod 154E  
                                         ?_main 0001                                           ?_dtoa 0086  
                                         _ADCLK 0F57                                           _ADCNT 0F67  
                                         _ADPCH 0F5F                                           _ADREF 0F58  
                                         _ADPRE 0F5E                                           STR_11 FFEB  
                                         STR_20 FE95                                           STR_13 FFFC  
                                         STR_21 FE51                                           STR_14 FE17  
                                         STR_30 FEAA                                           STR_22 FFDF  
                                         STR_15 FE36                                           STR_31 FED2  
                                         STR_23 FFC8                                           STR_16 FFE5  
                                         STR_40 FDD5                                           STR_32 FF1F  
                                         STR_24 FF79                                           STR_17 FFF8  
                                         STR_33 FF0C                                           STR_25 FFBC  
                                         STR_34 FFB0                                           STR_26 FF45  
                                         STR_35 FEF9                                           STR_27 FF88  
                                         STR_36 FEE6                                           STR_28 FF57  
                                         STR_45 FFF0                                           STR_37 FE6B  
                                         STR_29 FEBE                                           STR_46 FFD8  
                                         STR_38 FE80                                           STR_39 FF32  
                                         _ADRPT 0F66                                           ?_time 006E  
                                 _lastAckNumber 0128                SPI1_Open@spi1UniqueConfiguration 006F  
                                         ?_stoa 0078                                 __end_of___lldiv 1B16  
                                         ?_utoa 0086                                           u10230 1C5A  
                                         u10231 1C56                                           u10240 1D16  
                                         u10241 1D12                                           u10250 1D3C  
                                         u10251 1D38                                           u10260 1D62  
                                         u10261 1D5E                                           u10270 2240  
                                         u10271 223C                                           _T1CLK 0FD2  
                                         _T1CON 0FCF                                 __end_of___llmod 1E20  
                                         u10377 08B0                                           u10387 08C0  
                                         _LATC1 7C29                                           i2l133 29AA  
                                         i2l363 252A                                           i2l348 2782  
                                         i2l373 2A66                                           i2l367 2688  
                                         i2l669 29DA                                           _OSCEN 0EDC  
                                  vfpfcnvrt@fmt 0095                                           _TMR0H 0FD4  
                                         _TMR1H 0FCE                                           _TMR0L 0FD3  
                                         _TMR1L 0FCD                                __end_of_LOG_Init 1C5C  
                                         _TRISA 0F88                                           _TRISB 0F89  
                                         _TRISC 0F8A                                           i2_abs 2598  
                                         i2_pad 1F98                       ?_TMR0_SetInterruptHandler 006E  
                       ??_ADCC_IsConversionDone 006E                                __end_of_TMR0_ISR 262E  
                              __end_of_TMR1_ISR 252C                                __end_of_TCP_Init 2734  
                                         _pHead 0047                                           _pTail 0045  
                                         _flags 00CB                               ETH_GetMAC@macAddr 0073  
                           read_prec_or_width@c 0072                                           _errno 014E  
                           read_prec_or_width@n 0073                           ?_ADCC_StartConversion 0001  
                                         _fputc 1638                                           _limit 0200  
                                         _fputs 2326                                           pad@fp 007E  
                                         _width 00BB                                           _putch 29DC  
                                         dtoa@d 0087                                           dtoa@i 0092  
                                         dtoa@p 008F                                           dtoa@s 0091  
                                         dtoa@w 008D                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 2326                                           pclath 0FFA  
                                         pclatu 0FFB                                           tablat 0FF5  
                                         time@t 006E                               __end_of_ENC28_Bfc 27F6  
                      _bytesToSendForRetransmit 00C1                               __end_of_ENC28_Bfs 27D0  
                                         stoa@l 0081                                           stoa@p 007D  
                                         stoa@s 0079                                           ttemp5 0055  
                                         ttemp6 0058                                           ttemp7 005C  
                                         utoa@d 0087                                           utoa@i 008F  
                                         utoa@p 008D                                           utoa@w 008B  
                                         status 0FD8                                ??_ENC28_PhyWrite 0076  
                                         wtemp8 0055                         _localSeqnoForRetransmit 012C  
            _EUSART1_DefaultFramingErrorHandler 0000                                 _TMR1_WriteTimer 275C  
                         spi_master_open@config 0072                                __end_ofi2_printf 2914  
                             __end_of_DHCP_init 29CC                                 __initialization 19CA  
                             i2___lldiv@divisor 0005                      __end_of_EUSART1_Initialize 2474  
                                  __end_of_main 224E                                    __end_of_dtoa 0C66  
                             i2___lldiv@counter 000D                                    __end_of_time 2062  
                                  __end_of_stoa 114A                                    _xorSequences FD93  
                                    i2printf@ap 003C                                    __end_of_utoa 0F26  
                   ?_INTERRUPT_InterruptManager 0001                                     i2_vfpfcnvrt 04BC  
                                 i2vfpfcnvrt@ap 0029                                   i2vfpfcnvrt@cp 0032  
                                 i2vfpfcnvrt@fp 0027                                          ??_main 00B1  
                                        ??_dtoa 008B                                          ??_time 0072  
                                        ??_stoa 007B                                          ??_utoa 008B  
                                 __activetblptr 0003                                  _MAC_getAddress 29F8  
                                        ?i2_abs 000B                                          ?i2_pad 0011  
                    __end_of_read_prec_or_width 191A                          ETH_PacketListReset@ptr 006E  
                             __end_of_IPV4_Init 2A5A                                          _ADACCH 0F71  
                                        _ADACCL 0F70                         __end_of_TMR0_StartTimer 2A62  
                                        _ADCON0 0F60                                          _ADCON1 0F59  
                                        _ADCON2 0F5A                                          _ADCON3 0F5B  
                                        _ADERRH 0F6F                                          _ADERRL 0F6E  
                               ipdb_init@x_1258 006F                                          ?_fputc 0070  
                              ___llmod@dividend 006E                                          _ADLTHH 0F6B  
                                        _ADLTHL 0F6A                                          ?_fputs 0078  
                                        _ADRESH 0F64                                          _ADRESL 0F63  
                                        _ADSTAT 0F65                                          _ADUTHH 0F6D  
                                        _ADUTHL 0F6C                                  i2___aldiv@sign 000A  
                                        _ANSELA 0F11                                          ?_putch 0001  
                                        _ANSELB 0F19                                          _ANSELC 0F21  
                                        _T0CON0 0FD5                                          _T0CON1 0FD6  
                                        _T1GATE 0FD1                                          _T1GCON 0FD0  
                                        _RC1REG 0F99                                          _RC1STA 0F9D  
                                        _RC3PPS 0EFA                         TMR1_WriteTimer@timerVal 0001  
                                        _ODCONA 0F0F                                          _ODCONB 0F17  
                                        _ODCONC 0F1F                                          _RC6PPS 0EFD  
                                        i2l2040 009A                                          i2l2041 009A  
                                        i2l2035 0068                                          i2l3022 1FAE  
                                        i2l3030 0C94                                          i2l3032 0C9C  
                                        i2l3033 0CE2                                          i2l2241 262C  
                                        i2l3122 25CA                                          i2l3026 1FFC  
                                        i2l3115 23AC                                          i2l2251 2A68  
                                        i2l3044 0E06                                          i2l3052 1404  
                                        i2l3060 0F40                                          i2l2333 135E  
                                        i2l2245 26B6                                          i2l3134 1866  
                                        i2l3142 24B2                                          i2l3062 0F48  
                                        i2l3119 25B2                                          i2l3072 19C0  
                                        i2l3056 1460                                          i2l2281 1BA8  
                                        i2l2346 1636                                          i2l3076 19C8  
                                        i2l3068 103A                                          i2l3149 2912  
                                        i2l3095 088E                                          i2l3087 0574  
                                        i2l2288 1BB8                                          i2l3096 074E  
                                        i2l1922 2948                                          i2l1931 2A4A  
                                        i2l1925 295C                                          i2l2681 1EA6  
                                        i2l2674 1E96                                          i2l8000 15C8  
                                        _INLVLA 0F0D                                          i2l8010 1616  
                                        i2l8002 15E6                                          _INLVLB 0F15  
                                        _INLVLC 0F1D                                          i2l8012 1626  
                                        i2l8004 15F6                                          i2l8020 1E3E  
                                        _INLVLE 0F2A                                          i2l8006 1600  
                                        i2l8030 1E90                                          i2l8022 1E4A  
                                        i2l8008 1606                                          i2l8040 1FCE  
                                        i2l8032 1F98                                          i2l8024 1E58  
                                        i2l8016 1E20                                          i2l8042 1FEC  
                                        i2l8034 1FA6                                          i2l8026 1E76  
                                        i2l8018 1E36                                          i2l8044 2598  
                                        i2l8036 1FBA                                          i2l8300 0CB4  
                                        i2l8028 1E86                                          i2l8046 25A6  
                                        i2l8038 1FCA                                          i2l8310 0CEA  
                                        i2l8302 0CBA                                          i2l8320 0D46  
                                        i2l8312 0CF2                                          i2l8304 0CCA  
                                        i2l8400 1998                                          i2l9120 28FE  
                                        i2l8330 0DD4                                          i2l8314 0CF8  
                                        i2l8322 0D7A                                          i2l8306 0CD6  
                                        i2l8332 0DDA                                          i2l8324 0D94  
                                        i2l8316 0D3A                                          i2l8308 0CDE  
                                        i2l8340 137A                                          i2l9124 299A  
                                        i2l7630 2958                                          i2l8334 0DEA  
                                        i2l8326 0DAA                                          i2l8318 0D40  
                                        i2l8350 13DE                                          i2l8342 1382  
                                        i2l9118 28F8                                          i2l9126 29A6  
                                        i2l8328 0DC4                                          i2l8352 13FC  
                                        i2l8344 138E                                          i2l8360 0F26  
                                 i2putch@txData 0002                                          i2l7634 2A44  
                                        i2l7650 17AE                                          i2l8354 1410  
                                        i2l8346 1392                                          i2l8338 1360  
                                        i2l8370 0F66                                          i2l8362 0F34  
                                        i2l7628 2948                                          i2l7660 1826  
                                        i2l7652 17BE                                          i2l8356 1442  
                                        i2l8348 13D0                                          i2l8380 0FEE  
                                        i2l8372 0F9C                                          i2l8364 0F50  
                                        i2l9308 29CC                                          i2l7654 17CE  
                                        i2l8294 0C66                                          i2l8390 1922  
                                        i2l8358 1446                                          i2l8382 1004  
                                        i2l8374 0FA2                                          i2l8366 0F58  
                                        i2l8710 04EC                                          i2l7656 17D8  
                                        i2l7672 2474                                          i2l8296 0C88  
                                        i2l8392 1946                                          i2l7920 1B44  
                                        i2l8384 101E                                          i2l8376 0FA8  
                                        i2l8368 0F60                                          i2l8720 0542  
                                        i2l8712 04FA                                          i2l7658 17F4  
                                        i2l7674 2480                                          i2l8298 0CA4  
                                        i2l8394 1952                                          i2l7930 1B96  
                                        i2l7922 1B50                                          i2l7914 1B16  
                                        i2l8378 0FDC                                          i2l8730 057A  
                                        i2l8722 0550                                          i2l8714 04FE  
                                        i2l8706 04BC                                          i2l7940 1266  
                                        i2l7676 248E                                          i2l8396 196E  
                                        i2l8388 191A                                          i2l7932 1B98  
                                        i2l7924 1B5E                                          i2l7916 1B26  
                                        i2l8732 05A0                                          i2l8724 0564  
                                        i2l8716 0522                                          i2l8708 04E0  
                                        i2l7950 129C                                          i2l7942 1276  
                                        i2l7678 2492                                          i2l8398 198C  
                                        i2l7934 1BA2                                          i2l7926 1B68  
                                        i2l7918 1B3C                                          i2l8750 0676  
                                        i2l8734 05BE                                          i2l8742 062A  
                                        i2l8726 056C                                          i2l8718 052E  
                                        i2l9630 2770                                          i2l7960 12E4  
                                        i2l7952 12AC                                          i2l7944 127A  
                                        i2l7936 1256                                          i2l7928 1B86  
                                        i2l8760 06FA                                          i2l8752 0698  
                                        i2l8744 0640                                          i2l8736 05E0  
                                        i2l9640 2670                                          i2l9632 2774  
                                        i2l9624 275C                                          i2l7970 1328  
                                        i2l7962 12EE                                          i2l7954 12C2  
                                        i2l7946 1288                                          i2l7938 1258  
                                        i2l8770 0750                                          i2l8762 0718  
                                        i2l8754 06C0                                          i2l8746 065A  
                                        i2l8738 0606                                          i2l8930 2376  
                                        i2l9626 276A                                          i2l9634 277A  
                                        i2l7964 130C                                          i2l7956 12CA  
                                        i2l7972 132E                                          i2l7948 1298  
                                        i2l7980 154E                                          i2l8780 07E0  
                                        i2l8772 0774                                          i2l8932 2386  
                                        i2l9636 277E                                          i2l9628 276C  
                                        i2l7974 133E                                          i2l7966 131C  
                                        i2l7958 12D6                                          i2l7990 1580  
                                        i2l7982 1550                                          i2l8782 0814  
                                        i2l8774 0780                                          i2l8758 06E4  
                                        i2l8934 23A4                                          i2l9638 265C  
                                        i2l7976 134E                                          i2l7968 131E  
                                        i2l7992 1590                                          i2l7984 155E  
                                        i2l8792 085A                                          i2l8776 0788  
                                        i2l8768 0734                                          i2l8928 236A  
                                        i2l7994 15A6                                          i2l7986 156E  
                                        i2l8778 07AC                                          i2l8786 0826  
                                        i2l7996 15AE                                          i2l7988 1572  
                                        i2l8788 0836                                          i2l8796 086A  
                                        i2l9756 268A                                          i2l7998 15BA  
                                        i2l9758 269E                                          i2l9880 24F4  
                                        i2l9882 2500                                          i2l9884 251C  
                                        i2l9886 2520                                          i2l9878 24F0  
                                     ??i2_fputc 0006                                       ??i2_fputs 000E  
                                        _OSCFRQ 0EDE                                   vfpfcnvrt@done 009A  
                                     ??i2_putch 0002                                          _RX1PPS 0EB5  
                                        _TX1REG 0F9A                                          _TX1STA 0F9E  
                                        i2abs@a 000B                                __end_of_dhcpName FDCB  
                                        i2_dtoa 0C66                      ??_ADCC_GetConversionResult 0070  
                                i2___almod@sign 000A                                          i2pad@i 0017  
                                        i2pad@p 0014                                          i2_stoa 1360  
                                        i2_utoa 0F26                                    ??_ENC28_Rcr8 0071  
                                  ??_ENC28_Wcr8 0072                               __end_of_SPI1_Open 17AE  
                           _ETH_SendSystemReset 2A04            __end_of_TMR1_DefaultInterruptHandler 2A68  
                  _TMR1_DefaultInterruptHandler 2A66                                    vfprintf@cfmt 00A6  
                                     ??___aldiv 0076                                       ??___almod 0076  
                                 i2vfprintf@fmt 0035                        _txBufferPtrForRetransmit 0152  
                                     ??___lldiv 0076                                          _ethMAC 01A7  
                                        _arpMap 0217                                       ??___llmod 0076  
                                   ?i2_vfprintf 0034                        ?_EUSART1_SetErrorHandler 006E  
                                        _ip_str 0162                                ?_TMR0_Initialize 0001  
                          read_prec_or_width@ap 006F                                          _old_ip 0144  
                                        clear_0 1A30                                          clear_1 1A3C  
                                        clear_2 1A48                                          clear_3 1A54  
                                        clear_4 1A60                          __end_of_MAC_getAddress 2A04  
                                        _tcpMss 0050                                          _txData 0300  
                                        isa$std 0001                            __end_of_broadcastMAC FDD1  
                                        _printf 2862                                          pad@buf 007F  
              ??_EUSART1_SetOverrunErrorHandler 0070                 ?_EUSART1_SetOverrunErrorHandler 006E  
                                        dtoa@fp 0086                               ??i2_EUSART1_Write 0001  
                               _ADCC_Initialize 262E                                          fputc@c 0070  
                                _PMD_Initialize 29AC                               __end_ofi2___aldiv 1360  
                                        fputs@c 007B                                          fputs@i 007C  
                                  __pdataCOMRAM 0050                                          fputs@s 0078  
                             __end_ofi2___almod 1638                               __end_ofi2___lldiv 1BBA  
                             __end_ofi2___llmod 1EA8                                    __mediumconst FD4E  
                             ??_ETH_CheckLinkUp 007A                            ?_ETH_SendSystemReset 0001  
                                        tblptrh 0FF7                                          tblptrl 0FF6  
                                        tblptru 0FF8                          ??_ADCC_StartConversion 006E  
                                        stoa@cp 007F                                          stoa@fp 0078  
                            __end_of_ENC28_Rcr8 275C                           __end_of_TMR0_CallBack 26B8  
                            __end_of_ENC28_Wcr8 281C                                __end_of_vfprintf 22E2  
                               ??_EUSART1_Write 006E                                          utoa@fp 0086  
      TMR0_SetInterruptHandler@InterruptHandler 006E        TMR1_SetInterruptHandler@InterruptHandler 006E  
                                  ??_ARPV4_Init 0075                         __end_of_TMR1_WriteTimer 2784  
                                  _DHCP_Handler 0000                           __end_of_TMR1_CallBack 268A  
                              ?_TMR1_Initialize 0001                               _SYSTEM_Initialize 26B8  
                                    __accesstop 0060                         __end_of__initialization 1A66  
                                _SPI1_ReadBlock 0000                                       ?_MAC_open 0001  
                            ?_SYSTEM_Initialize 0001                                       ?_ETH_Init 0001  
                                 ___rparam_used 0001                                   ?_Network_Init 0001  
                             i2___llmod@divisor 0005                                   __end_ofi2_abs 25CC  
                                 __end_ofi2_pad 1FFE                               i2___llmod@counter 0009  
                                     ?_LOG_Init 0001                      DHCP_Manage@managementTimer 0124  
                                _network_errors 02C7                                  __pcstackCOMRAM 0001  
                            i2___lldiv@dividend 0001                  __end_of_severityThresholdTable FD7F  
                                  __pidataBANK1 252C                                    __pidataBANK2 2168  
                           ??_SYSTEM_Initialize 00B1                                       ?_TMR0_ISR 0001  
                                     ?_TMR1_ISR 0001                   ?_TMR1_DefaultInterruptHandler 0001  
                                     ?_TCP_Init 0001                                   __end_of_fputc 16F4  
                                 __end_of_fputs 236A                               ??_SPI1_Initialize 006E  
                                    _adc_value0 0160                                      _adc_value1 015E  
                                    _adc_value2 015C                                   __end_of_putch 29EA  
                                   i2printf@fmt 003A                                 ?_MAC_getAddress 006E  
                            __end_of_ARPV4_Init 25FE                          __end_of_PMD_Initialize 29BC  
                         SPI1_ExchangeByte@data 006E                                    _TXPacketSize 0154  
                                  ??_ETH_GetMAC 0075                              _spi1_configuration FDB1  
                         TMR0_ISR@CountCallBack 00BD                                         ??i2_abs 000D  
                                       ??i2_pad 0016                           ??_ETH_SendSystemReset 006F  
                                i2vfpfcnvrt@fmt 0028                                       ?i2_printf 003A  
                   ADCC_StartConversion@channel 006E                           i2EUSART1_Write@txData 0001  
                              ?_TMR0_StartTimer 0001                                _my_tmr0_callback 299A  
                                       ??_fputc 0073                       __end_of_SYSTEM_Initialize 26E2  
                                       ??_fputs 007B                                         ??_putch 006F  
                            i2___lldiv@quotient 0009                                      __pbssBANK0 00B1  
                                    __pbssBANK1 0100                                      __pbssBANK2 0200  
                                    __pbssBANK3 0300                                      ??_MAC_open 0070  
                                     LOG_Init@t 00AC                                       LOG_Init@x 00B0  
                                    ??_ETH_Init 007C                                         ?i2_dtoa 0019  
                                ??_Network_Init 00B1                                  _SPI1_WriteByte 0000  
                                       ?i2_stoa 000B                                         ?i2_utoa 0019  
                                    _macAddress 01E7                              __end_of_ETH_GetMAC 1F2E  
               __end_of_EUSART1_SetErrorHandler 2A42                                      ??_LOG_Init 00AA  
              __end_of_TMR0_SetInterruptHandler 2A1A                                      ??_TMR0_ISR 003D  
                                    ??_TMR1_ISR 0003                         __end_of_ADCC_Initialize 265C  
                                    ??_TCP_Init 006E                                         _ADFLTRH 0F73  
                                       _ADFLTRL 0F72                                      _deviceTime 0138  
                                       _ADPREVH 0F62                                         _ADPREVL 0F61  
                                 _ENC28_BankSel 2062                                         _ADSTPTH 0F69  
                                       _ADSTPTL 0F68                                         ?_printf 03C8  
                               ?_PMD_Initialize 0001          __end_of_EUSART1_SetFramingErrorHandler 2A38  
                _EUSART1_SetFramingErrorHandler 2A2E                                         i2l12160 0076  
                                       i2l12162 0084                                         i2l12154 0042  
                                       i2l12164 0092                                         i2l12156 0052  
                                       i2l12158 0060                                         i2l10990 2602  
                                       i2l10992 261E                                         i2l10994 2622  
                                       i2l10988 25FE                                         _SP1BRGH 0F9C  
                                       _SP1BRGL 0F9B                                 _seconds_counter 0156  
                                       _OSCCON1 0ED8                                         _OSCCON3 0EDA  
                                    _ipv4Header 0184                                      ??i2_printf 003C  
                                       _OSCTUNE 0EDD                                   _ENC28_PhyRead 21B8  
                                       _SSP1ADD 0F93                                      ENC28_Bfc@a 0072  
                                       _SLRCONA 0F0E                                         _SLRCONB 0F16  
                                       _SLRCONC 0F1E                                         _SSP1BUF 0F92  
                                    ENC28_Bfs@a 0072                   __end_of_ADCC_IsConversionDone 2988  
                             ??_ReadADCChannels 00AA                                ?_TMR1_WriteTimer 0001  
                                       i2_fputc 17AE                                         i2_fputs 2474  
                                       i2pad@fp 0011                                         i2_putch 2A42  
                                       i2dtoa@d 001A                                         i2dtoa@i 0025  
                                       i2dtoa@p 0022                                         i2dtoa@s 0024  
                                       i2dtoa@w 0020                                   ??_ENC28_Rcr16 0073  
                                 ??_ENC28_Wcr16 0073                               i2___aldiv@divisor 0005  
                                       i2stoa@l 0014                                         i2stoa@p 0010  
                                       i2stoa@s 000C                               i2___aldiv@counter 0009  
                                       i2utoa@d 001A                                         i2utoa@i 0022  
                                       i2utoa@p 0020                                         i2utoa@w 001E  
                                       __Hparam 0000                                   _tcpDataLength 003F  
                                     _ENC28_Bfc 27D0                                       _ENC28_Bfs 27AA  
                                       __Lparam 0000                                         ___aldiv 114A  
                                       ___almod 1462                                     time@gie_val 0072  
                                       ___lldiv 1A70                                         ___llmod 1D96  
                                     ?_vfprintf 00A2                                       _DHCP_init 29BC  
                                i2vfprintf@cfmt 0038                                      _currentTCB 0041  
                                ?_ENC28_BankSel 0001                                    ?i2_vfpfcnvrt 0027  
                                       __pcinit 19CA                                         __ramtop 0F00  
                             __end_of_ipdb_init 1CFC                                         __ptext0 2204  
                                       __ptext1 2A5E                                         __ptext2 26B8  
                                       __ptext3 22E2                                         __ptext4 281C  
                                       __ptext5 2A10                                         __ptext6 2882  
                                       __ptext7 29AC                                         __ptext8 20C2  
                                       __ptext9 2988                                         _ethData 00B1  
                                       _eth_MAC 004B                  ??_TMR1_DefaultInterruptHandler 0001  
                                     _T1CONbits 0FCF                           _OSCILLATOR_Initialize 2988  
                                       _tcbList 0043                                      _lfsr_value 0052  
                         read_prec_or_width@fmt 006E                                ___aldiv@dividend 006E  
                           _ETH_PacketListReset 2116                              _EUSART1_Initialize 2432  
                      ??_PIN_MANAGER_Initialize 006E                       ?_TMR1_SetInterruptHandler 006E  
                                ?_ENC28_PhyRead 0076                            end_of_initialization 1A66  
                           ?_EUSART1_Initialize 0001                                       _IPV4_Init 2A54  
                                       fputc@fp 0072                     _EUSART1_OverrunErrorHandler 01F1  
                                       fputs@fp 007A                                    _broadcastMAC FDCB  
                             __end_of_spiMaster FD93                                       i2u1032_40 0052  
                                     i2u1032_41 004E                              _read_prec_or_width 1868  
                                     i2u1033_40 0060                                       i2u1033_41 005C  
                                     i2u1034_40 0076                                       i2u1034_41 0072  
                                     i2u1035_40 0084                                       i2u1035_41 0080  
                                     i2u1036_40 0092                                       i2u1036_41 008E  
                               ___lldiv@divisor 0072                            ?_ETH_PacketListReset 0001  
                                 ?_rtcc_handler 0001                               __end_of_rtcc_init 2862  
                                    ?_ENC28_Bfc 0071                                 ___lldiv@counter 007A  
                                    ?_ENC28_Bfs 0071                                    _Control_Byte 00CE  
                               i2_EUSART1_Write 2946                               __end_of_vfpfcnvrt 04BC  
                              ___aldiv@quotient 0078                             _Network_WaitForLink 28DC  
                                       postdec1 0FE5                                         postdec2 0FDD  
                           ?_read_prec_or_width 006E                             __end_of_ENC28_Rcr16 2298  
                                       postinc0 0FEE                                         postinc1 0FE6  
                                       postinc2 0FDE                             __end_of_ENC28_Wcr16 2432  
                              vfpfcnvrt@convarg 009B                               ??_spi_master_open 0070  
                               _ETH_CheckLinkUp 26E2                                ?_ADCC_Initialize 0001  
                                  ??i2_vfprintf 0038                                      ??_vfprintf 00A6  
                                    ?_DHCP_init 0001                                       _SPI1_Open 16F4  
                          ??_EUSART1_Initialize 0070                              _nextSequenceNumber 0130  
                                       strtok@p 014C                        _TMR0_SetInterruptHandler 2A10  
                                    _timersInit 28A0                                    ENC28_Rcr16@a 0075  
                                  ENC28_Rcr16@v 0073                            __end_of_Network_Init 27AA  
                                  ENC28_Wcr16@a 0073                                    ENC28_Wcr16@v 0071  
                                     _TRISCbits 0F8A                                   _rcvPayloadLen 00C3  
                          ?_Network_WaitForLink 0001                            ??_read_prec_or_width 0070  
                                     i2___aldiv 1256                                       i2___almod 154E  
                           EUSART1_Write@txData 006E                                       i2___lldiv 1B16  
                                     i2___llmod 1E20                                      ?_IPV4_Init 0001  
                             i2___almod@divisor 0005                              __end_ofi2_vfprintf 23AE  
                             i2___almod@counter 0009                                 _SPI1_Initialize 2882  
                            i2___llmod@dividend 0001                                  ??_rtcc_handler 0001  
                         ??_ETH_PacketListReset 006E                                  __end_ofi2_dtoa 0E08  
                                __end_ofi2_stoa 1462                                  __end_ofi2_utoa 103C  
                              ??_MAC_getAddress 0070                                 ??_ENC28_BankSel 006F  
                      __end_of_my_tmr0_callback 29AC                    __end_of_INTERRUPT_Initialize 2A66  
                                    ?_SPI1_Open 0001                                     vfpfcnvrt@ap 0096  
                                   vfpfcnvrt@cp 00A0                                     vfpfcnvrt@fp 0094  
                                 __pidataCOMRAM 2A5A                               _UDP_CallBackTable FDD1  
                                     i2fputc@fp 0005                          ?_OSCILLATOR_Initialize 0001  
                                     i2fputs@fp 000D                       ?_ADCC_GetConversionResult 006E  
                               ??_ENC28_PhyRead 0078                                  __end_of_printf 2882  
                          _networkStartPosition 0158                             start_initialization 19CA  
                         ??_Network_WaitForLink 007C                                     __end_of_abs 2598  
                                    ipdb_init@x 006E                                     __end_of_pad 1F98  
                                    ?i2___aldiv 0001                                      ?i2___almod 0001  
                                    ?i2___lldiv 0001                                    i2vfpfcnvrt@c 0031  
                                    ?i2___llmod 0001                                     putch@txData 006F  
                         __end_of_EUSART1_Write 292E                         __end_ofi2_EUSART1_Write 295E  
                               ___llmod@divisor 0072                                     _ENC28_Rcr16 224E  
                                      ??i2_dtoa 001E                                 ___llmod@counter 0076  
                                   _ENC28_Wcr16 23F0                         __end_of_ETH_CheckLinkUp 270C  
                                      ??i2_stoa 000E                                        ??i2_utoa 001E  
                                 ??_ETH_OpenSPI 0073                                     ??_ENC28_Bfc 0072  
                                   ??_ENC28_Bfs 0072                                     vfprintf@fmt 00A3  
                                  i2vfprintf@ap 0037                                 i2vfpfcnvrt@done 002C  
                                  i2vfprintf@fp 0034                                ??_PMD_Initialize 006E  
                     __end_of_UDP_CallBackTable FDD5                                     ??_DHCP_init 0075  
                                   __pdataBANK1 01B7                                     __pdataBANK2 0297  
                   __end_of_ETH_SendSystemReset 2A10                                        ??_printf 00A8  
                                   ?_timersInit 0001                                 _ReadADCChannels 1CFC  
                       i2read_prec_or_width@fmt 0001                           TMR1_ISR@CountCallBack 00C7  
                                 _SPI1_ReadByte 0000                                     __pbssCOMRAM 003D  
                                 __pcstackBANK0 0060                                   __pcstackBANK3 03C8  
                                _hostMacAddress 01AD                         __end_of_SPI1_Initialize 28A0  
                               _SPI1_WriteBlock 0000                                        ?i2_fputc 0003  
                                      ?i2_fputs 000B                                     ??_IPV4_Init 0070  
              ??_EUSART1_SetFramingErrorHandler 0070                 ?_EUSART1_SetFramingErrorHandler 006E  
                                      ?i2_putch 0001                        ETH_PacketListReset@index 0070  
                         _TMR0_InterruptHandler 01ED                                       __pnvBANK1 01ED  
                                     _dhcpState 00BF                          _PIN_MANAGER_Initialize 20C2  
                                     _dtoa$5818 008B                                       __pintcode 0008  
              __end_of_TMR1_SetInterruptHandler 2A24                                   __pmediumconst FD4E  
                                      ?___aldiv 006E                                        ?___almod 006E  
                                      ?___lldiv 006E                                        ?___llmod 006E  
                                   ??_SPI1_Open 006E                             __end_of_ETH_OpenSPI 2946  
                              _ip_database_info 0100                    ??_INTERRUPT_InterruptManager 0060  
                  __end_ofi2_read_prec_or_width 19CA                                ___almod@dividend 006E  
                                     _dirtyTime 00CF                                        _BAUD1CON 0F9F  
                                   __smallconst FD4E              _EUSART1_DefaultOverrunErrorHandler 0000  
                          __end_of_rtcc_handler 29DC                            _EUSART1_ErrorHandler 01EF  
                                     _ipdb_init 1C5C                         _EUSART1_SetErrorHandler 2A38  
                                   ??i2___aldiv 0009                                     ??i2___almod 0009  
                                      _T0CKIPPS 0EA4                                   _TMR0_CallBack 268A  
                                   ??i2___lldiv 0009                                     ??i2___llmod 0009  
                          _INTERRUPT_Initialize 2A62                                       _tcpHeader 00D1  
                         _ADCC_IsConversionDone 2974                                   _TMR1_CallBack 265C  
                               ___aldiv@divisor 0072                               ??_TMR0_Initialize 0070  
                               ___aldiv@counter 0076                                 _spi_master_open 24B4  
                              ?i2_EUSART1_Write 0001                                       _udpHeader 00E5  
       EUSART1_SetErrorHandler@interruptHandler 006E                                        _MAC_open 2A4C  
                                      _ETH_Init 0890                                        _PIE0bits 0EC2  
                                      _PIE4bits 0EC6                                ?_ETH_CheckLinkUp 0001  
                                  _Network_Init 2784                               _nextAvailablePort 00C5  
                    ??_TMR0_SetInterruptHandler 0070                                        i2u510_40 17CE  
                                      i2u510_41 17CA                                        i2u511_40 17F4  
                                      i2u511_41 17F0                                        _PIR0bits 0ECA  
                                      i2u504_40 2958                                        i2u512_40 1826  
                                      i2u504_41 2954                                        i2u512_41 1822  
                                      i2u514_40 24B2                                        i2u514_41 24AE  
                                      i2u611_40 0C76                                        i2u611_41 0C70  
                                      i2u612_40 0C78                                        i2u620_40 137A  
                                      i2u620_41 1376                                        i2u509_40 17BE  
                                      i2u613_40 0C88                                        i2u621_40 13C0  
                                      i2u509_41 17BA                                        i2u613_41 0C84  
                                      _PIR3bits 0ECD                                        i2u621_47 13B6  
                                      i2u614_40 0CB4                                        i2u622_40 13D0  
                                      i2u550_40 1B3C                                        i2u630_40 101E  
                                      i2u614_41 0CB0                                        i2u622_41 13CC  
                                      i2u550_41 1B38                                        i2u630_41 101A  
                                      i2u615_40 0CCA                                        i2u631_40 1946  
                                      i2u623_40 13DE                                        i2u551_40 1B5E  
                                      i2u615_41 0CC6                                        i2u631_41 1942  
                                      i2u623_41 13DA                                        i2u551_41 1B5A  
                                      _PIR4bits 0ECE                                        i2u560_40 1580  
                                      i2u616_40 0D94                                        i2u632_40 19C0  
                                      i2u624_40 13FC                                        i2u552_40 1B86  
                                      i2u720_40 2670                                        i2u560_41 157C  
                                      i2u616_41 0D90                                        i2u632_41 19BC  
                                      i2u624_41 13F8                                        i2u552_41 1B82  
                                      i2u720_41 266C                                        _LOG_Init 1BBA  
                                      i2u553_40 1266                                        i2u561_40 15A6  
                                      i2u617_40 0DAA                                        i2u625_40 1432  
                                      i2u553_41 1262                                        i2u561_41 15A2  
                                      i2u617_41 0DA6                                        i2u625_47 1428  
                                      i2u554_40 1288                                        i2u562_40 15C8  
                                      i2u570_40 25A6                                        i2u618_40 0DC4  
                                      i2u626_40 1460                                        i2u721_48 2676  
                                      i2u554_41 1284                                        i2u562_41 15C4  
                                      i2u570_41 25A2                                        i2u618_41 0DC0  
                                      i2u626_41 145C                                        i2u721_49 2688  
                                      i2u555_40 12C2                                        i2u563_40 15E6  
                                      i2u619_40 0DD4                                        i2u627_40 0F34  
                                      i2u555_41 12BE                                        i2u563_41 15E2  
                                      i2u619_41 0DD0                                        i2u627_41 0F30  
                                      i2u556_40 12E4                                        i2u564_40 1616  
                                      i2u628_40 0FEE                                        i2u660_40 05DC  
                                      i2u556_41 12E0                                        i2u564_41 1612  
                                      i2u628_41 0FEA                                        i2u660_41 05D8  
                                      i2u557_40 130C                                        i2u565_40 1E36  
                                      i2u629_40 1004                                        i2u661_40 0694  
                                      i2u557_41 1308                                        i2u565_41 1E32  
                                      i2u629_41 1000                                        i2u661_41 0690  
                                      i2u558_40 133E                                        i2u566_40 1E58  
                                      i2u662_40 0774                                        i2u558_41 133A  
                                      i2u566_41 1E54                                        i2u662_41 0770  
                                      i2u559_40 155E                                        i2u567_40 1E76  
                                      i2u663_40 07AC                                        i2u727_40 269E  
                                      i2u719_40 276A                                        i2u559_41 155A  
                                      i2u567_41 1E72                                        i2u663_41 07A8  
                                      i2u727_41 269A                                        i2u719_41 2766  
                                      i2u568_40 1FA6                                        i2u664_40 07E0  
                                      i2u736_40 251C                                        i2u568_41 1FA2  
                                      i2u664_41 07DC                                        i2u736_41 2518  
                                      i2u569_40 1FEC                                        i2u665_40 0814  
                                      i2u657_40 04E0                                        i2u728_48 26A4  
                                      i2u569_41 1FE8                                        i2u665_41 0810  
                                      i2u657_41 04DC                                        i2u728_49 26B6  
                                      i2u666_40 0836                                        i2u658_40 0522  
                                      i2u666_41 0832                                        i2u658_41 051E  
                                      i2u659_40 05BE                                        i2u659_41 05BA  
                                     _spiMaster FD7F                                        i2u679_40 23A4  
                                      i2u679_41 23A0                                        i2u881_40 261E  
                                      i2u881_41 261A                                     _ethListSize 004E  
                       __end_of_ReadADCChannels 1D96                                        _SSP1CON1 0F96  
                                      _SSP1CON2 0F97                                        _TMR0_ISR 25FE  
                                      _TMR1_ISR 24F0                                  _ENC28_PhyWrite 23AE  
                                      _TCP_Init 270C                                       _rtcc_init 2840  
            __end_of___secs_to_tm@days_in_month FDB1                      ___secs_to_tm@days_in_month FDA5  
                                      _SSP1STAT 0F95                                 _portUnreachable 015A  
                                     _vfpfcnvrt 00DA                                     ENC28_Rcr8@a 0072  
                                   ENC28_Rcr8@v 0071                                     ENC28_Wcr8@a 0072  
                                   ENC28_Wcr8@v 0071                               ??_TMR1_Initialize 0070  
                                    _ADCON0bits 0F60                                      _ADCON1bits 0F59  
                                    _ADCON2bits 0F5A                                      _ADCON3bits 0F5B  
                                    ?_ipdb_init 0001                                        i2_printf 28F8  
                                      i2pad@buf 0012                                        i2dtoa@fp 0019  
                                ?_TMR0_CallBack 0001                                      vfpfcnvrt@c 009F  
                              ?_SPI1_Initialize 0001                                       copy_data0 19DE  
                                     copy_data1 19FE                                        i2fputc@c 0003  
                                     copy_data2 1A1E                           ?_INTERRUPT_Initialize 0001  
                                      i2fputs@c 000E                                        i2fputs@i 000F  
                                      i2fputs@s 000B                                  ?_TMR1_CallBack 0001  
                            i2___aldiv@dividend 0001                                        i2stoa@cp 0012  
                                      i2stoa@fp 000B                                        i2utoa@fp 0019  
                                    _ADSTATbits 0F65                                      _ENC28_Rcr8 2734  
                                   _ETH_OpenSPI 292E                                      _ENC28_Wcr8 27F6  
                                      __Hrparam 0000                __end_of_ADCC_GetConversionResult 2974  
                        __end_of_ENC28_PhyWrite 23F0                                      vfprintf@ap 00A5  
                                      __Lrparam 0000                                      vfprintf@fp 00A2  
                       ??_OSCILLATOR_Initialize 006E                                      ?_rtcc_init 0001  
                             ??_TMR0_StartTimer 006E                               ?_my_tmr0_callback 0001  
                        i2read_prec_or_width@ap 0002                                      ?_vfpfcnvrt 0094  
                                      _adc_flag 004F                              ??_my_tmr0_callback 003D  
                      _TMR1_SetInterruptHandler 2A1A                              i2___aldiv@quotient 000B  
                                   _tcbListSize 004D                              i2vfpfcnvrt@convarg 002D  
                         _TMR1_InterruptHandler 01F5                       ??_EUSART1_SetErrorHandler 0070  
                        ETH_CheckLinkUp@phstat2 007A                     _EUSART1_DefaultErrorHandler 0000  
                                      _dhcpData 01B7                                      _T0CON0bits 0FD5  
                                      _dhcpName FDB9                         __end_of_spi_master_open 24F0  
                                      __ptext10 2784                                        __ptext11 28A0  
                                      __ptext20 0890                                        __ptext12 2840  
                                      _destPort 0150                                        __ptext21 29F8  
                                      __ptext13 2A1A                                      _T1GCONbits 0FD0  
                                      __ptext30 224E                                        __ptext22 2A04  
                                      __ptext14 270C                                        __ptext31 27AA  
                                      __ptext23 2116                                        __ptext15 28DC  
                                      __ptext40 2062                                        __ptext32 27D0  
                                      __ptext24 292E                                        __ptext16 1BBA  
                                      _arpTimer 01B3                                        __ptext41 28BE  
                                      __ptext33 23AE                                        __ptext25 24B4  
                                      __ptext17 1FFE                                        __ptext50 2298  
                                      __ptext42 2A62                                        __ptext34 27F6  
                                      __ptext26 2A4C                                        __ptext18 2A54  
                                      __ptext51 00DA                                        __ptext43 2432  
                                      __ptext35 23F0                                        __ptext27 16F4  
                                      __ptext19 1C5C                                        __ptext60 1638  
                                      __ptext52 0E08                                        __ptext44 2A24  
                                      __ptext36 29BC                                        __ptext28 26E2  
                                      __ptext61 29DC                                        __ptext53 1D96  
                                      __ptext45 2A2E                                        __ptext37 25CC  
                                      __ptext29 21B8                                        __ptext70 24F0  
                                      __ptext62 2914                                        __ptext54 1A70  
                                      __ptext46 2A38                                        __ptext38 1EA8  
                                      __ptext71 275C                                        __ptext63 2562  
                                      __ptext55 103C                                        __ptext47 262E  
                                      __ptext39 2734                                        __ptext80 236A  
                                      __ptext72 265C                                        __ptext64 1462  
                                      __ptext56 1868                                        __ptext48 1CFC  
                                      __ptext81 04BC                                        __ptext73 2A66  
                                      __ptext65 114A                                        __ptext57 0ABE  
                                      __ptext49 2862                                        __ptext90 17AE  
                                      __ptext82 0F26                                        __ptext74 29CC  
                                      __ptext66 29EA                                        __ptext58 1F2E  
                                      __ptext91 2A42                                        __ptext83 1E20  
                                      __ptext75 25FE                                        __ptext67 2974  
                                      __ptext59 2326                                        __ptext92 2946  
                                      __ptext84 1B16                                        __ptext76 268A  
                                      __ptext68 295E                                        __ptext93 2598  
                                      __ptext85 1360                                        __ptext77 2A68  
                                      __ptext94 154E                                        __ptext86 191A  
                                      __ptext78 299A                                        __ptext95 1256  
                                      __ptext87 0C66                                        __ptext79 28F8  
                                      __ptext88 1F98                                        __ptext89 2474  
                                  _SSP1CON1bits 0F96                                   _sequenceIndex 00D0  
                                    _ARPV4_Init 25CC                          ?_ADCC_IsConversionDone 0001  
                                  time@the_time 0073                                 ___almod@divisor 0072  
                   __end_of_ETH_PacketListReset 2168                                 ___almod@counter 0076  
                                      _lastBank 00CD                               _remoteIpv4Address 0140  
                          i2_read_prec_or_width 191A                                    ?_ENC28_Rcr16 0071  
                                  ?_ENC28_Wcr16 0071            __end_of_TMR0_DefaultInterruptHandler 2A6A  
                  _TMR0_DefaultInterruptHandler 2A68                                      _RC1STAbits 0F9D  
                               ?_ENC28_PhyWrite 0074  EUSART1_SetOverrunErrorHandler@interruptHandler 006E  
                                      isa$xinst 0000                                ?_ReadADCChannels 0001  
                  __end_of_ADCC_StartConversion 29F8                                        int$flags 0054  
                          _rxPacketStatusVector 0134                                        _vfprintf 2298  
            __end_of_INTERRUPT_InterruptManager 00D6                      _INTERRUPT_InterruptManager 0008  
                         __end_of_ENC28_BankSel 20C2                                       printf@fmt 03C8  
                             ??_TMR1_WriteTimer 0003                     _EUSART1_FramingErrorHandler 01F3  
                   __end_of_Network_WaitForLink 28F8                                    ??_timersInit 0077  
                                      _xor_mask 0053                                      _ETH_GetMAC 1EA8  
                             DHCP_Handler@F1305 0297                             Network_Manage@nowPv 013C  
                                    _INTCONbits 0FF2                                     ??_ipdb_init 006E  
                               ??_TMR0_CallBack 003D                           __end_of_ENC28_PhyRead 2204  
                                      gmtime@tm 027F                          ??_INTERRUPT_Initialize 006E  
                          __end_of_xorSequences FDA5                           i2read_prec_or_width@c 0005  
                               ??_TMR1_CallBack 0001                           i2read_prec_or_width@n 0006  
                         _receivedRemoteAddress 00B7                                        intlevel2 0000  
                         ?i2_read_prec_or_width 0001                                ___lldiv@dividend 006E  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 2A2E  
                _EUSART1_SetOverrunErrorHandler 2A24                              __end_of_timersInit 28BE  
                                   ?_ENC28_Rcr8 0001                                     ?_ENC28_Wcr8 0071  
                                  _rtcc_handler 29CC                   ?_TMR0_DefaultInterruptHandler 0001  
                                   ARPV4_Init@x 0075                                  ENC28_BankSel@a 0070  
                                ENC28_BankSel@r 006F                                        printf@ap 00A8  
                                   ??_rtcc_init 0070  EUSART1_SetFramingErrorHandler@interruptHandler 006E  
                      _ADCC_GetConversionResult 295E                                   ??i2_vfpfcnvrt 002A  
                                   ??_vfpfcnvrt 0098                              _eusart1RxLastError 00CC  
                                    _SPI1_Close 0000                          _severityThresholdTable FD4F  
                                    _SSP1DATPPS 0EB8                                      _SSP1CLKPPS 0EB7  
                              ___lldiv@quotient 0076                                   ENC28_Bfc@bits 0071  
                               _TMR0_Initialize 281C                                    ___aldiv@sign 0077  
                                 ENC28_Bfs@bits 0071                                ?_spi_master_open 0001  
                                    _TX1STAbits 0F9E                                     ?_ARPV4_Init 0001  
                __end_of_PIN_MANAGER_Initialize 2116                               ??_ADCC_Initialize 006E  
                                  ___almod@sign 0077                                 _TMR1_Initialize 22E2  
                    __end_of_spi1_configuration FDB9  
